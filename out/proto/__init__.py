# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: cmd/cmd_ability.proto, cmd/cmd_achievement.proto, cmd/cmd_activity.proto, cmd/cmd_aranara_collection.proto, cmd/cmd_avatar.proto, cmd/cmd_battle_pass.proto, cmd/cmd_blossom.proto, cmd/cmd_chat.proto, cmd/cmd_codex.proto, cmd/cmd_coop.proto, cmd/cmd_custom_dungeon.proto, cmd/cmd_draft.proto, cmd/cmd_dungeon.proto, cmd/cmd_fight.proto, cmd/cmd_fish.proto, cmd/cmd_gacha.proto, cmd/cmd_gadget.proto, cmd/cmd_gallery.proto, cmd/cmd_gcg.proto, cmd/cmd_gcg_common.proto, cmd/cmd_group_link.proto, cmd/cmd_h5_activity.proto, cmd/cmd_home.proto, cmd/cmd_hunting.proto, cmd/cmd_investigation.proto, cmd/cmd_item.proto, cmd/cmd_mail.proto, cmd/cmd_match.proto, cmd/cmd_mechanicus.proto, cmd/cmd_miracle_ring.proto, cmd/cmd_misc.proto, cmd/cmd_monster.proto, cmd/cmd_mp.proto, cmd/cmd_multistage_play.proto, cmd/cmd_npc.proto, cmd/cmd_offering.proto, cmd/cmd_op_activity.proto, cmd/cmd_pathfinding.proto, cmd/cmd_player.proto, cmd/cmd_property.proto, cmd/cmd_quest.proto, cmd/cmd_recharge.proto, cmd/cmd_region_search.proto, cmd/cmd_regional_play.proto, cmd/cmd_reminder.proto, cmd/cmd_reputation.proto, cmd/cmd_reunion.proto, cmd/cmd_routine.proto, cmd/cmd_scene.proto, cmd/cmd_scene_play.proto, cmd/cmd_share_cd.proto, cmd/cmd_shop.proto, cmd/cmd_sign_in.proto, cmd/cmd_skill.proto, cmd/cmd_social.proto, cmd/cmd_stat.proto, cmd/cmd_tothemoon.proto, cmd/cmd_tower.proto, cmd/cmd_ugc.proto, cmd/cmd_watcher.proto, cmd/cmd_widget.proto, define.proto, server_only/bin.block.proto, server_only/bin.home.proto, server_only/bin.multiserver.proto, server_only/bin.server.proto, server_only/bin_common.server.proto, server_only/cmd_activity.server.proto, server_only/cmd_gcg.server.proto, server_only/cmd_home.server.proto, server_only/cmd_id_config.proto, server_only/cmd_mail.server.proto, server_only/cmd_match.server.proto, server_only/cmd_misc.server.proto, server_only/cmd_mp.server.proto, server_only/cmd_muip.server.proto, server_only/cmd_offline_op.server.proto, server_only/cmd_player.server.proto, server_only/cmd_recharge.server.proto, server_only/cmd_social.server.proto, server_only/config.server.proto, server_only/enum.server.proto, server_only/redis_data.proto
# plugin: python-betterproto
import builtins
from dataclasses import dataclass
from datetime import datetime
from typing import (
    Dict,
    List,
)

import betterproto


class ENetReason(betterproto.Enum):
    ENET_TIMEOUT = 0
    ENET_CLIENT_CLOSE = 1
    ENET_CLIENT_REBIND_FAIL = 2
    ENET_CLIENT_SHUTDOWN = 3
    ENET_SERVER_RELOGIN = 4
    ENET_SERVER_KICK = 5
    ENET_SERVER_SHUTDOWN = 6
    ENET_NOT_FOUND_SESSION = 7
    ENET_LOGIN_UNFINISHED = 8
    ENET_PACKET_FREQ_TOO_HIGH = 9
    ENET_PING_TIMEOUT = 10
    ENET_TRANFER_FAILED = 11
    ENET_SERVER_KILL_CLIENT = 12
    ENET_CHECK_MOVE_SPEED = 13
    ENET_ACCOUNT_PASSWORD_CHANGE = 14
    ENET_SECURITY_KICK = 15
    ENET_LUA_SHELL_TIMEOUT = 16
    ENET_SDKFAIL_KICK = 17
    ENET_PACKET_COST_TIME = 18
    ENET_PACKET_UNION_FREQ = 19
    ENET_WAIT_SND_MAX = 20
    ENET_CLIENT_CONNECT_KEY = 1234567890
    ENET_CLIENT_EDITOR_CONNECT_KEY = 987654321


class AccountType(betterproto.Enum):
    ACCOUNT_MIHOYO_GUEST = 0
    ACCOUNT_MIHOYO = 1
    ACCOUNT_XIAOMI = 11
    ACCOUNT_COOLPAD = 12
    ACCOUNT_YYB = 13
    ACCOUNT_BILI = 14
    ACCOUNT_HUAWEI = 15
    ACCOUNT_MEIZU = 16
    ACCOUNT_360 = 17
    ACCOUNT_OPPO = 18
    ACCOUNT_VIVO = 19
    ACCOUNT_UC = 20
    ACCOUNT_WANDOJIA = 21
    ACCOUNT_LENOVO = 22
    ACCOUNT_JINLI = 23
    ACCOUNT_BAIDU = 25
    ACCOUNT_DANGLE = 26


class ChannelIdType(betterproto.Enum):
    CHANNEL_ID_NONE = 0
    CHANNEL_ID_MIHOYO = 1
    CHANNEL_ID_XIAOMI = 11
    CHANNEL_ID_COOLPAD = 12
    CHANNEL_ID_YYB = 13
    CHANNEL_ID_BILI = 14
    CHANNEL_ID_HUAWEI = 15
    CHANNEL_ID_MEIZU = 16
    CHANNEL_ID_360 = 17
    CHANNEL_ID_OPPO = 18
    CHANNEL_ID_VIVO = 19
    CHANNEL_ID_UC = 20
    CHANNEL_ID_LENOVO = 22
    CHANNEL_ID_JINLI = 23
    CHANNEL_ID_BAIDU = 25
    CHANNEL_ID_DANGLE = 26


class ServiceType(betterproto.Enum):
    SERVICE_NONE = 0
    SERVICE_CLIENT = 1
    SERVICE_GATE = 2
    SERVICE_GAME = 3
    SERVICE_NODE = 4
    SERVICE_DB = 5
    SERVICE_SNS = 6
    SERVICE_DISPATCH = 7
    SERVICE_MUIP = 8
    SERVICE_OFFLINE_MSG = 9
    SERVICE_MAIL = 10
    SERVICE_MP = 11
    SERVICE_HTTPPROXY = 12
    SERVICE_ACTIVITY = 13
    SERVICE_PATHFINDING = 14
    SERVICE_SOCIAL = 15
    SERVICE_OA = 16
    SERVICE_MATCH = 17
    SERVICE_OFFLINE_OP = 18
    SERVICE_TOTHEMOON = 19
    SERVICE_GCG = 20


class ClientType(betterproto.Enum):
    CLIENT_PRODUCT = 0
    CLIENT_DEV = 1


class RegionType(betterproto.Enum):
    REGION_PRODUCT = 0
    REGION_EXAM = 1
    REGION_DEV_PUB = 2
    REGION_DEV_PRI = 3


class ActionReasonType(betterproto.Enum):
    ACTION_REASON_NONE = 0
    ACTION_REASON_QUEST_ITEM = 1
    ACTION_REASON_QUEST_REWARD = 2
    ACTION_REASON_TRIFLE = 3
    ACTION_REASON_SHOP = 4
    ACTION_REASON_PLAYER_UPGRADE_REWARD = 5
    ACTION_REASON_ADD_AVATAR = 6
    ACTION_REASON_GADGET_ENV_ANIMAL = 7
    ACTION_REASON_MONSTER_ENV_ANIMAL = 8
    ACTION_REASON_COMPOUND = 9
    ACTION_REASON_COOK = 10
    ACTION_REASON_GATHER = 11
    ACTION_REASON_MAIL_ATTACHMENT = 12
    ACTION_REASON_CITY_LEVELUP_RETURN = 15
    ACTION_REASON_CITY_LEVELUP_REWARD = 17
    ACTION_REASON_AREA_EXPLORE_REWARD = 18
    ACTION_REASON_UNLOCK_POINT_REWARD = 19
    ACTION_REASON_DUNGEON_FIRST_PASS = 20
    ACTION_REASON_DUNGEON_PASS = 21
    ACTION_REASON_CHANGE_ELEM_TYPE = 23
    ACTION_REASON_FETTER_OPEN = 25
    ACTION_REASON_DAILY_TASK_SCORE = 26
    ACTION_REASON_DAILY_TASK_HOST = 27
    ACTION_REASON_RAND_TASK_HOST = 28
    ACTION_REASON_EXPEDITION = 29
    ACTION_REASON_GACHA = 30
    ACTION_REASON_COMBINE = 31
    ACTION_REASON_RAND_TASK_GUEST = 32
    ACTION_REASON_DAILY_TASK_GUEST = 33
    ACTION_REASON_FORGE_OUTPUT = 34
    ACTION_REASON_FORGE_RETURN = 35
    ACTION_REASON_INIT_AVATAR = 36
    ACTION_REASON_MONSTER_DIE = 37
    ACTION_REASON_GM = 38
    ACTION_REASON_OPEN_CHEST = 39
    ACTION_REASON_GADGET_DIE = 40
    ACTION_REASON_MONSTER_CHANGE_HP = 41
    ACTION_REASON_SUBFIELD_DROP = 42
    ACTION_REASON_PUSH_TIPS_REWARD = 43
    ACTION_REASON_ACTIVITY_MONSTER_DROP = 44
    ACTION_REASON_ACTIVITY_GATHER = 45
    ACTION_REASON_ACTIVITY_SUBFIELD_DROP = 46
    ACTION_REASON_TOWER_SCHEDULE_REWARD = 47
    ACTION_REASON_TOWER_FLOOR_STAR_REWARD = 48
    ACTION_REASON_TOWER_FIRST_PASS_REWARD = 49
    ACTION_REASON_TOWER_DAILY_REWARD = 50
    ACTION_REASON_HIT_CLIENT_TRIVIAL_ENTITY = 51
    ACTION_REASON_OPEN_WORLD_BOSS_CHEST = 52
    ACTION_REASON_MATERIAL_DELETE_RETURN = 53
    ACTION_REASON_SIGN_IN_REWARD = 54
    ACTION_REASON_OPEN_BLOSSOM_CHEST = 55
    ACTION_REASON_RECHARGE = 56
    ACTION_REASON_BONUS_ACTIVITY_REWARD = 57
    ACTION_REASON_TOWER_COMMEMORATIVE_REWARD = 58
    ACTION_REASON_TOWER_SKIP_FLOOR_REWARD = 59
    ACTION_REASON_RECHARGE_BONUS = 60
    ACTION_REASON_RECHARGE_CARD = 61
    ACTION_REASON_RECHARGE_CARD_DAILY = 62
    ACTION_REASON_RECHARGE_CARD_REPLACE = 63
    ACTION_REASON_RECHARGE_CARD_REPLACE_FREE = 64
    ACTION_REASON_RECHARGE_PLAY_REPLACE = 65
    ACTION_REASON_MP_PLAY_TAKE_REWARD = 66
    ACTION_REASON_ACTIVITY_WATCHER = 67
    ACTION_REASON_SALESMAN_DELIVER_ITEM = 68
    ACTION_REASON_SALESMAN_REWARD = 69
    ACTION_REASON_REBATE = 70
    ACTION_REASON_MCOIN_EXCHANGE_HCOIN = 71
    ACTION_REASON_DAILY_TASK_EXCHANGE_LEGENDARY_KEY = 72
    ACTION_REASON_UNLOCK_PERSON_LINE = 73
    ACTION_REASON_FETTER_LEVEL_REWARD = 74
    ACTION_REASON_BUY_RESIN = 75
    ACTION_REASON_RECHARGE_PACKAGE = 76
    ACTION_REASON_DELIVERY_DAILY_REWARD = 77
    ACTION_REASON_CITY_REPUTATION_LEVEL = 78
    ACTION_REASON_CITY_REPUTATION_QUEST = 79
    ACTION_REASON_CITY_REPUTATION_REQUEST = 80
    ACTION_REASON_CITY_REPUTATION_EXPLORE = 81
    ACTION_REASON_OFFERGING_LEVEL = 82
    ACTION_REASON_ROUTINE_HOST = 83
    ACTION_REASON_ROUTINE_GUEST = 84
    ACTION_REASON_TREASURE_MAP_SPOT_TOKEN = 89
    ACTION_REASON_TREASURE_MAP_BONUS_LEVEL_REWARD = 90
    ACTION_REASON_TREASURE_MAP_MP_REWARD = 91
    ACTION_REASON_CONVERT = 92
    ACTION_REASON_OVERFLOW_TRANSFORM = 93
    ACTION_REASON_ACTIVITY_AVATAR_SELECTION_REWARD = 96
    ACTION_REASON_ACTIVITY_WATCHER_BATCH = 97
    ACTION_REASON_HIT_TREE_DROP = 98
    ACTION_REASON_GET_HOME_LEVELUP_REWARD = 99
    ACTION_REASON_HOME_DEFAULT_FURNITURE = 100
    ACTION_REASON_ACTIVITY_COND = 101
    ACTION_REASON_BATTLE_PASS_NOTIFY = 102
    ACTION_REASON_RELIQUARY_DECOMPOSE = 103
    ACTION_REASON_RECHARGE_GOOGLE_GIFT_GARD = 104
    ACTION_REASON_RECHARGE_CONCERT_PRODUCT = 105
    ACTION_REASON_RECHARGE_CONCERT_PRODUCT_REPLACE = 106
    ACTION_REASON_SEND_CONCERT_PRODUCT_BY_MUIP = 107
    ACTION_REASON_RECHARGE_APPLE_GIFT_GARD = 108
    ACTION_REASON_RECHARGE_PSN_COMPENSATION_PRODUCT = 109
    ACTION_REASON_COMPOUND_BOOST = 110
    ACTION_REASON_WOOD_EXCHANGE = 111
    ACTION_REASON_PLAYER_USE_ITEM = 1001
    ACTION_REASON_DROP_ITEM = 1002
    ACTION_REASON_WEAPON_UPGRADE = 1011
    ACTION_REASON_WEAPON_PROMOTE = 1012
    ACTION_REASON_WEAPON_AWAKEN = 1013
    ACTION_REASON_RELIC_UPGRADE = 1014
    ACTION_REASON_ABILITY = 1015
    ACTION_REASON_DUNGEON_STATUE_DROP = 1016
    ACTION_REASON_OFFLINE_MSG = 1017
    ACTION_REASON_AVATAR_UPGRADE = 1018
    ACTION_REASON_AVATAR_PROMOTE = 1019
    ACTION_REASON_QUEST_ACTION = 1021
    ACTION_REASON_CITY_LEVELUP = 1022
    ACTION_REASON_UPGRADE_SKILL = 1024
    ACTION_REASON_UNLOCK_TALENT = 1025
    ACTION_REASON_UPGRADE_PROUD_SKILL = 1026
    ACTION_REASON_PLAYER_LEVEL_LIMIT_UP = 1027
    ACTION_REASON_DUNGEON_DAILY = 1028
    ACTION_REASON_ITEM_GIVING = 1030
    ACTION_REASON_FORGE_COST = 1031
    ACTION_REASON_INVESTIGATION_REWARD = 1032
    ACTION_REASON_INVESTIGATION_TARGET_REWARD = 1033
    ACTION_REASON_GADGET_INTERACT = 1034
    ACTION_REASON_SEA_LAMP_CI_MATERIAL = 1036
    ACTION_REASON_SEA_LAMP_CONTRIBUTION_REWARD = 1037
    ACTION_REASON_SEA_LAMP_PHASE_REWARD = 1038
    ACTION_REASON_SEA_LAMP_FLY_LAMP = 1039
    ACTION_REASON_AUTO_RECOVER = 1040
    ACTION_REASON_ACTIVITY_EXPIRE_ITEM = 1041
    ACTION_REASON_SUB_COIN_NEGATIVE = 1042
    ACTION_REASON_BARGAIN_DEDUCT = 1043
    ACTION_REASON_BATTLE_PASS_PAID_REWARD = 1044
    ACTION_REASON_BATTLE_PASS_LEVEL_REWARD = 1045
    ACTION_REASON_TRIAL_AVATAR_ACTIVITY_FIRST_PASS_REWARD = 1046
    ACTION_REASON_BUY_BATTLE_PASS_LEVEL = 1047
    ACTION_REASON_GRANT_BIRTHDAY_BENEFIT = 1048
    ACTION_REASON_ACHIEVEMENT_REWARD = 1049
    ACTION_REASON_ACHIEVEMENT_GOAL_REWARD = 1050
    ACTION_REASON_FIRST_SHARE_TO_SOCIAL_NETWORK = 1051
    ACTION_REASON_DESTROY_MATERIAL = 1052
    ACTION_REASON_CODEX_LEVELUP_REWARD = 1053
    ACTION_REASON_HUNTING_OFFER_REWARD = 1054
    ACTION_REASON_USE_WIDGET_ANCHOR_POINT = 1055
    ACTION_REASON_USE_WIDGET_BONFIRE = 1056
    ACTION_REASON_UNGRADE_WEAPON_RETURN_MATERIAL = 1057
    ACTION_REASON_USE_WIDGET_ONEOFF_GATHER_POINT_DETECTOR = 1058
    ACTION_REASON_USE_WIDGET_CLIENT_COLLECTOR = 1059
    ACTION_REASON_USE_WIDGET_CLIENT_DETECTOR = 1060
    ACTION_REASON_TAKE_GENERAL_REWARD = 1061
    ACTION_REASON_ASTER_TAKE_SPECIAL_REWARD = 1062
    ACTION_REASON_REMOVE_CODEX_BOOK = 1063
    ACTION_REASON_OFFERING_ITEM = 1064
    ACTION_REASON_USE_WIDGET_GADGET_BUILDER = 1065
    ACTION_REASON_EFFIGY_FIRST_PASS_REWARD = 1066
    ACTION_REASON_EFFIGY_REWARD = 1067
    ACTION_REASON_REUNION_FIRST_GIFT_REWARD = 1068
    ACTION_REASON_REUNION_SIGN_IN_REWARD = 1069
    ACTION_REASON_REUNION_WATCHER_REWARD = 1070
    ACTION_REASON_SALESMAN_MP_REWARD = 1071
    ACTION_REASION_AVATAR_PROMOTE_REWARD = 1072
    ACTION_REASON_BLESSING_REDEEM_REWARD = 1073
    ACTION_MIRACLE_RING_REWARD = 1074
    ACTION_REASON_EXPEDITION_REWARD = 1075
    ACTION_REASON_TREASURE_MAP_REMOVE_DETECTOR = 1076
    ACTION_REASON_MECHANICUS_DUNGEON_TICKET = 1077
    ACTION_REASON_MECHANICUS_LEVELUP_GEAR = 1078
    ACTION_REASON_MECHANICUS_BATTLE_SETTLE = 1079
    ACTION_REASON_REGION_SEARCH_REWARD = 1080
    ACTION_REASON_UNLOCK_COOP_CHAPTER = 1081
    ACTION_REASON_TAKE_COOP_REWARD = 1082
    ACTION_REASON_FLEUR_FAIR_DUNGEON_REWARD = 1083
    ACTION_REASON_ACTIVITY_SCORE = 1084
    ACTION_REASON_CHANNELLER_SLAB_ONEOFF_DUNGEON_REWARD = 1085
    ACTION_REASON_FURNITURE_MAKE_START = 1086
    ACTION_REASON_FURNITURE_MAKE_TAKE = 1087
    ACTION_REASON_FURNITURE_MAKE_CANCEL = 1088
    ACTION_REASON_FURNITURE_MAKE_FAST_FINISH = 1089
    ACTION_REASON_CHANNELLER_SLAB_LOOP_DUNGEON_FIRST_PASS_REWARD = 1090
    ACTION_REASON_CHANNELLER_SLAB_LOOP_DUNGEON_SCORE_REWARD = 1091
    ACTION_REASON_HOME_LIMITED_SHOP_BUY = 1092
    ACTION_REASON_HOME_COIN_COLLECT = 1093
    ACTION_REASON_SUMMER_TIME_SENTRY_TOWER_REWARD = 1094
    ACTION_REASON_SUMMER_TIME_SPRINT_BOAT_REWARD = 1095
    ACTION_REASON_SUMMER_TIME_BOSS_REWARD = 1096
    ACTION_REASON_SUMMER_TIME_BOMB_REWARD = 1097
    ACTION_REASON_HOME_FETTER_COLLECT = 1098
    ACTION_REASON_ECHO_SHELL_REWARD = 1099
    ACTION_REASON_HOME_EVENT_REWARD = 1100
    ACTION_REASON_BLITZ_RUSH_DUNGEON_REWARD = 1101
    ACTION_REASON_FURNITURE_MAKE_RETURN = 1102
    ACTION_REASON_HOME_PLANT_BOX_GATHER = 1103
    ACTION_REASON_HOME_PLANT_SEED = 1104
    ACTION_REASON_HOME_PLANT_GATHER = 1105
    ACTION_REASON_CHESS_DUNGEON_REWARD = 1106
    ACTION_REASON_GROUP_LINK_BUNDLE_FINISH = 1107
    ACTION_REASON_LUNA_RITE_SACRIFICE = 1108
    ACTION_REASON_LUNA_RITE_TAKE_SACRIFICE_REWARD = 1109
    ACTION_REASON_FISH_BITE = 1110
    ACTION_REASON_FISH_SUCC = 1111
    ACTION_REASON_PLANT_FLOWER_REWARD = 1112
    ACTION_REASON_PLANT_FLOWER_DELIVER_ITEM = 1113
    ACTION_REASON_PLANT_FLOWER_GIVE_FLOWER = 1114
    ACTION_REASON_PLANT_FLOWER_RECV_FLOWER = 1115
    ACTION_REASON_ROGUE_CHALLENGE_SETTLE = 1116
    ACTION_REASON_ROGUE_TAKE_FIRST_PASS_REWARD = 1117
    ACTION_REASON_ROGUE_UPGRADE_SHIKIGAMI = 1118
    ACTION_REASON_ROGUE_REFRESH_CARD = 1119
    ACTION_REASON_USE_WIDGET_CAPTURE_ANIMAL = 1120
    ACTION_REASON_CAPTURE_ANIMAL_SUCC = 1121
    ACTION_REASON_SNOW_DRIFTS = 1122
    ACTION_REASON_WINTER_CAMP_GIVE_ITEM = 1123
    ACTION_REASON_WINTER_CAMP_RECV_ITEM = 1124
    ACTION_REASON_WINTER_CAMP_EXPLORE_REWARD = 1125
    ACTION_REASON_WINTER_CAMP_BATTLE_REWARD = 1126
    ACTION_REASON_LANTERN_RITE_SKIN_REWARD = 1127
    ACTION_REASON_LANTERN_RITE_DUNGEON_REWARD = 1128
    ACTION_REASON_MICHIAE_MATSURI_DARK_CHALLENGE_REWARD = 1129
    ACTION_REASON_MICHIAE_MATSURI_UNLOCK_CRYSTAL_SKILL = 1130
    ACTION_REASON_LANTERN_RITE_GROUP_REWARD = 1131
    ACTION_REASON_COSTUME_DEFAULT_UNLOCK = 1132
    ACTION_REASON_SPICE_ACTIVITY_MAKE_SPICE = 1133
    ACTION_REASON_SPICE_ACTIVITY_PROCESS_FOOD = 1134
    ACTION_REASON_SPICE_ADD_AVATAR_FETTER = 1135
    ACTION_REASON_GACHA_ACTIVITY_ROBOT_REWARD = 1136
    ACTION_REASON_GIVING_TAKE_BACK = 1137
    ACTION_REASON_SUMMER_TIME_V2_DUNGEON_REWARD = 1138
    ACTION_REASON_GRAVEN_INNOCENCE_CAMP_REWARD = 1139
    ACTION_REASON_TREASURE_SEELIE_CHEST_REWARD = 1140
    ACTION_REASON_GCG_TARVERN_CHALLENGE_UNLOCK_CHARACTER = 1141
    ACTION_REASON_GCG_TARVERN_CHALLENGE_FINISH = 1142
    ACTION_REASON_GCG_LEVEL_REWARD = 1143
    ACTION_REASON_GCG_CHALLENGE_FINISH = 1144
    ACTION_REASON_VINTAGE_MARKET_DEAL = 1145
    ACTION_REASON_VINTAGE_MARKET_BARGAIN = 1146
    ACTION_REASON_VINTAGE_MARKET_STORE = 1147
    ACTION_REASON_VINTAGE_PRESENT = 1148
    ACTION_REASON_VINTAGE_OPEN_STORE = 1149
    ACTION_REASON_VINTAGE_STORE_UNLOCK_SLOT = 1150
    ACTION_REASON_VINTAGE_STORE_NPC_EVENT = 1151
    ACTION_REASON_ROCK_BOARD_EXPLORE_REWARD = 1152
    ACTION_REASON_VINTAGE_STORE_DIVIDEND = 1153


class StoreType(betterproto.Enum):
    STORE_NONE = 0
    STORE_PACK = 1
    STORE_DEPOT = 2


class VirtualItem(betterproto.Enum):
    ITEM_VIRTUAL_NONE = 0
    ITEM_VIRTUAL_AVATAR_EXP = 101
    ITEM_VIRTUAL_PLAYER_EXP = 102
    ITEM_VIRTUAL_FETTER_EXP = 105
    ITEM_VIRTUAL_RESIN = 106
    ITEM_VIRTUAL_LEGENDARY_KEY = 107
    ITEM_VIRTUAL_ASTER_PROGRESS = 108
    ITEM_VIRTUAL_ASTER_CREDIT = 109
    ITEM_VIRTUAL_ASTER_TOKEN = 110
    ITEM_VIRTUAL_SHIMMERING_ESSENCE = 111
    ITEM_VIRTUAL_WARM_ESSENCE = 112
    ITEM_VIRTUAL_WONDROUS_ESSENCE = 113
    ITEM_VIRTUAL_TREASURE_MAP_TOKEN = 114
    ITEM_VIRTUAL_SEA_LAMP_COIN = 115
    ITEM_VIRTUAL_SEA_LAMP_POPULARITY = 116
    ITEM_VIRTUAL_MECHANICUS_COIN = 117
    ITEM_VIRTUAL_FLEUR_FAIR_CREDIT = 118
    ITEM_VIRTUAL_FLEUR_FAIR_TOKEN = 119
    ITEM_VIRTUAL_WATER_SPIRIT_COIN = 120
    ITEM_VIRTUAL_HOME_EXP = 121
    ITEM_VIRTUAL_CHANNELLER_SLAB_TOKEN = 122
    ITEM_VIRTUAL_HIDE_AND_SEEK_COIN = 123
    ITEM_VIRTUAL_SUMMER_TIME_DRAFT_WOOD = 124
    ITEM_VIRTUAL_SUMMER_TIME_MINI_HARPASTUM = 125
    ITEM_VIRTUAL_BOUNCE_CONJURING_COIN = 126
    ITEM_VIRTUAL_BLITZ_RUSH_COIN_A = 127
    ITEM_VIRTUAL_BLITZ_RUSH_COIN_B = 128
    ITEM_VIRTUAL_CHESS_EXP = 129
    ITEM_VIRTUAL_CHESS_COIN = 130
    ITEM_VIRTUAL_LUNA_RITE_ATMOSPHERE = 131
    ITEM_VIRTUAL_ROGUELIKE_COIN_A = 132
    ITEM_VIRTUAL_ROGUELIKE_COIN_B = 133
    ITEM_VIRTUAL_ROGUELIKE_COIN_C = 134
    ITEM_VIRTUAL_WINTER_CAMP_COIN_A = 135
    ITEM_VIRTUAL_WINTER_CAMP_COIN_B = 136
    ITEM_VIRTUAL_LANTERN_RITE_COIN_A = 137
    ITEM_VIRTUAL_LANTERN_RITE_COIN_B = 138
    ITEM_VIRTUAL_LANTERN_RITE_COIN_C = 139
    ITEM_VIRTUAL_ROGUE_DIARY_COIN = 140
    ITEM_VIRTUAL_SUMMER_TIME_V2_COIN = 141
    ITEM_VIRTUAL_ROGUE_DIARY_DUNGEON_COIN = 142
    ITEM_VIRTUAL_GRAVEN_INNOCENCE_COIN_A = 143
    ITEM_VIRTUAL_GRAVEN_INNOCENCE_COIN_B = 144
    ITEM_VIRTUAL_TREASURE_SEELIE_COIN = 145
    ITEM_VIRTUAL_VINTAGE_POPULARITY = 147
    ITEM_VIRTUAL_GCG_EXP = 146
    ITEM_VIRTUAL_VINTAGE_MARKET_COIN_A = 148
    ITEM_VIRTUAL_VINTAGE_MARKET_COIN_B = 149
    ITEM_VIRTUAL_VINTAGE_MARKET_COIN_C = 150
    ITEM_VIRTUAL_FUNGUS_FIGHTER_CAPTURE_COIN = 151
    ITEM_VIRTUAL_FUNGUS_FIGHTER_TRAINING_COIN = 152
    ITEM_VIRTUAL_EFFIGY_CHALLENGE_V2_COIN = 153
    ITEM_VIRTUAL_HCOIN = 201
    ITEM_VIRTUAL_SCOIN = 202
    ITEM_VIRTUAL_MCOIN = 203
    ITEM_VIRTUAL_HOME_COIN = 204
    ITEM_VIRTUAL_GCG_COIN = 205
    ITEM_VIRTUAL_INAZUMA_REPUTATION = 314
    ITEM_VIRTUAL_MENGDE_REPUTATION = 315
    ITEM_VIRTUAL_SUMERU_REPUTATION = 316
    ITEM_VIRTUAL_LIYUE_REPUTATION = 317


class AbilityScalarType(betterproto.Enum):
    ABILITY_SCALAR_TYPE_UNKNOW = 0
    ABILITY_SCALAR_TYPE_FLOAT = 1
    ABILITY_SCALAR_TYPE_INT = 2
    ABILITY_SCALAR_TYPE_BOOL = 3
    ABILITY_SCALAR_TYPE_TRIGGER = 4
    ABILITY_SCALAR_TYPE_STRING = 5
    ABILITY_SCALAR_TYPE_UINT = 6


class MotionState(betterproto.Enum):
    MOTION_NONE = 0
    MOTION_RESET = 1
    MOTION_STANDBY = 2
    MOTION_STANDBY_MOVE = 3
    MOTION_WALK = 4
    MOTION_RUN = 5
    MOTION_DASH = 6
    MOTION_CLIMB = 7
    MOTION_CLIMB_JUMP = 8
    MOTION_STANDBY_TO_CLIMB = 9
    MOTION_FIGHT = 10
    MOTION_JUMP = 11
    MOTION_DROP = 12
    MOTION_FLY = 13
    MOTION_SWIM_MOVE = 14
    MOTION_SWIM_IDLE = 15
    MOTION_SWIM_DASH = 16
    MOTION_SWIM_JUMP = 17
    MOTION_SLIP = 18
    MOTION_GO_UPSTAIRS = 19
    MOTION_FALL_ON_GROUND = 20
    MOTION_JUMP_UP_WALL_FOR_STANDBY = 21
    MOTION_JUMP_OFF_WALL = 22
    MOTION_POWERED_FLY = 23
    MOTION_LADDER_IDLE = 24
    MOTION_LADDER_MOVE = 25
    MOTION_LADDER_SLIP = 26
    MOTION_STANDBY_TO_LADDER = 27
    MOTION_LADDER_TO_STANDBY = 28
    MOTION_DANGER_STANDBY = 29
    MOTION_DANGER_STANDBY_MOVE = 30
    MOTION_DANGER_WALK = 31
    MOTION_DANGER_RUN = 32
    MOTION_DANGER_DASH = 33
    MOTION_CROUCH_IDLE = 34
    MOTION_CROUCH_MOVE = 35
    MOTION_CROUCH_ROLL = 36
    MOTION_NOTIFY = 37
    MOTION_LAND_SPEED = 38
    MOTION_MOVE_FAIL_ACK = 39
    MOTION_WATERFALL = 40
    MOTION_DASH_BEFORE_SHAKE = 41
    MOTION_SIT_IDLE = 42
    MOTION_FORCE_SET_POS = 43
    MOTION_QUEST_FORCE_DRAG = 44
    MOTION_FOLLOW_ROUTE = 45
    MOTION_SKIFF_BOARDING = 46
    MOTION_SKIFF_NORMAL = 47
    MOTION_SKIFF_DASH = 48
    MOTION_SKIFF_POWERED_DASH = 49
    MOTION_DESTROY_VEHICLE = 50
    MOTION_FLY_IDLE = 51
    MOTION_FLY_SLOW = 52
    MOTION_FLY_FAST = 53
    MOTION_AIM_MOVE = 54
    MOTION_AIR_COMPENSATION = 55
    MOTION_NUM = 56


class ProtEntityType(betterproto.Enum):
    PROT_ENTITY_NONE = 0
    PROT_ENTITY_AVATAR = 1
    PROT_ENTITY_MONSTER = 2
    PROT_ENTITY_NPC = 3
    PROT_ENTITY_GADGET = 4
    PROT_ENTITY_REGION = 5
    PROT_ENTITY_WEAPON = 6
    PROT_ENTITY_WEATHER = 7
    PROT_ENTITY_SCENE = 8
    PROT_ENTITY_TEAM = 9
    PROT_ENTITY_MASSIVE_ENTITY = 10
    PROT_ENTITY_MP_LEVEL = 11
    PROT_ENTITY_PLAY_TEAM_ENTITY = 12
    PROT_ENTITY_EYE_POINT = 13
    PROT_ENTITY_MAX = 14


class NpcTalkState(betterproto.Enum):
    NPC_TALK_NONE = 0
    NPC_TALK_AUTO = 1
    NPC_TALK_MANUAL = 2


class VehicleSlot(betterproto.Enum):
    VEHICLE_SLOT_OPERATOR = 0


class MonsterBornType(betterproto.Enum):
    MONSTER_BORN_NONE = 0
    MONSTER_BORN_DEFAULT = 1
    MONSTER_BORN_RANDOM = 2


class GadgetBornType(betterproto.Enum):
    GADGET_BORN_NONE = 0
    GADGET_BORN_IN_AIR = 1
    GADGET_BORN_PLAYER = 2
    GADGET_BORN_MONSTER_HIT = 3
    GADGET_BORN_MONSTER_DIE = 4
    GADGET_BORN_GADGET = 5
    GADGET_BORN_GROUND = 6


class MovingPlatformType(betterproto.Enum):
    MOVING_PLATFORM_NONE = 0
    MOVING_PLATFORM_USE_CONFIG = 1
    MOVING_PLATFORM_ABILITY = 2
    MOVING_PLATFORM_ROUTE = 3


class GadgetPlayType(betterproto.Enum):
    GADGET_PLAY_NONE = 0
    GADGET_PLAY_CRUSIBLE = 1


class FoundationStatus(betterproto.Enum):
    FOUNDATION_STATUS_NONE = 0
    FOUNDATION_STATUS_INIT = 1
    FOUNDATION_STATUS_BUILDING = 2
    FOUNDATION_STATUS_BUILT = 3


class ChangHpReason(betterproto.Enum):
    CHANGE_HP_NONE = 0
    CHANGE_HP_SUB_AVATAR = 1
    CHANGE_HP_SUB_MONSTER = 2
    CHANGE_HP_SUB_GEAR = 3
    CHANGE_HP_SUB_ENVIR = 4
    CHANGE_HP_SUB_FALL = 5
    CHANGE_HP_SUB_DRAWN = 6
    CHANGE_HP_SUB_ABYSS = 7
    CHANGE_HP_SUB_ABILITY = 8
    CHANGE_HP_SUB_SUMMON = 9
    CHANGE_HP_SUB_SCRIPT = 10
    CHANGE_HP_SUB_GM = 11
    CHANGE_HP_SUB_KILL_SELF = 12
    CHANGE_HP_SUB_CLIMATE_COLD = 13
    CHANGE_HP_SUB_STORM_LIGHTNING = 14
    CHANGE_HP_SUB_KILL_SERVER_GADGET = 15
    CHANGE_HP_SUB_REPLACE = 16
    CHANGE_HP_SUB_PLAYER_LEAVE = 17
    CHANGE_HP_ATTACK_BY_ENERGY = 18
    CHANGE_HP_ATTACK_BY_RECYCLE = 19
    CHANGE_HP_BY_LUA = 51
    CHANGE_HP_ADD_ABILITY = 101
    CHANGE_HP_ADD_ITEM = 102
    CHANGE_HP_ADD_REVIVE = 103
    CHANGE_HP_ADD_UPGRADE = 104
    CHANGE_HP_ADD_STATUE = 105
    CHANGE_HP_ADD_BACKGROUND = 106
    CHANGE_HP_ADD_GM = 107
    CHANGE_HP_ADD_TRIAL_AVATAR_ACTIVITY = 108
    CHANGE_HP_ADD_ROUGUELIKE_SPRING = 109


class PlayerDieType(betterproto.Enum):
    PLAYER_DIE_NONE = 0
    PLAYER_DIE_KILL_BY_MONSTER = 1
    PLAYER_DIE_KILL_BY_GEAR = 2
    PLAYER_DIE_FALL = 3
    PLAYER_DIE_DRAWN = 4
    PLAYER_DIE_ABYSS = 5
    PLAYER_DIE_GM = 6
    PLAYER_DIE_CLIMATE_COLD = 7
    PLAYER_DIE_STORM_LIGHTING = 8


class PlayerDieOption(betterproto.Enum):
    DIE_OPT_NONE = 0
    DIE_OPT_REPLAY = 1
    DIE_OPT_CANCEL = 2
    DIE_OPT_REVIVE = 3


class FetterState(betterproto.Enum):
    FETTER_STATE_NONE = 0
    FETTER_STATE_NOT_OPEN = 1
    FETTER_STATE_OPEN = 2
    FETTER_STATE_FINISH = 3
    FETTER_STATE_CONCEAL = 4


class AvatarExpeditionState(betterproto.Enum):
    AVATAR_EXPEDITION_NONE = 0
    AVATAR_EXPEDITION_DOING = 1
    AVATAR_EXPEDITION_FINISH_WAIT_REWARD = 2
    AVATAR_EXPEDITION_CALLBACK_WAIT_REWARD = 3
    AVATAR_EXPEDITION_LOCKED = 4


class AvatarType(betterproto.Enum):
    AVATAR_TYPE_NONE = 0
    AVATAR_TYPE_FORMAL = 1
    AVATAR_TYPE_TRIAL = 2
    AVATAR_TYPE_MIRROR = 3


class EventTriggerType(betterproto.Enum):
    EVENT_TRIGGER_NONE = 0
    EVENT_TRIGGER_ENTER_FORCE = 1


class MailCollectState(betterproto.Enum):
    MAIL_COLLECTIBLE_UNKONW = 0
    MAIL_NOT_COLLECTIBLE = 1
    MAIL_COLLECTIBLE_UNCOLLECTED = 2
    MAIL_COLLECTIBLE_COLLECTED = 3


class MpSettingType(betterproto.Enum):
    MP_SETTING_NO_ENTER = 0
    MP_SETTING_ENTER_FREELY = 1
    MP_SETTING_ENTER_AFTER_APPLY = 2


class MathExpressionType(betterproto.Enum):
    MATH_EXPR_NONE = 0
    MATH_EXPR_LEVEL = 1
    MATH_EXPR_REGISTER_TIME = 2
    MATH_EXPR_LAST_LOGIN_TIME = 3
    MATH_EXPR_TOTAL_LOGIN_DAYS = 4
    MATH_EXPR_PLATFORM = 5


class LoginRewardConfigType(betterproto.Enum):
    LOGIN_REWARD_IMMEDIDATE = 0
    LOGIN_REWARD_FIRST = 1


class LanguageType(betterproto.Enum):
    LANGUAGE_NONE = 0
    LANGUAGE_EN = 1
    LANGUAGE_SC = 2
    LANGUAGE_TC = 3
    LANGUAGE_FR = 4
    LANGUAGE_DE = 5
    LANGUAGE_ES = 6
    LANGUAGE_PT = 7
    LANGUAGE_RU = 8
    LANGUAGE_JP = 9
    LANGUAGE_KR = 10
    LANGUAGE_TH = 11
    LANGUAGE_VN = 12
    LANGUAGE_ID = 13
    LANGUAGE_TR = 14
    LANGUAGE_IT = 15


class PlatformType(betterproto.Enum):
    EDITOR = 0
    IOS = 1
    ANDROID = 2
    PC = 3
    PS4 = 4
    SERVER = 5
    CLOUD_ANDROID = 6
    CLOUD_IOS = 7
    PS5 = 8
    CLOUD_WEB = 9
    CLOUD_TV = 10
    CLOUD_MAC = 11
    CLOUD_PC = 12
    CLOUD_THIRD_PARTY_MOBILE = 13
    CLOUD_THIRD_PARTY_PC = 14


class MapMarkPointType(betterproto.Enum):
    NPC = 0
    QUEST = 1
    SPECIAL = 2
    MINE = 3
    COLLECTION = 4
    MONSTER = 5
    FISH_POOL = 6


class MapMarkFromType(betterproto.Enum):
    MAP_MARK_FROM_TYPE_NOE = 0
    MAP_MARK_FROM_TYPE_MONSTER = 1
    MAP_MARK_FROM_TYPE_QUEST = 2


class DungeonCandidateTeamInviteState(betterproto.Enum):
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_NONE = 0
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_SEND = 1
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_ACCEPT = 2
    DUNGEON_CANDIDATE_TEAM_INVITE_STATE_REFUSE = 3


class MonsterGuestBanDrop(betterproto.Enum):
    MONSTER_GUEST_BAN_NONE = 0
    MONSTER_GUEST_BAN_DIE_EXP = 1
    MONSTER_GUEST_BAN_DIE_LUA = 2
    MONSTER_GUEST_BAN_DIE_EXCEL = 4
    MONSTER_GUEST_BAN_DIE_ACTIVITY = 8
    MONSTER_GUEST_BAN_DROP_HP = 16
    MONSTER_GUEST_BAN_SUBFIELD = 32


class GadgetGuestBanDrop(betterproto.Enum):
    GADGET_GUEST_BAN_NONE = 0
    GADGET_GUEST_BAN_DIE_LUA = 1
    GADGET_GUEST_BAN_SUBFIELD = 2


class GroupLoadStrategy(betterproto.Enum):
    GROUP_LOAD_NONE = 0
    GROUP_LOAD_SINGLE = 1
    GROUP_LOAD_MULTI = 2
    GROUP_LOAD_ALL = 3


class MatchType(betterproto.Enum):
    MATCH_TYPE_NONE = 0
    MATCH_TYPE_DUNGEON = 1
    MATCH_TYPE_MP_PLAY = 2
    MATCH_TYPE_MECHANICUS = 3
    MATCH_TYPE_GENERAL = 4
    MATCH_TYPE_GCG = 5


class MpPlayType(betterproto.Enum):
    MP_PLAY_NONE = 0
    MP_PLAY_DUNGEON = 1
    MP_PLAY_CRUCIBLE = 2


class OpActivityType(betterproto.Enum):
    OP_ACTIVITY_NONE = 0
    OP_ACTIVITY_SIGN_IN = 1
    OP_ACTIVITY_BONUS = 2
    OP_ACTIVITY_TRAVEL_BUSINESS = 3
    OP_ACTIVITY_CRUCIBLE = 4


class MatchReason(betterproto.Enum):
    MATCH_NONE = 0
    MATCH_FINISH = 1
    MATCH_PLAYER_CANCEL = 2
    MATCH_TIMEOUT = 3
    MATCH_PLAYER_CONFIRM = 4
    MATCH_FAILED = 5
    MATCH_SYSTEM_ERROR = 6
    MATCH_INTERRUPTED = 7
    MATCH_MP_UNAVAILABLE = 8
    MATCH_CONFIRM_TIMEOUT = 9


class LuaShellNotifyType(betterproto.Enum):
    LUASHELL_NOTIFY = 0
    LUASHELL_HIDE = 1


class LuaShellType(betterproto.Enum):
    LUASHELL_NONE = 0
    LUASHELL_NORMAL = 1
    LUASHELL_SECURITY = 2
    LUASHELL_SHELL_CODE = 3


class SalesmanStatusType(betterproto.Enum):
    SALESMAN_STATUS_NONE = 0
    SALESMAN_STATUS_UNSTARTED = 1
    SALESMAN_STATUS_STARTED = 2
    SALESMAN_STATUS_DELIVERED = 3


class SecurityCheckType(betterproto.Enum):
    SECURITY_CHECK_NONE = 0
    SECURITY_CHECK_LOGIN = 1


class CodexType(betterproto.Enum):
    CODEX_NONE = 0
    CODEX_QUEST = 1
    CODEX_WEAPON = 2
    CODEX_ANIMAL = 3
    CODEX_MATERIAL = 4
    CODEX_BOOKS = 5
    CODEX_PUSHTIPS = 6
    CODEX_VIEW = 7
    CODEX_RELIQUARY = 8


class SegmentCrcModuleType(betterproto.Enum):
    MODULE_NONE = 0
    PC_UNITYPLAYER = 1
    PC_USERASSEMBLY = 2
    PC_XLUA = 3
    ANDROID_LIBIL2CPP = 11
    ANDROID_LIBUNITY = 12
    ANDROID_LIBXLUA = 13
    IOS_HK4E = 21


class ExchangeMcoinType(betterproto.Enum):
    EXCHANGEMCOIN_NONE = 0
    EXCHANGEMCOIN_PCM_TO_PSN = 1
    EXCHANGEMCOIN_PSN_TO_PCM = 2


class ExploreType(betterproto.Enum):
    EXPLORE_NONE = 0
    EXPLORE_CRYSTAL = 1
    EXPLORE_CHEST = 2
    EXPLORE_TEMPLE = 3
    EXPLORE_TELEPORT = 4


class AsterLittleStageState(betterproto.Enum):
    ASTER_LITTLE_STAGE_NONE = 0
    ASTER_LITTLE_STAGE_UNSTARTED = 1
    ASTER_LITTLE_STAGE_STARTED = 2
    ASTER_LITTLE_STAGE_FINISHED = 3


class HuntingOfferState(betterproto.Enum):
    HUNTING_OFFER_STATE_NONE = 0
    HUNTING_OFFER_STATE_STARTED = 1
    HUNTING_OFFER_STATE_UNSTARTED = 2
    HUNTING_OFFER_STATE_SUCC = 3


class RegionSearchState(betterproto.Enum):
    REGION_SEARCH_NONE = 0
    REGION_SEARCH_UNSTARTED = 1
    REGION_SEARCH_STARTED = 2
    REGION_SEARCH_WAIT_REWARD = 3
    REGION_SEARCH_FINISHED = 4


class PlayerTag(betterproto.Enum):
    PLAYER_TAG_NORMAL = 0
    PLAYER_TAG_SUB_ACCOUNT = 3
    PLAYER_TAG_SUB_ACCOUNT_TRANS_TO_NORMAL = 5


class FeatureBlockType(betterproto.Enum):
    FEATURE_BLOCK_TYPE_NONE = 0
    FEATURE_BLOCK_TYPE_CHAT = 1
    FEATURE_BLOCK_TYPE_MP = 2
    FEATRURE_BLOCK_TYPE_CRC = 3
    FEATURE_BLOCK_TYPE_HOME = 4


class ReportReasonType(betterproto.Enum):
    REPORT_REASON_NONE = 0
    REPORT_REASON_DECEPTIVE_ADS = 1
    REPORT_REASON_ABUSING = 2
    REPORT_REASON_CHEAT = 3
    REPORT_REASON_POLITICAL = 4
    REPORT_REASON_OTHER = 5
    REPORT_REASON_HOME = 6


class MapMarkTipsType(betterproto.Enum):
    MARK_TIPS_DUNGEON_ELEMENT_TRIAL = 0


class ExpeditionState(betterproto.Enum):
    EXPEDITION_NONE = 0
    EXPEDITION_STARTED = 1
    EXPEDITION_FINISHED = 2
    EXPEDITION_REWARDED = 3
    EXPEDITION_LOCKED = 4


class EnterReason(betterproto.Enum):
    ENTER_REASON_NONE = 0
    ENTER_REASON_LOGIN = 1
    ENTER_REASON_DUNGEON_REPLAY = 11
    ENTER_REASON_DUNGEON_REVIVE_ON_WAYPOINT = 12
    ENTER_REASON_DUNGEON_ENTER = 13
    ENTER_REASON_DUNGEON_QUIT = 14
    ENTER_REASON_GM = 21
    ENTER_REASON_QUEST_ROLLBACK = 31
    ENTER_REASON_REVIVAL = 32
    ENTER_REASON_PERSONAL_SCENE = 41
    ENTER_REASON_TRANS_POINT = 42
    ENTER_REASON_CLIENT_TRANSMIT = 43
    ENTER_REASON_FORCE_DRAG_BACK = 44
    ENTER_REASON_TEAM_KICK = 51
    ENTER_REASON_TEAM_JOIN = 52
    ENTER_REASON_TEAM_BACK = 53
    ENTER_REASON_MUIP = 54
    ENTER_REASON_DUNGEON_INVITE_ACCEPT = 55
    ENTER_REASON_LUA = 56
    ENTER_REASON_ACTIVITY_LOAD_TERRAIN = 57
    ENTER_REASON_HOST_FROM_SINGLE_TO_MP = 58
    ENTER_REASON_MP_PLAY = 59
    ENTER_REASON_ANCHOR_POINT = 60
    ENTER_REASON_LUA_SKIP_UI = 61
    ENTER_REASON_RELOAD_TERRAIN = 62
    ENTER_REASON_DRAFT_TRANSFER = 63
    ENTER_REASON_ENTER_HOME = 64
    ENTER_REASON_EXIT_HOME = 65
    ENTER_REASON_CHANGE_HOME_MODULE = 66
    ENTER_REASON_GALLERY = 67
    ENTER_REASON_HOME_SCENE_JUMP = 68
    ENTER_REASON_HIDE_AND_SEEK = 69
    ENTER_REASON_SUMMER_TIME_MIST_ZONE = 70
    ENTER_REASON_FORCE_QUIT_SCENE = 71
    ENTER_REASON_HERO_COURSE = 72
    ENTER_REASON_TRANS_CLIMATE = 73
    ENTER_REASON_SUMMER_TIME_BOAT_RESTART = 74
    ENTER_REASON_TSURUMI_MIST_CLIMATE = 75
    ENTER_REASON_TSURUMI_REGIONAL_MIST_CLIMATE = 76
    ENTER_REASON_WINTER_CAMP_RESTART = 77
    ENTER_REASON_TALK_EXEC_TRANSFER = 78
    ENTER_REASON_SEALAMP_BOAT_RESTART = 79
    ENTER_REASON_SEALAMP_BOAT_BACK = 80
    ENTER_REASON_CHALLENGE_INTERRUPT_BACK = 81
    ENTER_REASON_IRODORI_MASTER_TRANSFER = 82
    ENTER_REASON_GALLERY_BACK = 83
    ENTER_REASON_SUMMER_TIME_V2_BOAT_RESTART = 84
    ENTER_REASON_ISLAND_PARTY_GALLERY_START_FAILED = 85
    ENTER_REASON_GRAVEN_INNOCENCE_RACE_RESTART = 86
    ENTER_REASON_VINTAGE_HUNTING_TRANSFER = 87
    ENTER_REASON_FUNGUS_FIGHTER_TRANSFER = 88


class FriendEnterHomeOption(betterproto.Enum):
    FRIEND_ENTER_HOME_OPTION_NEED_CONFIRM = 0
    FRIEND_ENTER_HOME_OPTION_REFUSE = 1
    FRIEND_ENTER_HOME_OPTION_DIRECT = 2


class ChatChannel(betterproto.Enum):
    CHANNEL_TEAM = 0
    CHANNEL_FRIEND = 1
    CHANNEL_NONE = 2
    CHANNEL_HIDEANDSEEK = 3
    CHANNEL_ALL = 10
    CHANNEL_TEST = 100


class LeaveWorldReason(betterproto.Enum):
    LEAVE_WORLD_REASON_NONE = 0
    LEAVE_WORLD_REASON_LOGOUT = 1
    LEAVE_WORLD_REASON_BACK_MY_WORLD = 2
    LEAVE_WORLD_REASON_KICK_BY_OWNER = 3


class DungeonCandidateTeamPlayerState(betterproto.Enum):
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_IDLE = 0
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_CHANGING_AVATAR = 1
    DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_READY = 2


class CreateGadgetReason(betterproto.Enum):
    CREATE_GADGET_NONE = 0
    CREATE_GADGET_PLAYER = 1
    CREATE_GADGET_MISSION = 2
    CREATE_GADGET_GM = 3


class LunaRiteHintStatusType(betterproto.Enum):
    LUNA_RITE_HINT_STATUS_DEFAULT = 0
    LUNA_RITE_HINT_STATUS_NO_COUNT = 1
    LUNA_RITE_HINT_STATUS_FINISH = 2


class LunaRiteHintPointType(betterproto.Enum):
    LUNA_RITE_HINT_TYPE_NONE = 0
    LUNA_RITE_HINT_TYPE_RUNE = 1
    LUNA_RITE_HINT_TYPE_CHEST = 2


class GroupVariableType(betterproto.Enum):
    VARIABLE_TYPE_NORMAL = 0
    VARIABLE_TYPE_LOGIC_STATE = 1


class ClientInputType(betterproto.Enum):
    CLIENT_INPUT_NONE = 0
    CLIENT_INPUT_KEYBORD_MOUSE = 1
    CLIENT_INPUT_GAMEPAD = 2
    CLIENT_INPUT_TOUCH_PANEL = 3


class CustomDungeonEvent(betterproto.Enum):
    CUSTOM_DUNGEON_EVENT_NONE = 0
    CUSTOM_DUNGEON_EVENT_OFFICIAL_RESTART = 1
    CUSTOM_DUNGEON_EVENT_OUT_STUCK = 2


class PlatformCategory(betterproto.Enum):
    PLATFORM_CATEGORY_NONE = 0
    PLATFORM_CATEGORY_PCM = 1
    PLATFORM_CATEGORY_PSN = 2


class SceneidConstValue(betterproto.Enum):
    SCENEID_CONST_NONE = 0
    SCENEID_CONST_MAIN = 3
    SCENEID_CONST_ISLAND = 4
    SCENEID_CONST_ENKANOMIYA = 5
    SCENEID_CONST_MICHIAE_MATSURI = 7
    SCENEID_CONST_28_ISLAND = 9


class CityidConstValue(betterproto.Enum):
    CITYID_CONST_NONE = 0
    CITYID_CONST_MENGDE = 1
    CITYID_CONST_LIYUE = 2
    CITYID_CONST_DAOQI = 3
    CITYID_CONST_XUMI = 4


class AranaraCollectionState(betterproto.Enum):
    ARANARA_COLLECTION_STATE_NONE = 0
    ARANARA_COLLECTION_STATE_COLLECTABLE = 1
    ARANARA_COLLECTION_STATE_COLLECTED = 2
    ARANARA_COLLECTION_STATE_FINISHED = 3


class AuditState(betterproto.Enum):
    AUDIT_NONE = 0
    AUDIT_WAITING = 1
    AUDIT_FAILED = 2


class TrialAvatarGrantRecordGrantReason(betterproto.Enum):
    INVALID = 0
    GRANT_BY_QUEST = 1
    GRANT_BY_TRIAL_AVATAR_ACTIVITY = 2
    GRANT_BY_DUNGEON_ELEMENT_CHALLENGE = 3
    GRANT_BY_MIST_TRIAL_ACTIVITY = 4
    GRANT_BY_SUMO_ACTIVITY = 5
    GRANT_BY_POTION_ACTIVITY = 6
    GRANT_BY_CRYSTAL_LINK_ACTIVITY = 7
    GRANT_BY_IRODORI_MASTER = 8
    GRANT_BY_GM = 9
    GRANT_BY_INSTABLE_SPRAY_ACTIVITY = 10
    GRANT_BY_MUQADAS_POTION_ACTIVITY = 11
    GRANT_BY_VINTAGE_HUNTING = 12
    GRANT_BY_CHAR_AMUSEMENT = 13


class ForwardType(betterproto.Enum):
    FORWARD_LOCAL = 0
    FORWARD_TO_ALL = 1
    FORWARD_TO_ALL_EXCEPT_CUR = 2
    FORWARD_TO_HOST = 3
    FORWARD_TO_ALL_GUEST = 4
    FORWARD_TO_PEER = 5
    FORWARD_TO_PEERS = 6
    FORWARD_ONLY_SERVER = 7
    FORWARD_TO_ALL_EXIST_EXCEPT_CUR = 8


class HitColliderType(betterproto.Enum):
    HIT_COLLIDER_INVALID = 0
    HIT_COLLIDER_HIT_BOX = 1
    HIT_COLLIDER_WET_HIT_BOX = 2
    HIT_COLLIDER_HEAD_BOX = 3


class CombatTypeArgument(betterproto.Enum):
    COMBAT_NONE = 0
    COMBAT_EVT_BEING_HIT = 1
    COMBAT_ANIMATOR_STATE_CHANGED = 2
    COMBAT_FACE_TO_DIR = 3
    COMBAT_SET_ATTACK_TARGET = 4
    COMBAT_RUSH_MOVE = 5
    COMBAT_ANIMATOR_PARAMETER_CHANGED = 6
    ENTITY_MOVE = 7
    SYNC_ENTITY_POSITION = 8
    COMBAT_STEER_MOTION_INFO = 9
    COMBAT_FORCE_SET_POS_INFO = 10
    COMBAT_COMPENSATE_POS_DIFF = 11
    COMBAT_MONSTER_DO_BLINK = 12
    COMBAT_FIXED_RUSH_MOVE = 13
    COMBAT_SYNC_TRANSFORM = 14
    COMBAT_LIGHT_CORE_MOVE = 15
    COMBAT_BEING_HEALED_NTF = 16
    COMBAT_SKILL_ANCHOR_POSITION_NTF = 17
    COMBAT_GRAPPLING_HOOK_MOVE = 18


class EvtBeingHitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 372
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAnimatorParameterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 398
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HostPlayerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 312
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EvtDoSkillSuccNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 335
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtCreateGadgetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 307
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtDestroyGadgetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 321
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtFaceToEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 303
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtFaceToDirNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 390
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtCostStaminaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 373
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtSetAttackTargetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 399
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAnimatorStateChangedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 331
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtRushMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 375
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBulletHitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 348
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBulletDeactiveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 397
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtEntityStartDieEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 381
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBulletMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 365
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarEnterFocusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 304
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarExitFocusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 393
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarUpdateFocusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 327
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EntityAuthorityChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 394
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarBuffAddNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 388
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarBuffDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 326
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MonsterAlertChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 363
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MonsterForceAlertNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 395
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarEnterElementViewNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 334
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TriggerCreateGadgetToEquipPartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 350
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EvtEntityRenderersChangedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 343
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AnimatorForceSetAirMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 374
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAiSyncSkillCdNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 376
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBeingHitsCombineNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 346
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarSitDownNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 324
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarStandUpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 356
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CreateMassiveEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 342
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CreateMassiveEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 330
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CreateMassiveEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 367
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DestroyMassiveEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 358
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MassiveEntityStateChangedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 370
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SyncTeamEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 317
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DelTeamEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 302
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CombatInvocationsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 319
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ServerBuffChangeNotifyServerBuffChangeType(betterproto.Enum):
    ADD_SERVER_BUFF = 0
    DEL_SERVER_BUFF = 1


class ServerBuffChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 361
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EvtAiSyncCombatThreatInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 329
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MassiveEntityElementOpBatchNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 357
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EntityAiSyncNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 400
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LuaSetOptionNotifyLuaOptionType(betterproto.Enum):
    LUA_OPTION_NONE = 0
    LUA_OPTION_PLAYER_INPUT = 1


class LuaSetOptionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 316
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EvtDestroyServerGadgetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 387
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EntityAiKillSelfNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 340
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarLockChairReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 318
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtAvatarLockChairRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 366
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReportFightAntiCheatNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 368
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EvtBeingHealedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 333
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EvtLocalGadgetOwnerLeaveSceneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 384
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AbilityInvokeArgument(betterproto.Enum):
    ABILITY_NONE = 0
    ABILITY_META_MODIFIER_CHANGE = 1
    ABILITY_META_COMMAND_MODIFIER_CHANGE_REQUEST = 2
    ABILITY_META_SPECIAL_FLOAT_ARGUMENT = 3
    ABILITY_META_OVERRIDE_PARAM = 4
    ABILITY_META_CLEAR_OVERRIDE_PARAM = 5
    ABILITY_META_REINIT_OVERRIDEMAP = 6
    ABILITY_META_GLOBAL_FLOAT_VALUE = 7
    ABILITY_META_CLEAR_GLOBAL_FLOAT_VALUE = 8
    ABILITY_META_ABILITY_ELEMENT_STRENGTH = 9
    ABILITY_META_ADD_OR_GET_ABILITY_AND_TRIGGER = 10
    ABILITY_META_SET_KILLED_SETATE = 11
    ABILITY_META_SET_ABILITY_TRIGGER = 12
    ABILITY_META_ADD_NEW_ABILITY = 13
    ABILITY_META_REMOVE_ABILITY = 14
    ABILITY_META_SET_MODIFIER_APPLY_ENTITY = 15
    ABILITY_META_MODIFIER_DURABILITY_CHANGE = 16
    ABILITY_META_ELEMENT_REACTION_VISUAL = 17
    ABILITY_META_SET_POSE_PARAMETER = 18
    ABILITY_META_UPDATE_BASE_REACTION_DAMAGE = 19
    ABILITY_META_TRIGGER_ELEMENT_REACTION = 20
    ABILITY_META_LOSE_HP = 21
    ABILITY_META_DURABILITY_IS_ZERO = 22
    ABILITY_ACTION_TRIGGER_ABILITY = 50
    ABILITY_ACTION_SET_CRASH_DAMAGE = 51
    ABILITY_ACTION_EFFECT = 52
    ABILITY_ACTION_SUMMON = 53
    ABILITY_ACTION_BLINK = 54
    ABILITY_ACTION_CREATE_GADGET = 55
    ABILITY_ACTION_APPLY_LEVEL_MODIFIER = 56
    ABILITY_ACTION_GENERATE_ELEM_BALL = 57
    ABILITY_ACTION_SET_RANDOM_OVERRIDE_MAP_VALUE = 58
    ABILITY_ACTION_SERVER_MONSTER_LOG = 59
    ABILITY_ACTION_CREATE_TILE = 60
    ABILITY_ACTION_DESTROY_TILE = 61
    ABILITY_ACTION_FIRE_AFTER_IMAGE = 62
    ABILITY_ACTION_DEDUCT_STAMINA = 63
    ABILITY_ACTION_HIT_EFFECT = 64
    ABILITY_ACTION_SET_BULLET_TRACK_TARGET = 65
    ABILITY_MIXIN_AVATAR_STEER_BY_CAMERA = 100
    ABILITY_MIXIN_MONSTER_DEFEND = 101
    ABILITY_MIXIN_WIND_ZONE = 102
    ABILITY_MIXIN_COST_STAMINA = 103
    ABILITY_MIXIN_ELITE_SHIELD = 104
    ABILITY_MIXIN_ELEMENT_SHIELD = 105
    ABILITY_MIXIN_GLOBAL_SHIELD = 106
    ABILITY_MIXIN_SHIELD_BAR = 107
    ABILITY_MIXIN_WIND_SEED_SPAWNER = 108
    ABILITY_MIXIN_DO_ACTION_BY_ELEMENT_REACTION = 109
    ABILITY_MIXIN_FIELD_ENTITY_COUNT_CHANGE = 110
    ABILITY_MIXIN_SCENE_PROP_SYNC = 111
    ABILITY_MIXIN_WIDGET_MP_SUPPORT = 112
    ABILITY_MIXIN_DO_ACTION_BY_SELF_MODIFIER_ELEMENT_DURABILITY_RATIO = 113
    ABILITY_MIXIN_FIREWORKS_LAUNCHER = 114
    ABILITY_MIXIN_ATTACK_RESULT_CREATE_COUNT = 115
    ABILITY_MIXIN_UGC_TIME_CONTROL = 116
    ABILITY_MIXIN_AVATAR_COMBAT = 117
    ABILITY_MIXIN_DEATH_ZONE_REGIONAL_PLAY_MIXIN = 118
    ABILITY_MIXIN_UI_INTERACT = 119
    ABILITY_MIXIN_SHOOT_FROM_CAMERA = 120
    ABILITY_MIXIN_ERASE_BRICK_ACTIVITY = 121


class ModifierAction(betterproto.Enum):
    ADDED = 0
    REMOVED = 1


class AbilityInvocationFixedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1172
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AbilityInvocationsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1198
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ClientAbilityInitBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1112
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ClientAbilityInitFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1135
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AbilityInvocationFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientAbilitiesInitFinishCombineNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1103
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WindSeedClientNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1199
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AbilityChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1131
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientAbilityChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1175
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ServerUpdateGlobalValueNotifyUpdateType(betterproto.Enum):
    INVALUE = 0
    ADD = 1
    SET = 2


class ServerUpdateGlobalValueNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1148
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGlobalValueChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1197
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientAiStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1181
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ServerCombatEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1105
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientRemoveCombatEndModifierNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1182
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AchievementStatus(betterproto.Enum):
    INVALID = 0
    UNFINISHED = 1
    FINISHED = 2
    REWARD_TAKEN = 3


class AchievementAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2676
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AchievementUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2668
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeAchievementRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2675
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeAchievementRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2657
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeAchievementGoalRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2652
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeAchievementGoalRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2681
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryStageType(betterproto.Enum):
    GALLERY_NONE = 0
    GALLERY_PRESTART = 1
    GALLERY_START = 2


class GalleryStopReason(betterproto.Enum):
    GALLERY_STOP_NONE = 0
    GALLERY_STOP_TIMEUP = 1
    GALLERY_STOP_CLIENT_INTERRUPT = 2
    GALLERY_STOP_LUA_INTERRUPT_SUCCESS = 3
    GALLERY_STOP_LUA_INTERRUPT_FAIL = 4
    GALLERY_STOP_OWNER_LEAVE_SCENE = 5
    GALLERY_STOP_PLAY_INIT_FAILED = 6
    GALLERY_STOP_OTHER_PLAYER_ENTER = 7
    GALLERY_STOP_AVATAR_DIE = 8
    GALLERY_STOP_FINISHED = 9
    GALLERY_STOP_FUNGUS_ALL_DIE = 10


class GalleryStartSource(betterproto.Enum):
    GALLERY_START_BY_NONE = 0
    GALLERY_START_BY_MATCH = 1
    GALLERY_START_BY_DRAFT = 2


class SalvagePreventStopReason(betterproto.Enum):
    SALVAGE_PREVENT_STOP_NONE = 0
    SALVAGE_PREVENT_STOP_SUCCESS = 1
    SALVAGE_PREVENT_STOP_ARRIVAL = 2
    SALVAGE_PREVENT_STOP_INTERRUPT = 3
    SALVAGE_PREVENT_STOP_LEAVE = 4
    SALVAGE_PREVENT_STOP_FULL = 5
    SALVAGE_PREVENT_STOP_AWAY = 6


class SalvageEscortStopReason(betterproto.Enum):
    SALVAGE_ESCORT_STOP_NONE = 0
    SALVAGE_ESCORT_STOP_SUCCESS = 1
    SALVAGE_ESCORT_STOP_DUMP = 2
    SALVAGE_ESCORT_STOP_TIME = 3
    SALVAGE_ESCORT_STOP_INTERRUPT = 4
    SALVAGE_ESCORT_STOP_LEAVE = 5
    SALVAGE_ESCORT_STOP_FULL = 6


class IslandPartySailStage(betterproto.Enum):
    ISLAND_PARTY_SAIL_STAGE_NONE = 0
    ISLAND_PARTY_SAIL_STAGE_SAIL = 1
    ISLAND_PARTY_SAIL_STAGE_BATTLE = 2


class GalleryStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5572
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryBalloonShootNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5598
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryBalloonScoreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5512
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryStopNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5535
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryFallCatchNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5507
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryFallScoreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5521
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAllSceneGalleryInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5503
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllSceneGalleryInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5590
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryFlowerCatchNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5573
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryPreStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5599
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryBulletHitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5531
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryBrokenFloorFallNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5575
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InterruptGalleryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5548
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InterruptGalleryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5597
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneGalleryInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5581
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryBounceConjuringHitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5505
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GallerySumoKillMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5582
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryCrystalLinkKillMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5547
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryCrystalLinkBuffInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5539
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeGalleryInPlayingNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5553
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryIslandPartyDownHillInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5522
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IslandPartyRaftInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5565
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IslandPartySailInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5504
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BackRebornGalleryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5593
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BackRebornGalleryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5527
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GalleryWillStartCountdownNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5594
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InstableSprayGalleryInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5588
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WindFieldGalleryInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5526
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WindFieldGalleryChallengeInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5563
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterTrainingInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5595
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusCaptureSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5506
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FriendOnlineState(betterproto.Enum):
    FREIEND_DISCONNECT = 0
    FRIEND_ONLINE = 1


class DealAddFriendResultType(betterproto.Enum):
    DEAL_ADD_FRIEND_REJECT = 0
    DEAL_ADD_FRIEND_ACCEPT = 1


class GetPlayerFriendListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4072
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerFriendListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4098
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AskAddFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4007
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AskAddFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4021
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DealAddFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4003
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DealAddFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4090
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerSocialDetailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4073
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerSocialDetailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4099
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DeleteFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4031
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DeleteFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4075
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetPlayerBirthdayReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4048
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerBirthdayRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4097
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetPlayerSignatureReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4081
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerSignatureRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetPlayerHeadImageReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4082
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerHeadImageRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4047
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdatePs4FriendListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4039
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DeleteFriendNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4053
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddFriendNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4022
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AskAddFriendNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4065
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetNameCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4004
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetNameCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4093
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllUnlockNameCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4027
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllUnlockNameCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4094
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddBlacklistReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4088
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddBlacklistRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4026
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RemoveBlacklistReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4063
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RemoveBlacklistRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4095
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnlockNameCardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetRecentMpPlayerListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4034
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetRecentMpPlayerListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4050
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SocialDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4043
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeFirstShareRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4074
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeFirstShareRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4076
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UpdatePs4BlockListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4046
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UpdatePs4BlockListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4041
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPlayerBlacklistReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4049
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerBlacklistRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4091
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerReportReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4024
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerReportRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4056
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetFriendRemarkNameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4042
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetFriendRemarkNameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4030
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdatePlayerShowAvatarListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4067
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UpdatePlayerShowAvatarListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4058
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetFriendShowAvatarInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4070
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetFriendShowAvatarInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4017
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdatePlayerShowNameCardListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4002
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UpdatePlayerShowNameCardListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4019
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetFriendShowNameCardInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4061
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetFriendShowNameCardInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4029
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForceAddPlayerFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4057
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForceAddPlayerFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4100
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProfilePictureChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4016
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PsnFriendListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4087
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PsnBlackListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4040
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPlayerAskFriendListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4018
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerAskFriendListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4066
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetChatEmojiCollectionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4068
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetChatEmojiCollectionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4033
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetChatEmojiCollectionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4084
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetChatEmojiCollectionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4080
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdatePs4FriendListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4089
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UpdatePs4FriendListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4059
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FriendInfoChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4032
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerSignatureAuditDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4060
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerSignatureNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4014
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SignatureAuditConfigNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4092
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReadSignatureAuditReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4020
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReadSignatureAuditRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4064
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UgcType(betterproto.Enum):
    UGC_TYPE_NONE = 0
    UGC_TYPE_MUSIC_GAME = 1


class GetUgcType(betterproto.Enum):
    GET_UGC_NONE = 0
    GET_UGC_TYPE_MINE = 1
    GET_UGC_TYPE_PUBLISH = 2


class RecordUsage(betterproto.Enum):
    UGC_RECORD_USAGE_NONE = 0
    UGC_RECORD_USAGE_IMPORT = 1
    UGC_RECORD_USAGE_PLAY = 2
    UGC_RECORD_USAGE_TRIAL = 3
    UGC_RECORD_USAGE_COMPARE = 4


class GetUgcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6326
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetUgcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6318
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetUgcBriefInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6325
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetUgcBriefInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6307
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SaveUgcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6329
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SaveUgcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6322
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PublishUgcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6344
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PublishUgcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6349
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CheckUgcUpdateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6320
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CheckUgcUpdateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6345
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UgcNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6341
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CheckUgcStateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6342
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CheckUgcStateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6314
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MultistagePlayType(betterproto.Enum):
    MULTISTAGE_PLAY_TYPE_NON = 0
    MULTISTAGE_PLAY_TYPE_MECHANICUS = 1
    MULTISTAGE_PLAY_TYPE_FLEUR_FAIR = 2
    MULTISTAGE_PLAY_TYPE_HIDE_AND_SEEK = 3
    MULTISTAGE_PLAY_TYPE_BOUNCE_CONJURING = 4
    MULTISTAGE_PLAY_TYPE_CHESS = 5
    MULTISTAGE_PLAY_TYPE_IRODORI_CHESS = 6
    MULTISTAGE_PLAY_TYPE_CHAR_AMUSEMENT = 7


class InBattleMechanicusStageType(betterproto.Enum):
    IN_BATTLE_MECHANICUS_STAGE_NONE = 0
    IN_BATTLE_MECHANICUS_STAGE_BUILD = 1
    IN_BATTLE_MECHANICUS_STAGE_CARD_FLIP = 2
    IN_BATTLE_MECHANICUS_STAGE_KILL = 3


class InBattleMechanicusCardChallengeState(betterproto.Enum):
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_NONE = 0
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_ON_GOING = 1
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_FAIL = 2
    IN_BATTLE_MECHANICUS_CARD_CHALLENGE_SUCCESS = 3


class HideAndSeekStageType(betterproto.Enum):
    HIDE_AND_SEEK_STAGE_PREPARE = 0
    HIDE_AND_SEEK_STAGE_PICK = 1
    HIDE_AND_SEEK_STAGE_GAME = 2
    HIDE_AND_SEEK_STAGE_HIDE = 3
    HIDE_AND_SEEK_STAGE_SEEK = 4
    HIDE_AND_SEEK_STAGE_SETTLE = 5


class MultistagePlayInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5372
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MultistagePlayFinishStageReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5398
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InBattleMechanicusExcapeMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5307
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusLeftMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5321
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusBuildingPointsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5303
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusPickCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5390
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InBattleMechanicusPickCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5373
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusPickCardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5399
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusConfirmCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5331
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InBattleMechanicusConfirmCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5375
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusConfirmCardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5348
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusCardResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5397
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MultistagePlayFinishStageRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5381
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InBattleMechanicusSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5305
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MultistagePlaySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5313
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MultistagePlayStageEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5379
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MultistagePlayEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5355
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairBuffEnergyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5324
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairStageSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5356
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairFinishGalleryStageNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5342
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HideAndSeekSelectAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5330
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HideAndSeekSelectAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5367
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HideAndSeekSetReadyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5358
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HideAndSeekSetReadyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5370
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HideAndSeekSettleNotifySettleReason(betterproto.Enum):
    SETTLE_REASON_TIME_OUT = 0
    SETTLE_PLAY_END = 1
    SETTLE_PLAYER_QUIT = 2


class HideAndSeekSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5317
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HideAndSeekPlayerReadyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5302
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HideAndSeekPlayerSetAvatarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5319
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChessPickCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5333
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChessPickCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5384
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChessPickCardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5380
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChessManualRefreshCardsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5389
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChessManualRefreshCardsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5359
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChessPlayerInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5332
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChessLeftMonstersNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5360
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChessEscapedMonstersNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5314
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChessSelectedCardsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5392
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GlobalBuildingInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5320
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriChessPlayerInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5364
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriChessLeftMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5338
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueCellState(betterproto.Enum):
    ROGUE_CELL_NONE = 0
    ROGUE_CELL_BATTLE = 1
    ROGUE_CELL_SUCCESS = 2
    ROGUE_CELL_FINISH = 3
    ROGUE_CELL_TAKEN_CHEST = 4


class RogueEliteCellDifficultyType(betterproto.Enum):
    ROGUE_ELITE_NORMAL = 0
    ROGUE_ELITE_HARD = 1


class RogueDiaryAvatarDisableStatus(betterproto.Enum):
    ROGUE_DIARY_AVATAR_DISABLE_NONE = 0
    ROGUE_DIARY_AVATAR_DISABLE_DEATH = 1
    ROGUE_DIARY_AVATAR_DISABLE_TIRED = 2
    ROGUE_DIARY_AVATAR_DISABLE_DUPLICATED = 3


class ActivityPushTipsState(betterproto.Enum):
    ACTIVITY_PUSH_TIPS_STATE_NONE = 0
    ACTIVITY_PUSH_TIPS_STATE_START = 1
    ACTIVITY_PUSH_TIPS_STATE_READ = 2


class GetActivityScheduleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2136
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetActivityScheduleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetActivityInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2095
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetActivityInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2041
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityPlayOpenAnimNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2157
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2060
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityScheduleInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2073
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityTakeWatcherRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2038
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityTakeWatcherRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2034
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityUpdateWatcherNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2156
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivitySelectAvatarCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2028
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivitySelectAvatarCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2189
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityCoinInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2008
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampFlyLampReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2199
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampFlyLampRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2192
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampTakeContributionRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2019
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampTakeContributionRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2177
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampTakePhaseRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2176
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampTakePhaseRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2190
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampContributeItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2123
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeaLampContributeItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2139
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampFlyLampNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2105
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampCoinNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2114
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeaLampPopularityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2032
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LoadActivityTerrainNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2029
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ServerAnnounceNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2197
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerAnnounceRevokeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2092
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityBannerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2155
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityBannerClearReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2009
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityBannerClearRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2163
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SalesmanDeliverItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2138
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SalesmanDeliverItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2104
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SalesmanTakeRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2191
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SalesmanTakeRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2110
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityCondStateChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2140
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SalesmanTakeSpecialRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2145
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SalesmanTakeSpecialRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2124
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAuthSalesmanInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2070
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAuthSalesmanInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2004
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterTrialAvatarActivityDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2118
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterTrialAvatarActivityDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2183
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReceivedTrialAvatarActivityRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2130
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReceivedTrialAvatarActivityRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2076
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TrialAvatarFirstPassDungeonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2013
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TrialAvatarInDungeonIndexNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2186
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeDeliveryDailyRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2121
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeDeliveryDailyRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2162
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishDeliveryNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2089
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SelectAsterMidDifficultyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2134
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SelectAsterMidDifficultyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2180
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AsterProgressInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2016
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AsterLittleInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2068
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AsterMidInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2031
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AsterMiscInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2036
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeAsterSpecialRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2097
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeAsterSpecialRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2193
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AsterLargeInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2146
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FlightActivitySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2195
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FlightActivityRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2037
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FlightActivityRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2165
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AsterMidCampInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2133
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DragonSpineChapterOpenNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2022
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DragonSpineChapterProgressChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2065
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DragonSpineChapterFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2069
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DragonSpineCoinChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2088
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivitySaleChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2071
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartEffigyChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2169
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartEffigyChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2173
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EffigyChallengeInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2090
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EffigyChallengeResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2046
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeEffigyFirstPassRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2196
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeEffigyFirstPassRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2061
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeEffigyRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2040
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeEffigyRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2007
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SelectEffigyChallengeConditionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2064
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SelectEffigyChallengeConditionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2039
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RestartEffigyChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2148
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RestartEffigyChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2042
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapRegionInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2185
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapCurrencyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2171
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapRegionActiveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2122
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapMpChallengeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2048
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapBonusChallengeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2115
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapGuideTaskDoneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2119
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapPreTaskDoneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2152
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingScanReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2081
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlessingScanRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2093
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingRedeemRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2137
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlessingRedeemRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2098
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingGetFriendPicListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2043
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlessingGetFriendPicListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2056
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingGiveFriendPicReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2062
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlessingGiveFriendPicRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2053
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingAcceptGivePicReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlessingAcceptGivePicRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2055
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingGetAllRecvPicRecordListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2096
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlessingGetAllRecvPicRecordListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2083
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingRecvFriendPicNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2178
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlessingAcceptAllGivePicReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2045
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlessingAcceptAllGivePicRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2044
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExpeditionStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2087
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExpeditionStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2135
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExpeditionRecallReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2131
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExpeditionRecallRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2129
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExpeditionTakeRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2149
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExpeditionTakeRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2080
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetExpeditionAssistInfoListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2150
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetExpeditionAssistInfoListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2035
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetCurExpeditionChallengeIdReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2021
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetCurExpeditionChallengeIdRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2049
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExpeditionChallengeEnterRegionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2154
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExpeditionChallengeFinishedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2091
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairBalloonSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2099
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairFallSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2017
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairMusicGameSettleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2194
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FleurFairMusicGameSettleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2113
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairMusicGameStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2167
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FleurFairMusicGameStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2079
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FleurFairReplayMiniGameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2181
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FleurFairReplayMiniGameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2052
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartArenaChallengeLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2127
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartArenaChallengeLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2125
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ArenaChallengeFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2030
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WaterSpritePhaseFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2025
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityTakeWatcherRewardBatchReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2159
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityTakeWatcherRewardBatchRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2109
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannelerSlabStageActiveChallengeIndexNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8734
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannelerSlabStageOneoffDungeonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabWearBuffReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabWearBuffRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8600
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabTakeoffBuffReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8516
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabTakeoffBuffRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8237
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabEnterLoopDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8869
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabEnterLoopDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8081
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabLoopDungeonTakeFirstPassRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8589
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabLoopDungeonTakeFirstPassRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8539
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabLoopDungeonTakeScoreRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8684
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabLoopDungeonTakeScoreRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8433
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabLoopDungeonChallengeInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8224
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabLoopDungeonSelectConditionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8503
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabLoopDungeonSelectConditionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8509
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabOneOffDungeonInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8409
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabOneOffDungeonInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8268
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabOneOffDungeonInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8729
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabSaveAssistInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8416
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabSaveAssistInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8932
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MistTrialSelectAvatarAndEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8666
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MistTrialSelectAvatarAndEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8239
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MistTrialGetChallengeMissionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8893
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MistTrialGetChallengeMissionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8508
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MistTrialDunegonFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8135
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChannellerSlabCheckEnterLoopDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8745
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChannellerSlabCheckEnterLoopDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8452
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HideAndSeekSelectSkillReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8183
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HideAndSeekSelectSkillRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8088
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityTakeScoreRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8971
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityTakeScoreRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8583
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityTakeAllScoreRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8372
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityTakeAllScoreRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8043
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CommonPlayerTipsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8466
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FindHilichurlFinishSecondQuestNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8901
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FindHilichurlAcceptQuestNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8659
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SummerTimeFloatSignalPositionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8077
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SummerTimeFloatSignalUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8781
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SummerTimeSprintBoatSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8651
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SummerTimeSprintBoatRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8410
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SummerTimeSprintBoatRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8356
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartBuoyantCombatGalleryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8732
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartBuoyantCombatGalleryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8680
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BuoyantCombatSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8305
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetLimitOptimizationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8851
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EchoShellUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8150
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EchoShellTakeRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8114
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EchoShellTakeRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8797
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BounceConjuringSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8084
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlitzRushParkourRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8653
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlitzRushParkourRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8944
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterChessDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8191
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterChessDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8592
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapHostInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8681
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoSaveTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8313
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SumoSaveTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8319
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoSelectTeamAndEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8215
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SumoSelectTeamAndEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8193
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoDungeonSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8291
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoEnterDungeonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8013
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoSwitchTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8351
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SumoSwitchTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8525
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoLeaveDungeonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8640
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoRestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8612
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SumoRestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8214
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityDisableTransferPointInteractionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8982
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SumoSetNoSwitchPunishTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8935
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishingGallerySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8780
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LunaRiteSacrificeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8805
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LunaRiteSacrificeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8080
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LunaRiteTakeSacrificeRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8045
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LunaRiteTakeSacrificeRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8397
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LunaRiteHintPointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8195
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LunaRiteHintPointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8765
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LunaRiteHintPointRemoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8787
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LunaRiteGroupBundleRegisterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8465
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LunaRiteAreaFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8213
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerGetSeedInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8560
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerGetSeedInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8764
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerTakeSeedRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8968
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerTakeSeedRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8860
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerSetFlowerWishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8547
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerSetFlowerWishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8910
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerGetFriendFlowerWishListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8126
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerGetFriendFlowerWishListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8511
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerGiveFriendFlowerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8846
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerGiveFriendFlowerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8386
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerGetRecvFlowerListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8270
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerGetRecvFlowerListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8374
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerHaveRecvFlowerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8078
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerAcceptGiveFlowerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8383
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerAcceptGiveFlowerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8567
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerAcceptAllGiveFlowerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8808
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerAcceptAllGiveFlowerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8888
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerGetCanGiveFriendFlowerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8716
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerGetCanGiveFriendFlowerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8766
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlantFlowerEditFlowerCombinationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8843
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlantFlowerEditFlowerCombinationRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8788
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MusicGameSettleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8892
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MusicGameSettleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8673
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MusicGameStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8406
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MusicGameStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8326
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DoRoguelikeDungeonCardGachaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8148
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DoRoguelikeDungeonCardGachaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8472
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RefreshRoguelikeDungeonCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8279
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RefreshRoguelikeDungeonCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8349
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SelectRoguelikeDungeonCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8085
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SelectRoguelikeDungeonCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8138
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EquipRoguelikeRuneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8306
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EquipRoguelikeRuneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8705
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TriggerRoguelikeRuneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8463
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TriggerRoguelikeRuneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8065
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TriggerRoguelikeCurseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpgradeRoguelikeShikigamiReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8151
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UpgradeRoguelikeShikigamiRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8966
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeSelectAvatarAndEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8457
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RoguelikeSelectAvatarAndEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8538
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeGiveUpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8660
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RoguelikeGiveUpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8139
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeTakeStageFirstPassRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8421
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RoguelikeTakeStageFirstPassRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8552
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GiveUpRoguelikeDungeonCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8353
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GiveUpRoguelikeDungeonCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8497
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterRoguelikeDungeonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8652
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartRogueEliteCellChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8242
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartRogueEliteCellChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8958
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartRogueNormalCellChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8205
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartRogueNormalCellChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8036
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueCellUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8642
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueDungeonPlayerCellChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8347
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueHealAvatarsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8947
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RogueHealAvatarsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8949
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueResumeDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8795
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RogueResumeDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8647
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClearRoguelikeCurseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeCardGachaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8925
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueSwitchAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RogueSwitchAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8915
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DisableRoguelikeTrapNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8259
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeRuneRecordUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8973
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeMistClearNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8324
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeEffectDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8222
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeEffectViewReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8528
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RoguelikeEffectViewRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8639
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RoguelikeResourceBonusPropUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8555
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RoguelikeRefreshCardCostUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8927
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DigActivityMarkPointChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8109
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DigActivityChangeGadgetStateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8464
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DigActivityChangeGadgetStateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8430
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampStageInfoChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8154
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampRaceScoreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8149
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampGiveFriendItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8572
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampGiveFriendItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8264
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampSetWishListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8753
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampSetWishListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8281
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampGetFriendWishListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8946
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampGetFriendWishListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8937
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampRecvItemNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8580
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampAcceptGiveItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8387
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampAcceptGiveItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8185
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampAcceptAllGiveItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 9000
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampAcceptAllGiveItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8626
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampGetCanGiveFriendItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8964
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampGetCanGiveFriendItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8357
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampGetRecvItemListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8143
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampGetRecvItemListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8423
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampEditSnowmanCombinationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8144
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampEditSnowmanCombinationRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8142
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampTriathlonSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8342
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampTakeExploreRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8607
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampTakeExploreRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8978
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampTakeBattleRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8401
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampTakeBattleRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8153
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WinterCampTriathlonRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8844
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WinterCampTriathlonRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8569
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MistTrialSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8373
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MistTrialGetDungeonExhibitionDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8740
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MistTrialGetDungeonExhibitionDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8066
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PotionResetChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8377
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PotionResetChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8067
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PotionEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8261
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PotionEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8482
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PotionEnterDungeonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8531
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PotionSaveDungeonResultReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8192
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PotionSaveDungeonResultRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8688
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PotionRestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8273
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PotionRestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8062
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TanukiTravelFinishGuideQuestNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8924
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishLanternProjectionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8704
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FinishLanternProjectionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8713
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ViewLanternProjectionTipsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8218
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ViewLanternProjectionTipsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8590
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ViewLanternProjectionLevelTipsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8758
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ViewLanternProjectionLevelTipsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8411
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SalvagePreventSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8231
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SalvageEscortSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8499
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LanternRiteTakeSkinRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8826
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LanternRiteTakeSkinRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8777
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SalvagePreventRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8367
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SalvagePreventRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8938
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SalvageEscortRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8396
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SalvageEscortRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8959
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LanternRiteStartFireworksReformReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8518
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LanternRiteStartFireworksReformRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8862
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LanternRiteDoFireworksReformReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8226
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LanternRiteDoFireworksReformRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8657
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LanternRiteEndFireworksReformReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8277
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LanternRiteEndFireworksReformRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8933
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdateSalvageBundleMarkReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8967
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UpdateSalvageBundleMarkRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8459
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriDarkPressureLevelUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8825
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriInteractStatueReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8718
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MichiaeMatsuriInteractStatueRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8449
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriUnlockCrystalSkillReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8345
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MichiaeMatsuriUnlockCrystalSkillRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8588
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriStartBossChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8703
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MichiaeMatsuriStartBossChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8426
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriStartDarkChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8054
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MichiaeMatsuriStartDarkChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8791
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriRemoveChestMarkNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8726
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriRemoveChallengeMarkNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8072
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MichiaeMatsuriGainCrystalExpUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8523
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BartenderCompleteOrderReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8414
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BartenderCompleteOrderRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8125
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BartenderCancelOrderReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8442
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BartenderCancelOrderRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8837
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BartenderGetFormulaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8462
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BartenderGetFormulaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8842
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BartenderStartLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8507
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BartenderStartLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8402
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BartenderCancelLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8771
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BartenderCancelLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8686
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BartenderLevelProgressNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8756
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BartenderFinishLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8227
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BartenderFinishLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8093
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CrystalLinkEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8325
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CrystalLinkEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8147
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CrystalLinkDungeonInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8858
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CrystalLinkRestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8022
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CrystalLinkRestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8119
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuickOpenActivityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8178
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuickOpenActivityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8882
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriEditFlowerCombinationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8608
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class IrodoriEditFlowerCombinationRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8833
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriScanEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8767
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class IrodoriScanEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8026
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriFillPoetryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8129
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class IrodoriFillPoetryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8880
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriChessEquipCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8561
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class IrodoriChessEquipCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8308
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriChessUnequipCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8057
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class IrodoriChessUnequipCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8817
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterIrodoriChessDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8717
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterIrodoriChessDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8546
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriMasterStartGalleryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8165
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class IrodoriMasterStartGalleryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8381
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IrodoriMasterGalleryCgEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8061
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class IrodoriMasterGallerySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8340
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PhotoActivityFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8921
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PhotoActivityFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8854
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PhotoActivityClientViewReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8709
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PhotoActivityClientViewRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8983
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SpiceActivityFinishMakeSpiceReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8096
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SpiceActivityFinishMakeSpiceRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8481
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SpiceActivityProcessFoodReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8216
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SpiceActivityProcessFoodRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8772
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SpiceActivityGivingRecordNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8407
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GachaActivityPercentNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8450
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GachaActivityUpdateElemNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8919
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GachaActivityCreateRobotReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8614
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GachaActivityCreateRobotRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8610
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GachaActivityTakeRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8930
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GachaActivityTakeRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8768
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GachaActivityResetReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8163
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GachaActivityResetRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8240
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GachaActivityNextStageReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8257
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GachaActivityNextStageRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8918
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityGiveFriendGiftReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8233
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityGiveFriendGiftRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8696
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityGetRecvGiftListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8725
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityGetRecvGiftListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8120
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityHaveRecvGiftNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8733
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityAcceptGiveGiftReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8095
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityAcceptGiveGiftRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8502
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityAcceptAllGiveGiftReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8113
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityAcceptAllGiveGiftRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8132
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityGetCanGiveFriendGiftReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8559
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityGetCanGiveFriendGiftRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8848
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivitySetGiftWishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8017
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivitySetGiftWishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8554
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityGetFriendGiftWishListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8806
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityGetFriendGiftWishListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8253
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LuminanceStoneChallengeSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8186
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartRogueDiaryPlayReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8419
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartRogueDiaryPlayRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8385
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ResetRogueDiaryPlayReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8127
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ResetRogueDiaryPlayRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8948
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterRogueDiaryDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8943
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterRogueDiaryDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8352
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ResumeRogueDiaryDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8838
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ResumeRogueDiaryDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8989
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueDiaryDungeonInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8597
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RogueDiaryDungeonSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8895
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartRogueDiaryRoomReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8159
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartRogueDiaryRoomRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8793
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueDiaryTiredAvatarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8514
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReserveRogueDiaryAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8748
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReserveRogueDiaryAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8799
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetRogueDairyRepairInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8014
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetRogueDairyRepairInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8447
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RefreshRogueDiaryCardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8991
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RefreshRogueDiaryCardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8028
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueFinishRepairReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8363
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RogueFinishRepairRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8535
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TryInterruptRogueDiaryDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8617
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TryInterruptRogueDiaryDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8903
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueDiaryRepairInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8641
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RetryCurRogueDiaryDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8398
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RetryCurRogueDiaryDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8334
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueDiaryReviveAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8038
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RogueDiaryReviveAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8343
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TryEnterNextRogueDiaryDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8280
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TryEnterNextRogueDiaryDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8362
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RogueDiaryCoinAddNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8602
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SummerTimeV2BoatSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8870
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityPushTipsInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8513
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ActivityReadPushTipsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8145
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ActivityReadPushTipsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8574
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SummerTimeV2RestartBoatGalleryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8476
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SummerTimeV2RestartBoatGalleryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8004
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SummerTimeV2RestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8346
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SummerTimeV2RestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 8996
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class IslandPartySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24601
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GearActivityStartPlayGearReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23467
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GearActivityStartPlayGearRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21025
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GearActivityFinishPlayGearReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21834
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GearActivityFinishPlayGearRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21800
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GearActivityStartPlayPictureReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24550
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GearActivityStartPlayPictureRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23388
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GearActivityFinishPlayPictureReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21054
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GearActivityFinishPlayPictureRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21851
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GravenInnocenceRaceSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20681
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GravenInnocenceRaceRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22882
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GravenInnocenceRaceRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21880
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GravenInnocenceEditCarveCombinationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GravenInnocenceEditCarveCombinationRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20702
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GravenInnocencePhotoFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21750
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GravenInnocencePhotoFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23948
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GravenInnocencePhotoReminderNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23864
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InstableSprayEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24312
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InstableSprayEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23381
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InstableSpraySwitchTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24857
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InstableSpraySwitchTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24152
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InstableSprayLevelFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21961
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InstableSprayRestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23678
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InstableSprayRestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24923
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MuqadasPotionActivityEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24602
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MuqadasPotionActivityEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21804
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MuqadasPotionDungeonSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MuqadasPotionRestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22391
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MuqadasPotionRestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21208
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MuqadasPotionCaptureWeaknessReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20011
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MuqadasPotionCaptureWeaknessRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24081
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureSeelieCollectOrbsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20754
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketDeliverItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23141
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageMarketDeliverItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22181
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneGalleryVintageHuntingSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20324
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintagePresentFinishNoifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24142
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageDecorateBoothReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20846
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageDecorateBoothRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20993
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageHuntingStartGalleryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21780
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageHuntingStartGalleryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21951
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageCampGroupBundleRegisterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24244
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageCampStageFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22830
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketStartStorePlayReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22864
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageMarketStartStorePlayRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22130
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketFinishStorePlayReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20676
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageMarketFinishStorePlayRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23462
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintagePresentFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20086
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketStoreUnlockSlotReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20626
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageMarketStoreUnlockSlotRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20733
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketStoreChooseStrategyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21248
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageMarketStoreChooseStrategyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24860
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketStoreViewStrategyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21700
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VintageMarketStoreViewStrategyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21814
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketDividendFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23147
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VintageMarketNpcEventFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WindFieldRestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20731
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WindFieldRestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24712
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterFungusFighterPlotDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23053
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterFungusFighterPlotDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21008
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterPlotInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22174
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusCultivateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21749
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FungusCultivateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23532
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusRenameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FungusRenameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 20066
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterFungusFighterTrainingDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23860
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterFungusFighterTrainingDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21593
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterRuntimeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24674
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterTrainingSelectFungusReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23903
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FungusFighterTrainingSelectFungusRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21570
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterTrainingGallerySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23931
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterClearTrainingRuntimeDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24137
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FungusFighterClearTrainingRuntimeDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22991
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterUseBackupFungusReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21266
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FungusFighterUseBackupFungusRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23428
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FungusFighterRestartTraningDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23980
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FungusFighterRestartTraningDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22890
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CharAmusementSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23133
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EffigyChallengeV2EnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23489
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EffigyChallengeV2EnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24917
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EffigyChallengeV2RestartDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 24522
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EffigyChallengeV2RestartDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 23167
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EffigyChallengeV2ChooseSkillReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21269
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EffigyChallengeV2ChooseSkillRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22448
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EffigyChallengeV2DungeonInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22835
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AranaraCollectionDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6376
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddAranaraCollectionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6368
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CataLogFinishedGlobalWatcherAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6370
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CataLogNewFinishedGlobalWatcherNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6395
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarAddNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1769
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1773
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetUpAvatarTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1690
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetUpAvatarTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1646
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChooseCurAvatarTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1796
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChooseCurAvatarTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1661
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1640
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1607
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarPromoteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1664
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarPromoteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1639
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SpringUseReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1748
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SpringUseRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1642
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RefreshBackgroundAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1743
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RefreshBackgroundAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1800
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarTeamUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1706
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1633
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1770
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1701
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarDieAnimationEndReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1610
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarDieAnimationEndRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1694
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarChangeElementTypeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1785
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarChangeElementTypeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1651
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFetterDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1782
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1771
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionAllDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1722
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionAllDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1648
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1715
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1719
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionCallBackReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1752
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionCallBackRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1726
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarExpeditionGetRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1623
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarExpeditionGetRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1784
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeMpTeamAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1708
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeMpTeamAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1753
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeTeamNameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1603
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeTeamNameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1666
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneTeamUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1775
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FocusAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1654
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FocusAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1681
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSatiationDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1693
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarWearFlycloakReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1737
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarWearFlycloakRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1698
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFlycloakChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1643
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarGainFlycloakNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1656
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarEquipAffixStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1662
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFetterLevelRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1653
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarFetterLevelRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1606
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddNoGachaAvatarCardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1655
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarPromoteGetRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1696
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarPromoteGetRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1683
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarChangeCostumeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1778
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarChangeCostumeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1645
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarChangeCostumeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1644
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarGainCostumeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1677
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarChangeAnimHashReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1711
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarChangeAnimHashRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1647
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PersistentDungeonSwitchAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1684
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PersistentDungeonSwitchAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1768
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddBackupAvatarTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1687
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddBackupAvatarTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1735
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DelBackupAvatarTeamReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1731
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DelBackupAvatarTeamRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1729
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarTeamAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1749
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BattlePassUnlockStatus(betterproto.Enum):
    BATTLE_PASS_UNLOCK_INVALID = 0
    BATTLE_PASS_UNLOCK_FREE = 1
    BATTLE_PASS_UNLOCK_PAID = 2


class BattlePassMissionMissionStatus(betterproto.Enum):
    MISSION_INVALID = 0
    MISSION_UNFINISHED = 1
    MISSION_FINISHED = 2
    MISSION_POINT_TAKEN = 3


class BattlePassAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2626
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BattlePassMissionUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2618
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BattlePassMissionDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2625
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BattlePassCurScheduleUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2607
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeBattlePassRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2602
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeBattlePassRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2631
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeBattlePassMissionPointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2629
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeBattlePassMissionPointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2622
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetBattlePassProductReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2644
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetBattlePassProductRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2649
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetBattlePassViewedReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2641
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetBattlePassViewedRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2642
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BattlePassBuySuccNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2614
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BuyBattlePassLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2647
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BuyBattlePassLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2637
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlossomScheduleState(betterproto.Enum):
    BLOSSOM_SCHEDULE_NONE = 0
    BLOSSOM_SCHEDULE_INIT = 1
    BLOSSOM_SCHEDULE_IN_PROGRESS = 2
    BLOSSOM_SCHEDULE_REWARD = 3


class GetBlossomBriefInfoListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2772
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetBlossomBriefInfoListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2798
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlossomBriefInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2712
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldOwnerBlossomBriefInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2735
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldOwnerBlossomScheduleInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2707
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BlossomChestCreateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2721
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class OpenBlossomCircleCampGuideNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2703
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LunchBoxSlotType(betterproto.Enum):
    LUNCH_BOX_SLOT_NONE = 0
    LUNCH_BOX_SLOT_REVIVE = 1
    LUNCH_BOX_SLOT_HEAL = 2


class WidgetSlotTag(betterproto.Enum):
    WIDGET_SLOT_QUICK_USE = 0
    WIDGET_SLOT_ATTACH_AVATAR = 1


class WidgetSlotOp(betterproto.Enum):
    WIDGET_SLOT_OP_ATTACH = 0
    WIDGET_SLOT_OP_DETACH = 1


class WidgetCreatorOpType(betterproto.Enum):
    WIDGET_CREATOR_TYPE_NONE = 0
    WIDGET_CREATOR_TYPE_RETRACT = 1
    WIDGET_CREATOR_TYPE_RETRACT_AND_CREATE = 2


class WidgetExtraCdType(betterproto.Enum):
    WIDGET_EXTRA_CD_TYPE_NONE = 0
    WIDGET_EXTRA_CD_TYPE_E_SKILL_SHARED = 1


class FireworksReformParamType(betterproto.Enum):
    FIREWORKS_REFORM_PARAM_NONE = 0
    FIREWORKS_REFORM_PARAM_COLOR = 1
    FIREWORKS_REFORM_PARAM_HEIGHT = 2
    FIREWORKS_REFORM_PARAM_SIZE = 3
    FIREWORKS_REFORM_PARAM_DENSITY = 4
    FIREWORKS_REFORM_PARAM_ROTATION = 5


class FireworksLaunchParamType(betterproto.Enum):
    FIREWORKS_LAUNCH_PARAM_NONE = 0
    FIREWORKS_LAUNCH_PARAM_REPEAT = 1
    FIREWORKS_LAUNCH_PARAM_INTEVAL = 2
    FIREWORKS_LAUNCH_PARAM_DELAY = 3
    FIREWORKS_LAUNCH_PARAM_ROUND_INTEVAL = 4
    FIREWORKS_LAUNCH_PARAM_MAX = 5


class AnchorPointDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4276
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AnchorPointOpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4257
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AnchorPointOpReqAnchorPointOpType(betterproto.Enum):
    ANCHOR_POINT_OP_NONE = 0
    ANCHOR_POINT_OP_TELEPORT = 1
    ANCHOR_POINT_OP_REMOVE = 2


class AnchorPointOpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4252
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetUpLunchBoxWidgetReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4272
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetUpLunchBoxWidgetRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4294
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuickUseWidgetReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4299
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuickUseWidgetRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4270
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetCoolDownNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4295
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetReportReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4291
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WidgetReportRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4292
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientCollectorDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4264
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OneoffGatherPointDetectorDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4297
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SkyCrystalDetectorDataUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4287
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TreasureMapDetectorDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4300
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetWidgetSlotReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4259
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetWidgetSlotRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4277
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetSlotChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4267
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetWidgetSlotReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4253
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetWidgetSlotRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4254
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AllWidgetDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4271
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UseWidgetCreateGadgetReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4293
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UseWidgetCreateGadgetRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4290
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UseWidgetRetractGadgetReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4286
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UseWidgetRetractGadgetRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4261
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WidgetGadgetAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4284
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetGadgetDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4266
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetGadgetDestroyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4274
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetDoBagReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4255
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WidgetDoBagRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4296
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetActiveChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4280
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetUseAttachAbilityGroupChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4258
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetCaptureAnimalReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4256
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WidgetCaptureAnimalRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4289
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetUpdateExtraCdReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5960
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WidgetUpdateExtraCdRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6056
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FireworksReformDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6033
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReformFireworksReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6036
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReformFireworksRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5929
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LaunchFireworksReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6090
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LaunchFireworksRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6057
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FireworksLaunchDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5928
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeWidgetBackgroundActiveStateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5907
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeWidgetBackgroundActiveStateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6060
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AllWidgetBackgroundActiveStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6092
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RemotePlayerWidgetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5995
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterType(betterproto.Enum):
    ENTER_NONE = 0
    ENTER_SELF = 1
    ENTER_GOTO = 2
    ENTER_JUMP = 3
    ENTER_OTHER = 4
    ENTER_BACK = 5
    ENTER_DUNGEON = 6
    ENTER_DUNGEON_REPLAY = 7
    ENTER_GOTO_BY_PORTAL = 8
    ENTER_SELF_HOME = 9
    ENTER_OTHER_HOME = 10
    ENTER_GOTO_RECREATE = 11


class VisionType(betterproto.Enum):
    VISION_NONE = 0
    VISION_MEET = 1
    VISION_REBORN = 2
    VISION_REPLACE = 3
    VISION_WAYPOINT_REBORN = 4
    VISION_MISS = 5
    VISION_DIE = 6
    VISION_GATHER_ESCAPE = 7
    VISION_REFRESH = 8
    VISION_TRANSPORT = 9
    VISION_REPLACE_DIE = 10
    VISION_REPLACE_NO_NOTIFY = 11
    VISION_BORN = 12
    VISION_PICKUP = 13
    VISION_REMOVE = 14
    VISION_CHANGE_COSTUME = 15
    VISION_FISH_REFRESH = 16
    VISION_FISH_BIG_SHOCK = 17
    VISION_FISH_QTE_SUCC = 18
    VISION_CAPTURE_DISAPPEAR = 19


class CreateReason(betterproto.Enum):
    CREATE_NONE = 0
    CREATE_QUEST = 1
    CREATE_ENERGY = 2


class TransmitReason(betterproto.Enum):
    TRANSMIT_NONE = 0
    TRANSMIT_QUEST = 1


class SealBattleType(betterproto.Enum):
    SEAL_BATTLE_KEEP_ALIVE = 0
    SEAL_BATTLE_KILL_MONSTER = 1
    SEAL_BATTLE_ENERGY_CHARGE = 2


class DungeonEntryBlockReason(betterproto.Enum):
    DUNGEON_ENTRY_REASON_NONE = 0
    DUNGEON_ENTRY_REASON_LEVEL = 1
    DUNGEON_ENTRY_REASON_QUEST = 2
    DUNGEON_ENTRY_REASON_MULIPLE = 3


class AreaPlayType(betterproto.Enum):
    AREA_PLAY_NONE = 0
    AREA_PLAY_CLIMATE = 1
    AREA_PLAY_REGIONAL_PLAY = 2


class PlayerEnterSceneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 272
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LeaveSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 298
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LeaveSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 212
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneInitFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 235
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneInitFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneEntityAppearNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 221
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneEntityDisappearNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneEntityMoveReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 290
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0
    IS_ALLOW_CLIENT = 1


class SceneEntityMoveRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 273
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class SceneAvatarStaminaStepReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 299
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneAvatarStaminaStepRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 231
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class SceneEntityMoveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 275
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class ScenePlayerLocationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 248
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class GetScenePointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 297
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetScenePointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 281
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterTransPointRegionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 205
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExitTransPointRegionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 282
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ScenePointUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 247
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneTransToPointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 239
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneTransToPointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 253
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityJumpNotifyType(betterproto.Enum):
    NULL = 0
    ACTIVE = 1
    PASSIVE = 2


class EntityJumpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 222
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetSceneAreaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 265
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetSceneAreaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 204
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneAreaUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 293
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneEntityDrownReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 227
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneEntityDrownRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 294
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneCreateEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 288
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneCreateEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 226
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneDestroyEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 263
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneDestroyEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 295
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneForceUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 206
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneForceLockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 234
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterWorldAreaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 250
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterWorldAreaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 243
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityForceSyncReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 274
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EntityForceSyncRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 276
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAreaExplorePointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 241
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAreaExplorePointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 249
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientTransmitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 291
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ClientTransmitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 224
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterSceneWeatherAreaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 256
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExitSceneWeatherAreaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 242
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneAreaWeatherNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 230
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayerInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 267
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldPlayerLocationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 258
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BeginCameraSceneLookNotifyKeepRotType(betterproto.Enum):
    KEEP_ROT_X = 0
    KEEP_ROT_XY = 1


class BeginCameraSceneLookNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 270
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EndCameraSceneLookNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 217
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MarkEntityInMinMapNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 202
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnmarkEntityInMinMapNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 219
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExecuteGroupTriggerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 257
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExecuteGroupTriggerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 300
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LevelupCityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 216
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LevelupCityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 287
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneRouteChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 240
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlatformStartRouteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 218
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlatformStopRouteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 266
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlatformChangeRouteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 268
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayerSoundNotifyPlaySoundType(betterproto.Enum):
    PLAY_SOUND_NONE = 0
    PLAY_SOUND_START = 1
    PLAY_SOUND_STOP = 2


class ScenePlayerSoundNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 233
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PersonalSceneJumpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 284
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PersonalSceneJumpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 280
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SealBattleBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 289
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SealBattleEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 259
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SealBattleProgressNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 232
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientPauseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 260
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerEnterSceneInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 214
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class JoinPlayerSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 292
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class JoinPlayerSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 220
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneKickPlayerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 264
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneKickPlayerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 238
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneKickPlayerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 211
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HitClientTrivialNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 244
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BackMyWorldReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 286
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BackMyWorldRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeeMonsterReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 228
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SeeMonsterRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 251
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddSeenMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 223
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AllSeenMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 271
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 245
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterSceneReadyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 208
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterSceneReadyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 209
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterScenePeerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 252
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterSceneDoneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 277
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterSceneDoneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 237
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldPlayerDieNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 285
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldPlayerReviveReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 225
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldPlayerReviveRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 278
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class JoinPlayerFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 236
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetSceneWeatherAreaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 254
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetSceneWeatherAreaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 283
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExecuteGadgetLuaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 269
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExecuteGadgetLuaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 210
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CutSceneBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 296
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CutSceneFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 262
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CutSceneEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 215
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientScriptEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 213
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneEntitiesMovesReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 279
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0
    IS_ALLOW_CLIENT = 1


class SceneEntitiesMovesRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 255
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0


class SceneEntitiesMoveCombineNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3387
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 0


class UnlockTransPointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3035
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UnlockTransPointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3426
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class SceneWeatherForcastReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3110
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SceneWeatherForcastRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3012
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MarkMapReqOperation(betterproto.Enum):
    ADD = 0
    MOD = 1
    DEL = 2
    GET = 3


class MarkMapReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3466
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MarkMapRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3079
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AllMarkPointNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3283
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3308
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldDataNotifyDataType(betterproto.Enum):
    DATA_NONE = 0
    WORLD_LEVEL = 1
    IS_IN_MP_MODE = 2


class EntityMoveRoomNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3178
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldPlayerInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3116
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PostEnterSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3312
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PostEnterSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3184
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChatInfoSystemHintType(betterproto.Enum):
    CHAT_NONE = 0
    CHAT_ENTER_WORLD = 1
    CHAT_LEAVE_WORLD = 2


class PlayerChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3185
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerChatRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3228
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerChatNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3010
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerChatCdNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3367
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChatHistoryNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3496
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonEntryToBeExploreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3147
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetDungeonEntryExploreConditionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3165
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetDungeonEntryExploreConditionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3269
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnfreezeGroupLimitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3220
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetEntityClientDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3146
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GroupSuiteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3257
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GroupUnloadNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3344
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MonsterAiConfigHashNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3039
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ShowTemplateReminderNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3491
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ShowCommonTipsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3352
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CloseCommonTipsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3194
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeWorldToSingleModeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3006
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SyncScenePlayTeamEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3333
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DelScenePlayTeamEntityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3318
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerEyePointStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3051
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetMapMarkTipsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3463
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetMapMarkTipsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3327
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeWorldToSingleModeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3066
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeWorldToSingleModeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3282
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetWorldMpInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3391
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetWorldMpInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3320
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityConfigHashNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3189
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForceDragAvatarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3235
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MonsterPointArrayRouteUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3410
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForceDragBackTransferNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3145
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetScenePerformanceReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3419
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetScenePerformanceRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3137
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneAudioNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3166
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HitTreeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3019
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EntityTagChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3316
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFollowRouteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3458
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SceneEntityUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientHashDebugNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3086
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerWorldSceneInfoListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3129
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LuaEnvironmentEffectNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3408
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientLoadingCostumeVerificationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3487
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ShowClientGuideNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ShowClientTutorialNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3305
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetMapAreaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3108
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetMapAreaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3328
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MapAreaChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3378
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LeaveWorldNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3017
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GuestBeginEnterSceneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3031
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GuestPostEnterSceneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3144
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LevelTagDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3314
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StopReminderNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3004
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AreaPlayInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3323
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CheckGroupReplacedReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3113
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CheckGroupReplacedRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3152
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DeathZoneObserveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3475
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldChestOpenNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3295
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WidgetQuickHitTreeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3345
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WidgetQuickHitTreeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3336
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BeginCameraSceneLookWithTemplateNotifyFollowType(betterproto.Enum):
    FOLLOW_TYPE_INIT_FOLLOW_POS = 0
    FOLLOW_TYPE_SET_FOLLOW_POS = 1
    FOLLOW_TYPE_SET_ABS_FOLLOW_POS = 2


class BeginCameraSceneLookWithTemplateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3160
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RefreshEntityAuthNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3259
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ScenePlayerBackgroundAvatarRefreshNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3274
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PrivateChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5022
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PrivateChatRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5048
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PrivateChatNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4962
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PullPrivateChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4971
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PullPrivateChatRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4953
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PullRecentChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5040
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PullRecentChatRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5023
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReadPrivateChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5049
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReadPrivateChatRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4981
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChatChannelUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5025
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChatChannelDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4998
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CodexDataFullNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4205
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CodexDataUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QueryCodexMonsterBeKilledNumReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QueryCodexMonsterBeKilledNumRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4209
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ViewCodexReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4202
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ViewCodexRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetCodexPushtipsReadReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4208
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetCodexPushtipsReadRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4206
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MainCoopStatus(betterproto.Enum):
    INVALID = 0
    RUNNING = 1
    FINISHED = 2


class AllCoopInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1976
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MainCoopUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1968
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SaveMainCoopReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1975
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SaveMainCoopRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1957
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishMainCoopReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1952
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FinishMainCoopRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1981
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CoopPointState(betterproto.Enum):
    STATE_UNSTARTED = 0
    STATE_STARTED = 1
    STATE_FINISHED = 2


class CoopRewardState(betterproto.Enum):
    STATE_UNLOCK = 0
    STATE_LOCK = 1
    STATE_TAKEN = 2


class CoopChapterState(betterproto.Enum):
    STATE_CLOSE = 0
    STATE_COND_NOT_MEET = 1
    STATE_COND_MEET = 2
    STATE_ACCEPT = 3


class CoopDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1979
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CoopChapterUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1972
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CoopCgUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1994
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CoopRewardUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1999
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnlockCoopChapterReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1970
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UnlockCoopChapterRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1995
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CoopPointUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1991
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartCoopPointReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1992
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartCoopPointRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1964
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CancelCoopTaskReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1997
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CancelCoopTaskRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1987
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeCoopRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1973
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeCoopRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1985
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CoopProgressUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1998
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SaveCoopDialogReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2000
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SaveCoopDialogRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1962
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CoopCgShowNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1983
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetCoopChapterViewedReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1965
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetCoopChapterViewedRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1963
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MainCoopFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1951
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterCustomDungeonType(betterproto.Enum):
    ENTER_CUSTOM_DUNGEON_NONE = 0
    ENTER_CUSTOM_DUNGEON_EDIT = 1
    ENTER_CUSTOM_DUNGEON_PLAY = 2
    ENTER_CUSTOM_DUNGEON_OFFICIAL = 3


class CustomDungeonState(betterproto.Enum):
    CUSTOM_DUNGEON_STATE_EDIT = 0
    CUSTOM_DUNGEON_STATE_SELF_PASS = 1
    CUSTOM_DUNGEON_STATE_PUBLISHED = 2


class CustomDungeonBanType(betterproto.Enum):
    CUSTOM_DUNGEON_BAN_TYPE_NONE = 0
    CUSTOM_DUNGEON_BAN_TYPE_LAYOUT = 1


class TryCustomDungeonType(betterproto.Enum):
    TRY_CUSTOM_DUNGEON_NONE = 0
    TRY_CUSTOM_DUNGEON_ROOM = 1
    TRY_CUSTOM_DUNGEON_ALL = 2
    TRY_CUSTOM_DUNGEON_OFFICIAL_PLAY = 3


class EnterCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6226
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6218
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SaveCustomDungeonRoomReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6225
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SaveCustomDungeonRoomRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeCustomDungeonRoomReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6222
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeCustomDungeonRoomRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6244
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RemoveCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6249
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RemoveCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6220
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TryCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6245
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TryCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6241
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PublishCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6242
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PublishCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6214
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExitCustomDungeonTryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6247
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExitCustomDungeonTryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6237
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CustomDungeonUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6223
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetRecommendCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6235
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetRecommendCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6248
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetStoreCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6250
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetStoreCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6212
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SearchCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6233
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SearchCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6215
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StoreCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6213
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StoreCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6201
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LikeCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6210
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LikeCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6219
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6209
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6227
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CustomDungeonRecoverNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6217
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BackPlayCustomDungeonOfficialReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BackPlayCustomDungeonOfficialRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6204
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CustomDungeonOfficialNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6221
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReplayCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6243
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReplayCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6240
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CustomDungeonBattleRecordNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6236
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class OutStuckCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6211
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class OutStuckCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6234
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DraftInviteFailReason(betterproto.Enum):
    DRAFT_FAIL_UNKNOWN = 0
    DRAFT_ACTIVITY_NOT_OPEN = 1
    DRAFT_ACTIVITY_PLAY_NOT_OPEN = 2
    DRAFT_SCENE_NOT_MEET = 3
    DRAFT_WORLD_NOT_MEET = 4
    DRAFT_PLAY_LIMIT_NOT_MEET = 5


class DraftOwnerStartInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DraftOwnerStartInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5435
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DraftOwnerInviteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5407
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DraftGuestReplyInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5421
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DraftGuestReplyInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5403
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DraftGuestReplyInviteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5490
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DraftInviteResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5473
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DraftOwnerTwiceConfirmNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5499
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DraftGuestReplyTwiceConfirmReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5431
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DraftGuestReplyTwiceConfirmRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5475
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DraftTwiceConfirmResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5448
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DraftGuestReplyTwiceConfirmNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5497
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerBriefDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2472
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerFloorRecordChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2498
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerCurLevelRecordChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerDailyRewardProgressChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2435
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerTeamSelectReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2421
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerTeamSelectRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2403
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerAllDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2490
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerAllDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2473
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerEnterLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2431
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerEnterLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2475
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerBuffSelectReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2448
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerBuffSelectRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2497
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerSurrenderReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2422
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerSurrenderRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2465
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerGetFloorStarRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2404
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerGetFloorStarRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2493
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerLevelEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2495
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerLevelEndNotifyContinueStateType(betterproto.Enum):
    CONTINUE_STATE_CAN_NOT_CONTINUE = 0
    CONTINUE_STATE_CAN_ENTER_NEXT_LEVEL = 1
    CONTINUE_STATE_CAN_ENTER_NEXT_FLOOR = 2


class TowerLevelStarCondNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2406
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerMiddleLevelChangeTeamNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2434
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TowerRecordHandbookReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2450
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TowerRecordHandbookRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2443
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WindFieldDungeonFailReason(betterproto.Enum):
    WIND_FIELD_DUNGEON_FAIL_NONE = 0
    WIND_FIELD_DUNGEON_FAIL_CANCEL = 1
    WIND_FIELD_DUNGEON_FAIL_TIMEOUT = 2
    WIND_FIELD_DUNGEON_FAIL_ALL_AVATAR_DIE = 3
    WIND_FIELD_DUNGEON_FAIL_LUA_INTERRUPT = 4


class DungeonDataType(betterproto.Enum):
    DUNGEON_DATA_NONE = 0
    DUNGEON_DATA_END_TIME = 1
    DUNGEON_DATA_MONSTER_DIE_COUNT = 2
    DUNGEON_DATA_LEVEL_CONFIG_ID = 3
    DUNGEON_DATA_TOWER_MONTHLY_LEVEL_CONFIG_ID = 4
    DUNGEON_DATA_TOWER_FLOOR_LEVEL_CONFIG_ID = 5


class ChallengeFinishType(betterproto.Enum):
    CHALLENGE_FINISH_TYPE_NONE = 0
    CHALLENGE_FINISH_TYPE_FAIL = 1
    CHALLENGE_FINISH_TYPE_SUCC = 2
    CHALLENGE_FINISH_TYPE_PAUSE = 3


class CustomDungeonFinishType(betterproto.Enum):
    CUSTOM_DUNGEON_FINISH_PLAY_NORMAL = 0
    CUSTOM_DUNGEON_FINISH_PLAY_TRY = 1
    CUSTOM_DUNGEON_FINISH_EDIT_TRY = 2
    CUSTOM_DUNGEON_FINISH_SELF_PLAY_NORMAL = 3


class DungeonCandidateTeamPlayerLeaveReason(betterproto.Enum):
    DUNGEON_CANDIDATE_TPLR_NORMAL = 0
    DUNGEON_CANDIDATE_TPLR_DIE = 1
    DUNGEON_CANDIDATE_TPLR_BE_KICK = 2
    DUNGEON_CANDIDATE_DISCONNECT = 3


class DungeonCandidateTeamDismissReason(betterproto.Enum):
    DUNGEON_CANDIDATE_TPDR_NORMAL = 0
    DUNGEON_CANDIDATE_TPDR_DIE = 1
    DUNGEON_CANDIDATE_TPDR_DISCONNECT = 2


class DungeonRestartReason(betterproto.Enum):
    DUNGEON_RESTART_REASON_NONE = 0
    DUNGEON_RESTART_REASON_DAILY_RESTART = 1
    DUNGEON_RESTART_REASON_DIE_RETRY = 2


class DungeonEntryInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 972
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonEntryInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 998
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerEnterDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 912
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerEnterDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 935
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerQuitDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 907
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerQuitDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 921
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonWayPointNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 903
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonWayPointActivateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 990
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonWayPointActivateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 973
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 999
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonPlayerDieNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 931
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonDieOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 975
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonDieOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 948
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonShowReminderNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 997
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonPlayerDieReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 981
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonPlayerDieRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 905
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 982
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonChallengeBeginNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 947
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonChallengeFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 939
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChallengeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 953
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonFollowNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 922
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonGetStatueDropReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 965
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonGetStatueDropRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 904
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChallengeRecordNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 993
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 927
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamInviteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 994
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamRefuseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 988
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamPlayerLeaveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 926
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamDismissNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 963
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamCreateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 995
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamCreateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 906
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 934
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 950
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamKickReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 943
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamKickRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 974
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamLeaveReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 976
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamLeaveRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 946
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamReplyInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 941
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamReplyInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 949
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamSetReadyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 991
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamSetReadyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 924
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonCandidateTeamChangeAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 956
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamChangeAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 942
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetDailyDungeonEntryInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 930
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetDailyDungeonEntryInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 967
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonSlipRevivePointActivateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 958
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonSlipRevivePointActivateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 970
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonInterruptChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 917
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonInterruptChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 902
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InteractDailyDungeonInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 919
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonRestartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 961
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonRestartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 929
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonRestartInviteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 957
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonRestartInviteReplyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1000
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonRestartInviteReplyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 916
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DungeonRestartInviteReplyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 987
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonRestartResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 940
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamSetChangingAvatarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 918
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonCandidateTeamSetChangingAvatarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 966
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MistTrialFloorLevelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 968
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DungeonReviseLevelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 933
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FishEscapeReason(betterproto.Enum):
    FISN_ESCAPE_NONE = 0
    FISH_ESCAPE_SHOCKED = 1
    FISH_ESCAPE_UNHOOK = 2


class FishBattleResult(betterproto.Enum):
    FISH_BATTLE_RESULT_NONE = 0
    FISH_BATTLE_RESULT_SUCC = 1
    FISH_BATTLE_RESULT_FAIL = 2
    FISH_BATTLE_RESULT_TIMEOUT = 3
    FISH_BATTLE_RESULT_CANCEL = 4
    FISH_BATTLE_RESULT_EXIT = 5


class EnterFishingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5826
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterFishingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5818
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StartFishingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5825
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class StartFishingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5807
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishCastRodReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5802
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FishCastRodRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5831
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishChosenNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5829
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishEscapeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5822
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishBiteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5844
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FishBiteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5849
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishBattleBeginReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5820
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FishBattleBeginRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5845
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishBattleEndReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5841
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FishBattleEndRspFishNoRewardReason(betterproto.Enum):
    FISH_NO_REWARD_NONE = 0
    FISH_NO_REWARD_ACTIVITY_LIMIT = 1
    FISH_NO_REWARD_BAG_LIMIT = 2
    FISH_NO_REWARD_POOL_LIMIT = 3


class FishBattleEndRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5842
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExitFishingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5814
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ExitFishingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5847
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishAttractNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5837
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishBaitGoneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5823
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerFishingDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5835
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FishPoolDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5848
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetGachaInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1572
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetGachaInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1598
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DoGachaReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1512
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DoGachaRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1535
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GachaWishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1507
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GachaWishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1521
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GachaOpenWishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1503
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GachaSimpleInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1590
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InteractType(betterproto.Enum):
    INTERACT_NONE = 0
    INTERACT_PICK_ITEM = 1
    INTERACT_GATHER = 2
    INTERACT_OPEN_CHEST = 3
    INTERACT_OPEN_STATUE = 4
    INTERACT_CONSUM = 5
    INTERACT_MP_PLAY_REWARD = 6
    INTERACT_VIEW = 7
    INTERACT_GENERAL_REWARD = 8
    INTERACT_MIRACLE_RING = 9
    INTERACT_FOUNDATION = 10
    INTERACT_ECHO_SHELL = 11
    INTERACT_HOME_GATHER = 12
    INTERACT_ENV_ANIMAL = 13
    INTERACT_QUEST_GADGET = 14
    INTERACT_UI_INTERACT = 15
    INTERACT_DESHRET_OBELISK = 16


class InterOpType(betterproto.Enum):
    INTER_OP_FINISH = 0
    INTER_OP_START = 1


class ResinCostType(betterproto.Enum):
    RESIN_COST_TYPE_NONE = 0
    RESIN_COST_TYPE_NORMAL = 1
    RESIN_COST_TYPE_CONDENSE = 2
    RESIN_COST_TYPE_REUNION_PRIVILEGE = 3
    RESIN_COST_TYPE_OP_ACTIVITY = 4
    RESIN_COST_TYPE_MATERIAL = 5


class FoundationOpType(betterproto.Enum):
    FOUNDATION_OP_NONE = 0
    FOUNDATION_OP_BUILD = 1
    FOUNDATION_OP_DEMOLITION = 2
    FOUNDATION_OP_REBUILD = 3
    FOUNDATION_OP_ROTATE = 4
    FOUNDATION_OP_LOCK = 5
    FOUNDATION_OP_UNLOCK = 6


class VehicleInteractType(betterproto.Enum):
    VEHICLE_INTERACT_NONE = 0
    VEHICLE_INTERACT_IN = 1
    VEHICLE_INTERACT_OUT = 2


class GadgetInteractReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 872
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GadgetInteractRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 898
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 812
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorktopOptionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 835
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SelectWorktopOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 807
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SelectWorktopOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 821
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BossChestActivateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 803
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BlossomChestInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 890
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetPlayStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 873
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetPlayStopNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 899
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetPlayDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 831
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetPlayUidOpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 875
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetGeneralRewardInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 848
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetAutoPickDropInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 897
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdateAbilityCreatedMovingPlatformNotifyOpType(betterproto.Enum):
    OP_NONE = 0
    OP_ACTIVATE = 1
    OP_DEACTIVATE = 2


class UpdateAbilityCreatedMovingPlatformNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 881
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FoundationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 805
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FoundationRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 882
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FoundationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 847
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetTalkChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 839
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetChainLevelUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 853
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetChainLevelChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 822
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VehicleInteractReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 865
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class VehicleInteractRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 804
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CreateVehicleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 893
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CreateVehicleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 827
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RequestLiveInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 894
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RequestLiveInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 888
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LiveStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 826
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProjectorOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 863
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ProjectorOptionReqProjectorOpType(betterproto.Enum):
    PROJECTOR_OP_NONE = 0
    PROJECTOR_OP_CREATE = 1
    PROJECTOR_OP_DESTROY = 2


class ProjectorOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 895
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LiveEndNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 806
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class VehicleStaminaNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 834
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetCustomTreeInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 850
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GadgetChangeLevelTagReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 843
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GadgetChangeLevelTagRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 874
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class NightCrowGadgetObservationMatchReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 876
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class NightCrowGadgetObservationMatchRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 846
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DeshretObeliskChestInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 841
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgControllerValue(betterproto.Enum):
    GCG_CONTROLLER_NONE = 0
    GCG_CONTROLLER_A = 1
    GCG_CONTROLLER_B = 2


class GcgDiceSideType(betterproto.Enum):
    GCG_DICE_SIDE_INVALID = 0
    GCG_DICE_SIDE_CRYO = 1
    GCG_DICE_SIDE_HYDRO = 2
    GCG_DICE_SIDE_PYRO = 3
    GCG_DICE_SIDE_ELECTRO = 4
    GCG_DICE_SIDE_GEO = 5
    GCG_DICE_SIDE_DENDRO = 6
    GCG_DICE_SIDE_ANEMO = 7
    GCG_DICE_SIDE_PAIMON = 8


class GcgZoneType(betterproto.Enum):
    GCG_ZONE_INVALID = 0
    GCG_ZONE_DECK = 1
    GCG_ZONE_HAND = 2
    GCG_ZONE_CHARACTER = 3
    GCG_ZONE_MODIFY = 4
    GCG_ZONE_SUMMON = 5
    GCG_ZONE_ASSIST = 7
    GCG_ZONE_ONSTAGE = 8
    GCG_ZONE_RULE = 9


class GcgPhaseType(betterproto.Enum):
    GCG_PHASE_INVALID = 0
    GCG_PHASE_START = 1
    GCG_PHASE_DRAW = 2
    GCG_PHASE_ON_STAGE = 3
    GCG_PHASE_DICE = 4
    GCG_PHASE_MAIN = 5
    GCG_PHASE_END = 6
    GCG_PHASE_DIE = 7
    GCG_PHASE_FIN = 8
    GCG_PHASE_PRE_MAIN = 9
    GCG_PHASE_REROLL = 10


class GcgTargetType(betterproto.Enum):
    GCG_TARGET_NONE = 0
    GCG_TARGET_CARD = 1
    GCG_TARGET_DICE = 2


class GcgCardState(betterproto.Enum):
    GCG_CARD_STATE_HIDE = 0
    GCG_CARD_STATE_SELF = 1
    GCG_CARD_STATE_SHOW = 2


class GcgReason(betterproto.Enum):
    GCG_REASON_DEFAULT = 0
    GCG_REASON_EFFECT = 1
    GCG_REASON_COST = 2
    GCG_REASON_GM = 3
    GCG_REASON_ATTACK = 4
    GCG_REASON_REBOOT = 5
    GCG_REASON_PLAY_CARD = 6
    GCG_REASON_QUICKLY_ONSTAGE = 7
    GCG_REASON_REMOVE_AFTER_DIE = 8
    GCG_REASON_INIT = 9


class GcgClientPerformType(betterproto.Enum):
    GCG_PERFORM_INVALID = 0
    GCG_PERFORM_CARD_EXCHANGE = 1


class GcgEndReason(betterproto.Enum):
    GCG_END_REASON_DEFAULT = 0
    GCG_END_REASON_DIE = 1
    GCG_END_REASON_SURRENDER = 2
    GCG_END_REASON_DISCONNECTED = 3
    GCG_END_REASON_ROUND_LIMIT = 4


class GcgTavernNpcState(betterproto.Enum):
    GCG_TRAVERN_NPC_STATE_NONE = 0
    GCG_TRAVERN_NPC_STATE_DUEL = 1
    GCG_TRAVERN_NPC_STATE_STAND = 2


class GcgGameBusinessType(betterproto.Enum):
    GCG_GAME_NONE = 0
    GCG_GAME_GM = 1
    GCG_GAME_MATCH = 2
    GCG_GAME_PVP = 3
    GCG_GAME_TAVERN_CHALLENGE = 4
    GCG_GAME_CONST_CHALLENGE = 5
    GCG_GAME_WORLD_CHALLENGE = 6
    GCG_GAME_BOSS_CHALLENGE = 7
    GCG_GAME_WEEK_CHALLENGE = 8


class GcgChallengeType(betterproto.Enum):
    GCG_CHALLENGE_NONE = 0
    GCG_CHALLENGE_CONST = 1
    GCG_CHALLENGE_WEEK = 2
    GCG_CHALLENGE_WORLD = 3


class GcgLevelType(betterproto.Enum):
    GCG_LEVEL_NONE = 0
    GCG_LEVEL_CONST = 1
    GCG_LEVEL_WEEK = 2
    GCG_LEVEL_WORLD = 3
    GCG_LEVEL_BOSS = 4
    GCG_LEVEL_CHARACTER = 5


class GcgSkillHpChangeType(betterproto.Enum):
    GCG_SKILL_HP_CHANGE_NONE = 0
    GCG_SKILL_HP_CHANGE_DAMAGE = 1
    GCG_SKILL_HP_CHANGE_HEAL = 2


class GcgSettleOption(betterproto.Enum):
    GCG_SETTLE_OPT_NONE = 0
    GCG_SETTLE_OPT_EXIT = 1
    GCG_SETTLE_OPT_CONTINUE = 2
    GCG_SETTLE_OPT_RESTART = 3


class GcgNewCardInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgOperationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgOperationRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7600
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgMessagePackNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7516
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgAskDuelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7237
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgAskDuelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7869
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgGameBriefDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7539
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgInitFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7684
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgInitFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7433
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgHeartBeatNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7224
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgSkillPreviewNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7503
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgSkillPreviewAskReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7509
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgSkillPreviewAskRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7409
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgChallengeUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7268
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7122
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsCardBackUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7265
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsFieldUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7333
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsCardFaceUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7049
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsCardNumChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7358
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsChangeCardFaceReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7169
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsChangeCardFaceRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7331
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsChangeCardBackReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7292
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsChangeCardBackRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7044
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsChangeFieldReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7541
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsChangeFieldRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7444
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsChangeDeckNameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7432
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsChangeDeckNameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7916
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsDeckSaveReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7104
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsDeckSaveRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7269
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsChangeCurDeckReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7131
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsChangeCurDeckRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7301
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsCurDeckChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7796
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsDeleteDeckReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7988
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgdsDeleteDeckRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7524
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsDeckUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7732
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgdsCardProficiencyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7680
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgtcTavernInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7011
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgtcInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7922
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgtcInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7328
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgtcTavernChallengeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7294
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgtcTavernChallengeUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7184
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgGrowthLevelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7736
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgGrowthLevelRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7477
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgGrowthLevelTakeRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7051
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgGrowthLevelTakeRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7670
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgInviteGuestBattleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7783
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgInviteGuestBattleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7251
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgInviteBattleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7692
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgApplyInviteBattleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7730
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgApplyInviteBattleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7304
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgApplyInviteBattleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7820
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7769
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgResourceStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7876
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgClientSettleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7506
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgClientSettleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7105
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgSettleOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7124
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgSettleOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7735
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgBasicDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7319
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgTavernNpcInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7290
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgStartChallengeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7595
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GcgStartChallengeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7763
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgWeekChallengeInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7615
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgLevelChallengeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7055
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgLevelChallengeFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7629
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgWorldChallengeUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7204
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GcgBossChallengeUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7073
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GroupLinkAllNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5776
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GroupLinkChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5768
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GroupLinkDeleteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5775
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GroupLinkMarkUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5757
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAllH5ActivityInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5668
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllH5ActivityInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5676
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class H5ActivityIdsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5675
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetH5ActivityRedDotTimestampReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5657
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetH5ActivityRedDotTimestampRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5652
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePlantFieldStatus(betterproto.Enum):
    HOME_FIELD_STATUE_NONE = 0
    HOME_FIELD_STATUE_SEED = 1
    HOME_FIELD_STATUE_SPROUT = 2
    HOME_FIELD_STATUE_GATHER = 3


class TryEnterHomeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4482
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TryEnterHomeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4653
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class JoinHomeWorldFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4530
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeBlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4543
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeGetBasicInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4655
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeBasicInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4885
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeChangeEditModeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4564
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeChangeEditModeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4559
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeChangeModuleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4809
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeChangeModuleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4596
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeGetArrangementInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4848
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeGetArrangementInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4844
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeUpdateArrangementInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4510
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeUpdateArrangementInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4757
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPlayerHomeCompInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4597
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerHomeCompInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4880
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetFriendEnterHomeOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4494
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetFriendEnterHomeOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4743
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterHomeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4533
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterHomeResultReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4693
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerApplyEnterHomeResultRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4706
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterHomeResultNotifyReason(betterproto.Enum):
    PLAYER_JUDGE = 0
    PLAYER_ENTER_OPTION_REFUSE = 1
    PLAYER_ENTER_OPTION_DIRECT = 2
    SYSTEM_JUDGE = 3
    HOST_IN_MATCH = 4
    PS_PLAYER_NOT_ACCEPT_OTHERS = 5
    OPEN_STATE_NOT_OPEN = 6
    HOST_IN_EDIT_MODE = 7
    PRIOR_CHECK = 8


class PlayerApplyEnterHomeResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4468
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeSceneJumpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4528
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeSceneJumpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4698
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeChooseModuleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4524
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeChooseModuleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4648
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeModuleUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4560
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeGetOnlineStatusReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4820
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeGetOnlineStatusRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4705
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeKickPlayerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4870
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeKickPlayerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4691
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeModuleSeenReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4499
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeModuleSeenRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4821
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnlockedFurnitureFormulaDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4846
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnlockedFurnitureSuiteDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4454
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetHomeLevelUpRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4557
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetHomeLevelUpRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4603
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetFurnitureCurModuleArrangeCountReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4711
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FurnitureCurModuleArrangeCountNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4498
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeComfortInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4699
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerQuitFromHomeNotifyQuitReason(betterproto.Enum):
    INVALID = 0
    KICK_BY_HOST = 1
    BACK_TO_MY_WORLD = 2
    HOME_BLOCKED = 3
    HOME_IN_EDIT_MODE = 4
    BY_MUIP = 5
    CUR_MODULE_CLOSED = 6


class PlayerQuitFromHomeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4656
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OtherPlayerEnterHomeNotifyReason(betterproto.Enum):
    INVALID = 0
    ENTER = 1
    LEAVE = 2


class OtherPlayerEnterHomeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4628
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePriorCheckNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4599
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeMarkPointNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4474
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAllUnlockedBgmIdListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4608
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeNewUnlockedBgmIdListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4847
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeChangeBgmReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4558
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeChangeBgmRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4488
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeChangeBgmNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4872
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePreChangeEditModeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4639
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeEnterEditModeFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4537
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeEnterEditModeFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4615
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FurnitureMakeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4477
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FurnitureMakeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4782
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeFurnitureMakeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4772
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeFurnitureMakeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4769
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FurnitureMakeFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4841
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FurnitureMakeStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4633
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FurnitureMakeStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4729
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FurnitureMakeCancelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4555
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FurnitureMakeCancelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4683
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FurnitureMakeBeHelpedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4578
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FurnitureMakeHelpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4865
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class FurnitureMakeHelpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4756
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FunitureMakeMakeInfoChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4898
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeLimitedShopInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4825
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeLimitedShopInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4796
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeLimitedShopInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4887
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeLimitedShopGoodsListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4552
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeLimitedShopGoodsListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4546
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeLimitedShopBuyGoodsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4760
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeLimitedShopBuyGoodsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4750
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeLimitedShopInfoChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4790
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeResourceNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4892
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeResourceTakeHomeCoinReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4479
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeResourceTakeHomeCoinRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4541
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeResourceTakeFetterExpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4768
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeResourceTakeFetterExpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4645
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarTalkFinishInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4896
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarTalkReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4688
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeAvatarTalkRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4464
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarRewardEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4852
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarRewardEventGetReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4551
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeAvatarRewardEventGetRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4833
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarSummonAllEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4808
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarSummonEventReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4806
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeAvatarSummonEventRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4817
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarCostumeChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4748
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarSummonFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4629
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeAvatarSummonFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4696
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvtarAllFinishRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4453
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeAvatarAllFinishRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4741
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeSceneInitFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4674
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeSceneInitFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4505
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePlantSeedReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4804
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomePlantSeedRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4556
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePlantWeedReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4640
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomePlantWeedRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4527
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePlantInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4587
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePlantFieldNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4549
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePlantInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4647
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomePlantInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4701
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeTransferReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4726
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeTransferRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4616
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeGetFishFarmingInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4476
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeGetFishFarmingInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4678
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeFishFarmingInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4677
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeUpdateFishFarmingInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4544
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeUpdateFishFarmingInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4857
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeUpdateScenePointFishFarmingInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4511
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeUpdateScenePointFishFarmingInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4540
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeScenePointFishFarmingInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4547
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeCustomFurnitureInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4712
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeEditCustomFurnitureReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4724
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeEditCustomFurnitureRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4496
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePictureFrameInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4878
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeUpdatePictureFrameInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4486
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeUpdatePictureFrameInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4641
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeRacingGallerySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4805
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeGetGroupRecordReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4523
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeGetGroupRecordRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4538
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeClearGroupRecordReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4759
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeClearGroupRecordRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4605
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeBalloonGallerySettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4811
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeBalloonGalleryScoreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4654
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeSeekFurnitureGalleryScoreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4583
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetHomeExchangeWoodInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4473
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetHomeExchangeWoodInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4659
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeExchangeWoodReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4576
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeExchangeWoodRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4622
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeGetBlueprintSlotInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4584
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeGetBlueprintSlotInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4662
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeSetBlueprintSlotOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4798
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeSetBlueprintSlotOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4786
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeSetBlueprintFriendOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4554
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeSetBlueprintFriendOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4604
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeBlueprintInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4765
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomePreviewBlueprintReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4478
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomePreviewBlueprintRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4738
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeCreateBlueprintReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4619
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeCreateBlueprintRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4606
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeDeleteBlueprintReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4502
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeDeleteBlueprintRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4586
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeSearchBlueprintReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4889
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeSearchBlueprintRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4593
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HomeSaveArrangementNoChangeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4704
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HomeSaveArrangementNoChangeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4668
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeHuntingOfferReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4326
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeHuntingOfferRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4318
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetCityHuntingOfferReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4325
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetCityHuntingOfferRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4307
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetHuntingOfferRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4302
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetHuntingOfferRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4331
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HuntingStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4329
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HuntingRevealClueNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4322
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HuntingRevealFinalNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4344
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HuntingSuccessNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4349
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HuntingFailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4320
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HuntingOngoingNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4345
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class HuntingGiveUpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4341
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class HuntingGiveUpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4342
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InvestigationState(betterproto.Enum):
    INVALID = 0
    IN_PROGRESS = 1
    COMPLETE = 2
    REWARD_TAKEN = 3


class InvestigationTargetState(betterproto.Enum):
    INVALID = 0
    IN_PROGRESS = 1
    COMPLETE = 2
    REWARD_TAKEN = 3


class PlayerInvestigationAllInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1928
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeInvestigationRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1912
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeInvestigationRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1922
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeInvestigationTargetRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1918
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeInvestigationTargetRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1916
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetInvestigationMonsterReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1901
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InvestigationMonsterLockState(betterproto.Enum):
    LOCK_NONE = 0
    LOCK_QUEST = 1


class GetInvestigationMonsterRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1910
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerInvestigationNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1911
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerInvestigationTargetNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1929
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MarkTargetInvestigationMonsterNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1915
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InvestigationMonsterUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1906
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InvestigationQuestDailyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1921
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InvestigationReadQuestDailyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1902
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeQueueManipulateType(betterproto.Enum):
    FORGE_QUEUE_MANIPULATE_TYPE_RECEIVE_OUTPUT = 0
    FORGE_QUEUE_MANIPULATE_TYPE_STOP_FORGE = 1


class MaterialDeleteReturnType(betterproto.Enum):
    MATERIAL_DELETE_RETURN_BAG = 0
    MATERIAL_DELETE_RETURN_SEED = 1


class PlayerStoreNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 672
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StoreWeightLimitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 698
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StoreItemChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 612
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class StoreItemDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 635
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ItemAddHintNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 607
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UseItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 690
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UseItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 673
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DropItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 699
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DropItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 631
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WearEquipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 697
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WearEquipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 681
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeoffEquipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 605
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeoffEquipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 682
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarEquipChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 647
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 639
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 653
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WeaponPromoteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 622
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponPromoteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 665
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReliquaryUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 604
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReliquaryUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 693
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReliquaryPromoteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 627
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReliquaryPromoteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 694
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarCardChangeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 688
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarCardChangeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 626
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GrantRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 663
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WeaponAwakenReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 695
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WeaponAwakenRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 606
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ItemCdGroupTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 634
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DropHintNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 650
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CombineReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 643
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CombineRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 674
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeQueueDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 676
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeGetQueueDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 646
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeGetQueueDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 641
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeStartReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 649
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeStartRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 691
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeQueueManipulateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 624
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ForgeQueueManipulateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 656
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ResinChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 642
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BuyResinReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 602
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BuyResinRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 619
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MaterialDeleteReturnNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 661
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeMaterialDeleteReturnReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 629
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeMaterialDeleteReturnRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 657
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MaterialDeleteUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 700
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class McoinExchangeHcoinReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 616
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class McoinExchangeHcoinRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 687
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DestroyMaterialReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 640
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DestroyMaterialRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 618
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetEquipLockStateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 666
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetEquipLockStateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 668
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CalcWeaponUpgradeReturnItemsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 633
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CalcWeaponUpgradeReturnItemsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 684
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 680
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ForgeFormulaDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 689
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CombineDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 659
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CombineFormulaDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 632
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClosedItemNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 614
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CheckAddItemExceedLimitNotifyItemExceedLimitMsgType(betterproto.Enum):
    ITEM_EXCEED_LIMIT_MSG_DEFAULT = 0
    ITEM_EXCEED_LIMIT_MSG_TEXT = 1
    ITEM_EXCEED_LIMIT_MSG_DIALOG = 2
    ITEM_EXCEED_LIMIT_MSG_DIALOG_NONBLOCK = 3


class CheckAddItemExceedLimitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 692
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetIsAutoUnlockSpecificEquipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 620
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetIsAutoUnlockSpecificEquipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 664
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReliquaryDecomposeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 638
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReliquaryDecomposeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 611
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AuthkeySignType(betterproto.Enum):
    AUTHKEY_SIGN_TYPE_NONE = 0
    AUTHKEY_SIGN_TYPE_DEFAULT = 1
    AUTHKEY_SIGN_TYPE_RSA = 2


class MailChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1498
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReadMailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetMailItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1435
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetMailItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1407
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DelMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1421
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DelMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1403
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAuthkeyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1490
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAuthkeyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1473
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientNewMailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1499
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAllMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1431
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1475
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeMailStarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1448
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllMailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1497
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllMailResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1481
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerStartMatchReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4176
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerStartMatchRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4168
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerMatchInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4175
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCancelMatchReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4157
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCancelMatchRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4152
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerMatchStopNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4181
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerMatchSuccNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4179
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerConfirmMatchReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4172
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerConfirmMatchRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4194
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerAllowEnterMpAfterAgreeMatchNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4199
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerMatchAgreedResultNotifyReason(betterproto.Enum):
    SUCC = 0
    TARGET_SCENE_CANNOT_ENTER = 1
    SELF_MP_UNAVAILABLE = 2
    OTHER_DATA_VERSION_NOT_LATEST = 3
    DATA_VERSION_NOT_LATEST = 4


class PlayerMatchAgreedResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4170
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpAfterMatchAgreedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4195
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerGeneralMatchDismissNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4191
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerGeneralMatchConfirmNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4192
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerGetForceQuitBanInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4164
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerGetForceQuitBanInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4197
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerTryCancelGeneralMatchNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4187
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerGcgMatchDismissNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4173
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerGcgMatchConfirmNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4185
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetMechanicusInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3972
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetMechanicusInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3998
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MechanicusSequenceOpenNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3912
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MechanicusCoinNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3935
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MechanicusOpenNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3907
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MechanicusCloseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3921
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MechanicusUnlockGearReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3903
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MechanicusUnlockGearRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3990
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MechanicusLevelupGearReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3973
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MechanicusLevelupGearRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3999
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EnterMechanicusDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3931
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class EnterMechanicusDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3975
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MechanicusCandidateTeamCreateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3981
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MechanicusCandidateTeamCreateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3905
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UseMiracleRingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5226
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UseMiracleRingReqMiracleRingOpType(betterproto.Enum):
    MIRACLE_RING_OP_NONE = 0
    MIRACLE_RING_OP_PLACE = 1
    MIRACLE_RING_OP_RETRACT = 2


class UseMiracleRingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5218
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MiracleRingDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5225
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MiracleRingTakeRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MiracleRingTakeRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5202
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MiracleRingDropResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5231
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MiracleRingDeliverItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5229
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MiracleRingDeliverItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5222
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MiracleRingDestroyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5244
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SvrMsgId(betterproto.Enum):
    MSG_UNKNOWN = 0
    MSG_BLOCK_REFRESH_COUNTDOWN = 1
    MSG_AVATAR_REVIVE_BY_STATUE = 2
    MSG_DAILY_TASK_REWARD_MAX_NUM = 3
    MSG_ROUTINE_TYPE_NOT_OPEN = 4
    MSG_ROUTINE_TYPE_REWARD_MAX_NUM = 5
    MSG_MECHANICUS_COIN_LIMIT = 6


class ServerLogType(betterproto.Enum):
    SERVER_LOG_NONE = 0
    SERVER_LOG_ABILITY = 1
    SERVER_LOG_LEVEL = 2
    SERVER_LOG_ENTITY = 3
    SERVER_LOG_LUA = 4


class ServerLogLevel(betterproto.Enum):
    LOG_LEVEL_NONE = 0
    LOG_LEVEL_DEBUG = 1
    LOG_LEVEL_INFO = 2
    LOG_LEVEL_WARNING = 3
    LOG_LEVEL_ERROR = 4


class ClientReconnectReason(betterproto.Enum):
    CLIENT_RECONNNECT_NONE = 0
    CLIENT_RECONNNECT_QUIT_MP = 1


class KeepAliveNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 72
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GmTalkReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 98
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GmTalkRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ShowMessageNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 35
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 7
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 21
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetOnlinePlayerListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 90
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetOnlinePlayerListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 73
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 99
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class ServerLogNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 31
    ENET_CHANNEL_ID = 1
    ENET_IS_RELIABLE = 1


class ClientReconnectNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 75
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RobotPushPlayerDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 97
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientReportNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 81
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UnionCmdNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetOnlinePlayerInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 82
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetOnlinePlayerInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 47
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CheckSegmentCrcNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 39
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CheckSegmentCrcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 53
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WorldPlayerRttNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 22
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EchoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 65
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdateRedPointNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 93
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientBulletCreateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeServerGlobalValueNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 27
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GmTalkNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 94
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LastPacketPrintNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 88
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MonsterSummonTagNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1372
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1826
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1818
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerApplyEnterMpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1825
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpResultNotifyReason(betterproto.Enum):
    PLAYER_JUDGE = 0
    SCENE_CANNOT_ENTER = 1
    PLAYER_CANNOT_ENTER_MP = 2
    SYSTEM_JUDGE = 3
    ALLOW_ENTER_PLAYER_FULL = 4
    WORLD_LEVEL_LOWER_THAN_HOST = 5
    HOST_IN_MATCH = 6
    PLAYER_IN_BLACKLIST = 7
    PS_PLAYER_NOT_ACCEPT_OTHERS = 8
    HOST_IS_BLOCKED = 9
    OTHER_DATA_VERSION_NOT_LATEST = 10
    DATA_VERSION_NOT_LATEST = 11
    PLAYER_NOT_IN_PLAYER_WORLD = 12
    MAX_PLAYER = 13


class PlayerApplyEnterMpResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1807
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerApplyEnterMpResultReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1802
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerApplyEnterMpResultRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1831
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerQuitFromMpNotifyQuitReason(betterproto.Enum):
    INVALID = 0
    HOST_NO_OTHER_PLAYER = 1
    KICK_BY_HOST = 2
    BACK_TO_MY_WORLD = 3
    KICK_BY_HOST_LOGOUT = 4
    KICK_BY_HOST_BLOCK = 5
    BE_BLOCKED = 6
    KICK_BY_HOST_ENTER_HOME = 7
    HOST_SCENE_INVALID = 8
    KICK_BY_PLAY = 9
    KICK_BY_ISLAND_PARTY_GALLERY_START_FAILED = 10


class PlayerQuitFromMpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1829
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerPreEnterMpNotifyState(betterproto.Enum):
    INVALID = 0
    START = 1
    TIMEOUT = 2


class PlayerPreEnterMpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1822
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPlayerMpModeAvailabilityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1844
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerMpModeAvailabilityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1849
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerSetOnlyMpWithPsPlayerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1820
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerSetOnlyMpWithPsPlayerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1845
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PsPlayerApplyEnterMpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1841
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PsPlayerApplyEnterMpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1842
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayOwnerCheckReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1814
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MpPlayOwnerCheckRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1847
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayOwnerStartInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1837
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MpPlayOwnerStartInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1823
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayOwnerInviteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1835
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayGuestReplyInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1848
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MpPlayGuestReplyInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1850
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayGuestReplyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1812
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayPrepareNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1833
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayInviteResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1815
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpPlayPrepareInterruptNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1813
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MpBlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1801
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class NpcTalkReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 572
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class NpcTalkRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 598
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetSceneNpcPositionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 535
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetSceneNpcPositionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 507
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MetNpcIdListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 521
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MeetNpcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 503
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class MeetNpcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 590
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishedTalkIdListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 573
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerOfferingDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2923
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerOfferingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2907
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerOfferingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2917
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeOfferingLevelRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2919
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeOfferingLevelRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2911
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OfferingInteractReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2918
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class OfferingInteractRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2908
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetOpActivityInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5172
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetOpActivityInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5198
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OpActivityDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5112
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OpActivityUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5135
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QueryPathReqOptionType(betterproto.Enum):
    OPTION_NONE = 0
    OPTION_NORMAL = 1
    OPTION_FIRST_CAN_GO = 2


class QueryPathReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2372
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QueryPathRspPathStatusType(betterproto.Enum):
    STATUS_FAIL = 0
    STATUS_SUCC = 1
    STATUS_PARTIAL = 2


class QueryPathRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2398
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ObstacleInfoShapeType(betterproto.Enum):
    OBSTACLE_SHAPE_CAPSULE = 0
    OBSTACLE_SHAPE_BOX = 1


class ObstacleModifyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2312
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PathfindingPingNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2335
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PathfindingEnterSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2307
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PathfindingEnterSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2321
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GmShowObstacleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2361
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GmShowObstacleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2329
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GmShowNavMeshReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2357
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PbNavMeshPolyEdgeType(betterproto.Enum):
    INNER = 0
    TILE_BOUND = 1
    TILE_BOUND_UNCONNECT = 2
    TILE_BOUND_OVERIDE = 3


class GmShowNavMeshRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2400
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class NavMeshStatsNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2316
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CompoundBoostTakeStatusType(betterproto.Enum):
    COMPOUND_BOOST_TAKE_STATUS_NONE = 0
    COMPOUND_BOOST_TAKE_STATUS_BOOST_ONLY = 1
    COMPOUND_BOOST_TAKE_STATUS_BOOST_AND_TAKE = 2
    COMPOUND_BOOST_TAKE_STATUS_BAG_FULL = 3


class GetPlayerTokenReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 172
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPlayerTokenRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 198
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLoginReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 112
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerLoginRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 135
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLogoutReqReason(betterproto.Enum):
    DISCONNECT = 0
    CLIENT_REQ = 1
    TIMEOUT = 2
    ADMIN_REQ = 3
    SERVER_CLOSE = 4
    GM_CLEAR = 5
    PLAYER_TRANSFER = 6
    CLIENT_CHECKSUM_INVALID = 7


class PlayerLogoutReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerLogoutRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 121
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLogoutNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 103


class PlayerDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 190
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChangeGameTimeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 173
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ChangeGameTimeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 199
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerGameTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 131
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 175
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientTriggerEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 148
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerPropReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 197
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerPropRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 181
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetPlayerBornDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 105
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerBornDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 182
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DoSetPlayerBornDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 147
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerPropChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 139
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetPlayerNameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 153
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetPlayerNameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 122
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SetOpenStateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 165
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SetOpenStateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 104
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OpenStateUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 193
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OpenStateChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 127
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCookReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 194
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCookRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 188
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerRandomCookReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 126
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerRandomCookRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 163
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CookDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 195
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CookRecipeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 106
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CookGradeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 134
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCompoundMaterialReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 150
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCompoundMaterialRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 143
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeCompoundOutputReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 174
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeCompoundOutputRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 176
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CompoundDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 146
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetCompoundDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 141
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetCompoundDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 149
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 191
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerSetPauseReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 124
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerSetPauseRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 156
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerSetLanguageReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 142
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerSetLanguageRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 130
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DataResVersionNotifyDataResVersionOpType(betterproto.Enum):
    OP_TYPE_NONE = 0
    OP_TYPE_RELOGIN = 1
    OP_TYPE_MP_RELOGIN = 2


class DataResVersionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 167
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 158
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskProgressNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 170
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskScoreRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 117
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldOwnerDailyTaskNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 102
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddRandTaskInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 119
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RemoveRandTaskInfoNotifyFinishReason(betterproto.Enum):
    DEFAULT = 0
    CLEAR = 1
    DISTANCE = 2
    FINISH = 3


class RemoveRandTaskInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 161
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakePlayerLevelRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 129
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakePlayerLevelRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 157
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLevelRewardUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 200
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GivingRecordNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 116
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GivingRecordChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 187
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ItemGivingReqItemGivingType(betterproto.Enum):
    QUEST = 0
    GADGET = 1


class ItemGivingReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 140
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ItemGivingRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 118
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCookArgsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 166
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCookArgsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 168
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerLuaShellNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 133
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerDisconnectClientNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 184
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AntiAddictNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 180
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerForceExitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 189
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerForceExitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 159
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerInjectFixNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 132
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TaskVarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 160
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ClientLockGameTimeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 114
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetNextResourceInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 192
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetNextResourceInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 120
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AdjustWorldLevelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 164
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AdjustWorldLevelRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 138
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskFilterCityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 111
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class DailyTaskFilterCityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 144
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DailyTaskUnlockedCitiesNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 186
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ExclusiveRuleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 101
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CompoundUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 128
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetGameplayRecommendationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 151
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetGameplayRecommendationRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 123
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeBackGivingItemReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 171
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeBackGivingItemRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 145
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerNicknameAuditDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 108
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerNicknameNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 109
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class NicknameAuditConfigNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 152
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReadNicknameAuditReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 177
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReadNicknameAuditRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 137
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerCompoundMaterialBoostReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 185
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PlayerCompoundMaterialBoostRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 125
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PropChangeReason(betterproto.Enum):
    PROP_CHANGE_NONE = 0
    PROP_CHANGE_STATUE_RECOVER = 1
    PROP_CHANGE_ENERGY_BALL = 2
    PROP_CHANGE_ABILITY = 3
    PROP_CHANGE_LEVELUP = 4
    PROP_CHANGE_ITEM = 5
    PROP_CHANGE_AVATAR_CARD = 6
    PROP_CHANGE_CITY_LEVELUP = 7
    PROP_CHANGE_AVATAR_UPGRADE = 8
    PROP_CHANGE_AVATAR_PROMOTE = 9
    PROP_CHANGE_PLAYER_ADD_EXP = 10
    PROP_CHANGE_FINISH_QUEST = 11
    PROP_CHANGE_GM = 12
    PROP_CHANGE_MANUAL_ADJUST_WORLD_LEVEL = 13


class ChangeEnergyReason(betterproto.Enum):
    CHANGE_ENERGY_NONE = 0
    CHANGE_ENERGY_SKILL_START = 1


class MarkNewType(betterproto.Enum):
    MARK_NEW_TYPE_NONE = 0
    MARK_NEW_TYPE_COMBINE = 1
    MARK_NEW_TYPE_FORGE = 2


class EntityPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1272
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class LifeStateChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1298
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityFightPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1212
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityFightPropUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1235
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFightPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarFightPropUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1221
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class EntityFightPropChangeReasonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1203
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarLifeStateChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1290
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarPropChangeReasonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1273
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerPropChangeReasonNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1299
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarPropNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1231
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class MarkNewNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1275
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChapterState(betterproto.Enum):
    CHAPTER_STATE_INVALID = 0
    CHAPTER_STATE_UNABLE_TO_BEGIN = 1
    CHAPTER_STATE_BEGIN = 2
    CHAPTER_STATE_END = 3


class BargainResultType(betterproto.Enum):
    BARGAIN_COMPLETE_SUCC = 0
    BARGAIN_SINGLE_FAIL = 1
    BARGAIN_COMPLETE_FAIL = 2


class QuestListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 472
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestListUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 498
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestDelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 412
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishedParentQuestNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 435
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class FinishedParentQuestUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 407
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AddQuestContentProgressReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 421
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AddQuestContentProgressRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 403
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetQuestTalkHistoryReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 490
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetQuestTalkHistoryRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 473
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestCreateEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 499
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestCreateEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 431
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestDestroyEntityReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 475
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestDestroyEntityRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 448
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ChapterStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 405
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestProgressUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 482
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestUpdateQuestVarReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 447
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestUpdateQuestVarRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 439
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestUpdateQuestVarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 453
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestDestroyNpcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 422
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestDestroyNpcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 465
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BargainStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 404
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BargainOfferPriceReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 493
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BargainOfferPriceRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 427
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BargainTerminateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 494
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetBargainDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 488
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetBargainDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 426
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetAllActivatedBargainDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 463
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetAllActivatedBargainDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 495
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerCondMeetQuestListUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 406
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestGlobalVarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 434
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestTransmitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 450
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class QuestTransmitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 443
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PersonalLineAllDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 474
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class LockedPersonallineDataLockReason(betterproto.Enum):
    LEVEL = 0
    QUEST = 1


class PersonalLineAllDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 476
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RedeemLegendaryKeyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 446
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RedeemLegendaryKeyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 441
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnlockPersonalLineReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 449
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UnlockPersonalLineRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 491
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CancelFinishParentQuestNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 424
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class QuestUpdateQuestTimeVarNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 456
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PersonalLineNewUnlockNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 442
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class NpcTalkStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 430
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetQuestLackingResourceReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 467
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetQuestLackingResourceRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 458
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetParentQuestVideoKeyReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 470
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetParentQuestVideoKeyRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 417
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ParentQuestInferenceDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 402
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class InterpretInferenceWordReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 419
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class InterpretInferenceWordRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 461
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AssociateInferenceWordReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 429
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AssociateInferenceWordRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 457
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SubmitInferenceWordReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 500
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SubmitInferenceWordRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 416
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RechargeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4126
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class RechargeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4118
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OrderFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4125
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CardProductRewardNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerRechargeDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4102
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OrderDisplayNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4131
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReportTrackingIoInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4129
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeResinCardDailyRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4122
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeResinCardDailyRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4144
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ResinCardDataUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4149
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RegionalPlayInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6276
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class DeathZoneInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6268
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerDeathZoneNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6275
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RegionSearchNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5626
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class RegionSearchChangeRegionNotifyRegionEvent(betterproto.Enum):
    REGION_EVENT_NONE = 0
    REGION_EVENT_ENTER = 1
    REGION_EVENT_LEAVE = 2


class RegionSearchChangeRegionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5618
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeRegionSearchRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5625
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeRegionSearchRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5607
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetRegionSearchReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5602
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class NormalUidOpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5726
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerMessageNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5718
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetCityReputationInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2872
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetCityReputationInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2898
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeCityReputationLevelRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2812
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeCityReputationLevelRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2835
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CityReputationLevelupNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2807
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeCityReputationParentQuestReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2821
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeCityReputationParentQuestRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2803
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AcceptCityReputationRequestReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2890
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AcceptCityReputationRequestRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2873
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CancelCityReputationRequestReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2899
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class CancelCityReputationRequestRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2831
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetCityReputationMapInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2875
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetCityReputationMapInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2848
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeCityReputationExploreRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2897
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeCityReputationExploreRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2881
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CityReputationDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2805
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReunionBriefInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5076
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ReunionBriefInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5068
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeReunionFirstGiftRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5075
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeReunionFirstGiftRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5057
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetReunionSignInInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5052
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetReunionSignInInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5081
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeReunionSignInRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5079
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeReunionSignInRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5072
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetReunionMissionInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5094
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetReunionMissionInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5099
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeReunionWatcherRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5070
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeReunionWatcherRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5095
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UpdateReunionWatcherNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5091
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TakeReunionMissionRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5092
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class TakeReunionMissionRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5064
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetReunionPrivilegeInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5097
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetReunionPrivilegeInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5087
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReunionSettleNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5073
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReunionActivateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5085
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReunionPrivilegeChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5098
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ReunionDailyRefreshNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 5100
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerRoutineDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3526
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldAllRoutineTypeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3518
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldRoutineTypeRefreshNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3525
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldRoutineChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3507
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WorldRoutineTypeCloseNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 3502
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayBattleState(betterproto.Enum):
    SCENE_PLAY_BATTLE_NONE = 0
    SCENE_PLAY_BATTLE_INIT = 1
    SCENE_PLAY_BATTLE_PREPARE = 2
    SCENE_PLAY_BATTLE_READY = 3
    SCENE_PLAY_BATTLE_PRESTART = 4
    SCENE_PLAY_BATTLE_START = 5
    SCENE_PLAY_BATTLE_STOP = 6


class ScenePlayBattleInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4422
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayOwnerCheckReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4448
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ScenePlayOwnerCheckRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4362
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayOwnerStartInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4385
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ScenePlayOwnerStartInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4357
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayOwnerInviteNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4371
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayGuestReplyInviteReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4353
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ScenePlayGuestReplyInviteRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4440
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayGuestReplyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4423
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayInviteResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4449
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayInfoListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4381
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayBattleInterruptNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4425
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayBattleResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4398
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayBattleUidOpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4447
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayBattleInfoListNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4431
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ScenePlayOutofRegionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 4355
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AllShareCdDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 9072
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ShopGoodsDisableType(betterproto.Enum):
    SHOP_GOODS_DISABLE_NONE = 0
    SHOP_GOODS_DISABLE_TALENT_FULL = 1
    SHOP_GOODS_DISABLE_FURNITURE_FORMULA_UNLOCKED = 2
    SHOP_GOODS_DISABLE_COSTUME_UNLOCKED = 3
    SHOP_GOODS_DISABLE_BGM_UNLOCKED = 4
    SHOP_GOODS_DISABLE_GCG_CARD_EXCEED = 5
    SHOP_GOODS_DISABLE_GCG_CARD_FACE_UNLOCKED = 6
    SHOP_GOODS_DISABLE_GCG_CARD_BACK_UNLOCKED = 7
    SHOP_GOODS_DISABLE_GCG_FIELD_UNLOCKED = 8


class GetShopReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 772
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetShopRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 798
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BuyGoodsReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 712
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BuyGoodsRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 735
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetShopmallDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 707
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetShopmallDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 721
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetActivityShopSheetInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 703
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetActivityShopSheetInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 790
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class OpActivityStateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2572
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SignInInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2512
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class SignInInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2535
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetSignInRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2507
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetSignInRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2521
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BonusActivityUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2575
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BonusActivityInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2548
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BonusActivityInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2597
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetBonusActivityRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2581
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetBonusActivityRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2505
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class UnlockAvatarTalentReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1072
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class UnlockAvatarTalentRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1098
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarUnlockTalentNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1012
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillDepotChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1035
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class BigTalentPointConvertReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1007
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class BigTalentPointConvertRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1021
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillMaxChargeCountNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1003
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1090
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProudSkillUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1073
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ProudSkillUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1099
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProudSkillChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1031
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillUpgradeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1075
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class AvatarSkillUpgradeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1048
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class AvatarSkillChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1097
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ProudSkillExtraLevelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1081
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class CanUseSkillNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1005
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class TeamResonanceChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 1082
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ToTheMoonQueryPathReqOptionType(betterproto.Enum):
    OPTION_NONE = 0
    OPTION_NORMAL = 1


class ToTheMoonQueryPathReqAStarMethod(betterproto.Enum):
    Classic = 0
    Tendency = 1
    Adaptive = 2
    Inflection = 3


class ToTheMoonQueryPathReqFilterType(betterproto.Enum):
    All = 0
    Air = 1
    Water = 2


class ToTheMoonQueryPathReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6172
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ToTheMoonQueryPathRspPathStatusType(betterproto.Enum):
    STATUS_FAIL = 0
    STATUS_SUCC = 1
    STATUS_PARTIAL = 2


class ToTheMoonQueryPathRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6198
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ToTheMoonPingNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6112
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ToTheMoonEnterSceneReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6135
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ToTheMoonEnterSceneRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6107
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ToTheMoonObstacleInfoShapeType(betterproto.Enum):
    OBSTACLE_SHAPE_CAPSULE = 0
    OBSTACLE_SHAPE_BOX = 1


class ToTheMoonAddObstacleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6121
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ToTheMoonAddObstacleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6103
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ToTheMoonRemoveObstacleReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6190
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class ToTheMoonRemoveObstacleReqObstacleType(betterproto.Enum):
    Box = 0
    Capsule = 1


class ToTheMoonRemoveObstacleRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6173
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ToTheMoonObstaclesModifyNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 6199
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PushTipsState(betterproto.Enum):
    PUSH_TIPS_STATE_NONE = 0
    PUSH_TIPS_STATE_START = 1
    PUSH_TIPS_STATE_READ = 2
    PUSH_TIPS_STATE_FINISH = 3


class WatcherAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2272
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WatcherChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2298
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class WatcherEventNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2212
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WatcherEventTypeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2235
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class WatcherEventStageNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2207
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PushTipsAllDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2222
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PushTipsChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2265
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PushTipsReadFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2204
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class PushTipsReadFinishRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2293
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GetPushTipsRewardReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2227
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1
    IS_ALLOW_CLIENT = 1


class GetPushTipsRewardRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 2294
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class GroupBinOperation(betterproto.Enum):
    GROUP_OP_NONE = 0
    GROUP_OP_GADGET_MAP_DEL = 1
    GROUP_OP_DEL_GADGET_LIST = 2
    GROUP_OP_MONSTER_MAP_DEL = 3
    GROUP_OP_DEL_MONSTER_LIST = 4
    GORUP_OP_DEL_TRIGGER = 5
    GROUP_OP_SET_TRIGGER_COUNT = 6
    GROUP_OP_SET_VARIABLE_VAL = 7
    GROUP_OP_SET_TARGET_SUITE = 8
    GROUP_OP_SET_GADGET_STATE = 9
    GROUP_OP_SET_DEAD = 10
    GROUP_OP_SET_UNREGISTER = 11


class GroupLinkOpType(betterproto.Enum):
    GROUP_LINK_OP_NONE = 0
    GROUP_LINK_OP_BUNDLE_REGISTER = 1
    GROUP_LINK_OP_BUNDLE_FINISH = 2
    GROUP_LINK_OP_BUNDLE_UNREGISTER = 3


class SceneTagOpType(betterproto.Enum):
    SCENE_TAG_OP_NONE = 0
    SCENE_TAG_OP_ADD = 1
    SCENE_TAG_OP_DEL = 2


class OfflineOpType(betterproto.Enum):
    OFFLINE_OP_NONE = 0
    OFFLINE_OP_TEST = 1
    OFFLINE_OP_FURNITURE_MAKE_HELP = 2
    OFFLINE_OP_PLANT_FLOWER_ACTIVITY_GIVE_FLOWER = 3
    OFFLINE_OP_WINTER_CAMP_GIVE_ITEM = 4
    OFFLINE_OP_ACTIVITY_GIVE_GIFT = 5
    OFFLINE_OP_VINTAGE_ACTIVITY_DIVIDEND = 6
    OFFLINE_OP_GCG_SETTLE = 7


class TrialAvatarGrantRecordBinGrantReason(betterproto.Enum):
    INVALID = 0
    GRANT_BY_QUEST = 1


class SeaLampPlayerContributionNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10672


class SeaLampProgressNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10698


class SeaLampBroadcastNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10612


class SeaLampSetProgressByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10635


class SeaLampSetProgressByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10607


class SeaLampProgressImplementNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10621


class SeaLampClearProgressByGmNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10603


class SeaLampAddProgressByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10690


class SeaLampAddProgressByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10673


class GetActivityDataByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10699


class GetActivityDataByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10631


class ServerGcgOperationReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12436


class ServerGcgDuelNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12341
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGcgAskDuelReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12457


class ServerGcgNewGameInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12360


class ServerGcggmCommandReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12373


class ServerGcggmCommandRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12338


class ServerGcgInitFinishReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12334


class ServerGcgSyncReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12456


class ServerGcgSyncRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12328


class ServerGcgCreateSingleGameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12489


class ServerGcgCreateSingleGameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12308


class ServerGcgStopGameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12499


class ServerGcgStopGameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12492


class ServerGcgSkillPreviewAskReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12319


class ServerGcgSkillPreviewAskRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12477


class ServerGcgCreateMultiGameReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12476


class ServerGcgCreateMultiGameRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12490


class PlayerStatusType(betterproto.Enum):
    PLAYER_STATUS_OFFLINE = 0
    PLAYER_STATUS_ONLINE = 1


class HomeStatusType(betterproto.Enum):
    HOME_STATUS_OFFLINE = 0
    HOME_STATUS_ONLINE = 1


class CustomDungeonRecommendType(betterproto.Enum):
    CUSTOM_DUNGEON_RECOMMEND_NONE = 0
    CUSTOM_DUNGEON_RECOMMEND_NEW = 1
    CUSTOM_DUNGEON_RECOMMEND_OLD = 2


class UgcRedisDataType(betterproto.Enum):
    UGC_REDIS_DATA_TYPE_NONE = 0
    UGC_REDIS_DATA_TYPE_MINE = 1
    UGC_REDIS_DATA_TYPE_PUBLISH = 2


class ChatRedisDataSystemHintType(betterproto.Enum):
    CHAT_NONE = 0
    CHAT_ENTER_WORLD = 1
    CHAT_LEAVE_WORLD = 2


class ChatMixRedisDataSystemHintType(betterproto.Enum):
    CHAT_NONE = 0
    CHAT_ENTER_WORLD = 1
    CHAT_LEAVE_WORLD = 2


class HomeGetBlueprintBriefReason(betterproto.Enum):
    HOME_GET_BLUEPRINT_BRIEF_REASON_NONE = 0
    HOME_GET_BLUEPRINT_BRIEF_REASON_FETCH = 1
    HOME_GET_BLUEPRINT_BRIEF_REASON_SEARCH = 2


class GetHomeDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12072


class GetHomeDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12098


class SaveHomeDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12012


class SaveHomeDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12035


class ServerTryEnterHomeReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12007


class ServerTryEnterHomeRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12021


class ServerBlockHomeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12003


class ServerGetFriendEnterHomeOptionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12090


class ServerGetFriendEnterHomeOptionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12073


class HomeOnlineStatusInfoStatusType(betterproto.Enum):
    ONLINE = 0
    OFFLINE = 1


class HomeOnlineStatusNotifyEnum(betterproto.Enum):
    NONE = 0
    CMD_ID = 12099


class SendHomeOfflineMsgReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12031


class SendHomeOfflineMsgRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12075


class NewHomeOfflineMsgNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12048


class GetHomeOfflineMsgReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12097


class GetHomeOfflineMsgRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12081


class RemoveHomeOfflineMsgNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12005


class ClearHomeOfflineMsgNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12082


class ServerHomeGetOnlineStatusReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12047


class ServerHomeGetOnlineStatusRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12039


class ServerHomeKickPlayerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12053


class ServerHomeKickPlayerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12022


class ServerHomeGetBlueprintBriefDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12065


class ServerHomeGetBlueprintBriefDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12004


class ServerHomeUpdateBlueprintBriefDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12093


class ServerHomeUpdateBlueprintBriefDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12027


class ServerHomeGetBlueprintDetailDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12094


class ServerHomeGetBlueprintDetailDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12088


class ServerHomeSaveBlueprintDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12026


class ServerHomeSaveBlueprintDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12063


class ServerHomeDeleteBlueprintDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12095


class ServerHomeDeleteBlueprintDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12006


class ServerHomeBlueprintCacheInvalidNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12034


class CmdIdConfig(betterproto.Enum):
    CMD_MISC_BEGIN = 0
    CMD_MISC_END = 100
    CMD_PLAYER_BEGIN = 101
    CMD_PLAYER_END = 200
    CMD_SCENE_BEGIN_1 = 201
    CMD_SCENE_END_1 = 300
    CMD_SCENE_BEGIN_2 = 3001
    CMD_SCENE_END_2 = 3500
    CMD_FIGHT_BEGIN = 301
    CMD_FIGHT_END = 400
    CMD_QUEST_BEGIN = 401
    CMD_QUEST_END = 500
    CMD_NPC_BEGIN = 501
    CMD_NPC_END = 600
    CMD_ITEM_BEGIN = 601
    CMD_ITEM_END = 700
    CMD_SHOP_BEGIN = 701
    CMD_SHOP_END = 800
    CMD_GADGET_BEGIN = 801
    CMD_GADGET_END = 900
    CMD_DUNGEON_BEGIN = 901
    CMD_DUNGEON_END = 1000
    CMD_SKILL_BEGIN = 1001
    CMD_SKILL_END = 1100
    CMD_ABILITY_BEGIN = 1101
    CMD_ABILITY_END = 1200
    CMD_PROPERTY_BEGIN = 1201
    CMD_PROPERTY_END = 1300
    CMD_MONSTER_BEGIN = 1301
    CMD_MONSTER_END = 1400
    CMD_MAIL_BEGIN = 1401
    CMD_MAIL_END = 1500
    CMD_GACHA_BEGIN = 1501
    CMD_GACHA_END = 1600
    CMD_AVATAR_BEGIN = 1601
    CMD_AVATAR_END = 1800
    CMD_MP_BEGIN = 1801
    CMD_MP_END = 1850
    CMD_INVESTIGATION_BEGIN = 1901
    CMD_INVESTIGATION_END = 1930
    CMD_COOP_BEGIN = 1951
    CMD_COOP_END = 2000
    CMD_ACTIVITY_BEGIN_1 = 2001
    CMD_ACTIVITY_END_1 = 2200
    CMD_ACTIVITY_BEGIN_2 = 8001
    CMD_ACTIVITY_END_2 = 9000
    CMD_ACTIVITY_BEGIN_3 = 20001
    CMD_ACTIVITY_END_3 = 25000
    CMD_WATCHER_BEGIN = 2201
    CMD_WATCHER_END = 2300
    CMD_PATHFINDING_BEGIN = 2301
    CMD_PATHFINDING_END = 2400
    CMD_TOWER_BEGIN = 2401
    CMD_TOWER_END = 2500
    CMD_SIGN_IN_BEGIN = 2501
    CMD_SIGN_IN_END = 2600
    CMD_BATTLE_PASS_BEGIN = 2601
    CMD_BATTLE_PASS_END = 2650
    CMD_ACHIEVEMENT_BEGIN = 2651
    CMD_ACHIEVEMENT_END = 2700
    CMD_BLOSSOM_BEGIN = 2701
    CMD_BLOSSOM_END = 2800
    CMD_REPUTATION_BEGIN = 2801
    CMD_REPUTATION_END = 2900
    CMD_OFFERING_BEGIN = 2901
    CMD_OFFERING_END = 2925
    CMD_ROUTINE_BEGIN = 3501
    CMD_ROUTINE_END = 3550
    CMD_MECHANICUS_BEGIN = 3901
    CMD_MECHANICUS_END = 4000
    CMD_SOCIAL_BEGIN = 4001
    CMD_SOCIAL_END = 4100
    CMD_RECHARGE_BEGIN = 4101
    CMD_RECHARGE_END = 4150
    CMD_MATCH_BEGIN = 4151
    CMD_MATCH_END = 4200
    CMD_CODEX_BEGIN = 4201
    CMD_CODEX_END = 4210
    CMD_STAT_BEGIN = 4211
    CMD_STAT_END = 4250
    CMD_WIDGET_BEGIN_1 = 4251
    CMD_WIDGET_END_1 = 4300
    CMD_WIDGET_BEGIN_2 = 5900
    CMD_WIDGET_END_2 = 6100
    CMD_HUNTING_BEGIN = 4301
    CMD_HUNTING_END = 4350
    CMD_SCENE_PLAY_BEGIN = 4351
    CMD_SCENE_PLAY_END = 4450
    CMD_HOME_BEGIN = 4451
    CMD_HOME_END = 4900
    CMD_CHAT_BEGIN = 4951
    CMD_CHAT_END = 5050
    CMD_REUNION_BEGIN = 5051
    CMD_REUNION_END = 5100
    CMD_OP_ACTIVITY_BEGIN = 5101
    CMD_OP_ACTIVITY_END = 5200
    CMD_MIRACLE_RING_BEGIN = 5201
    CMD_MIRACLE_RING_END = 5250
    CMD_MULTISTAGE_PLAY_BEGIN = 5301
    CMD_MULTISTAGE_PLAY_END = 5400
    CMD_DRAFT_BEGIN = 5401
    CMD_DRAFT_END = 5500
    CMD_GALLERY_BEGIN = 5501
    CMD_GALLERY_END = 5600
    CMD_REGION_SEARCH_BEGIN = 5601
    CMD_REGION_SEARCH_END = 5650
    CMD_H5_ACTIVITY_BEGIN = 5651
    CMD_H5_ACTIVITY_END = 5700
    CMD_REMINDER_BEGIN = 5701
    CMD_REMINDER_END = 5750
    CMD_GROUP_LINK_BEGIN = 5751
    CMD_GROUP_LINK_END = 5800
    CMD_FISH_BEGIN = 5801
    CMD_FISH_END = 5850
    CMD_TOTHEMOON_BEGIN = 6101
    CMD_TOTHEMOON_END = 6200
    CMD_CUSTOM_DUNGEON_BEGIN = 6201
    CMD_CUSTOM_DUNGEON_END = 6250
    CMD_REGIONAL_PLAY_BEGIN = 6251
    CMD_REGIONAL_PLAY_END = 6300
    CMD_UGC_BEGIN = 6301
    CMD_UGC_END = 6350
    CMD_ARANARA_COLLECTION_BEGIN = 6351
    CMD_ARANARA_COLLECTION_END = 6400
    CMD_GCG_BEGIN = 7001
    CMD_GCG_END = 8000
    CMD_SHARE_CD_BEGIN = 9001
    CMD_SHARE_CD_END = 9100
    CMD_MISC_SERVER_BEGIN = 10001
    CMD_MISC_SERVER_END = 10100
    CMD_PLAYER_SERVER_BEGIN = 10101
    CMD_PLAYER_SERVER_END = 10200
    CMD_MUIP_SERVER_BEGIN = 10201
    CMD_MUIP_SERVER_END = 10300
    CMD_MAIL_SERVER_BEGIN = 10301
    CMD_MAIL_SERVER_END = 10400
    CMD_MP_SERVER_BEGIN = 10401
    CMD_MP_SERVER_END = 10500
    CMD_ACTIVITY_SERVER_BEGIN = 10601
    CMD_ACTIVITY_SERVER_END = 10700
    CMD_RECHARGE_SERVER_BEGIN = 10701
    CMD_RECHARGE_SERVER_END = 10750
    CMD_SOCIAL_SERVER_BEGIN_1 = 10801
    CMD_SOCIAL_SERVER_END_1 = 10900
    CMD_SOCIAL_SERVER_BEGIN_2 = 10951
    CMD_SOCIAL_SERVER_END_2 = 11000
    CMD_MATCH_SERVER_BEGIN = 10901
    CMD_MATCH_SERVER_END = 10950
    CMD_HOME_SERVER_BEGIN = 12001
    CMD_HOME_SERVER_END = 12100
    CMD_OFFLINE_OP_SERVER_BEGIN = 12201
    CMD_OFFLINE_OP_SERVER_END = 12250
    CMD_SECURITY_SERVER_BEGIN = 12251
    CMD_SECURITY_SERVER_END = 12300
    CMD_GCG_SERVER_BEGIN = 12301
    CMD_GCG_SERVER_END = 12500
    CMD_REDIS_OP_BEGIN = 11001
    CMD_REDIS_OP_END = 12000


class MysqlIndex(betterproto.Enum):
    MYSQL_INDEX_NONE = 0
    MYSQL_INDEX_PLAYER_UID = 1
    MYSQL_INDEX_PLAYER_ONLINE_ID_DATA = 2
    MYSQL_INDEX_PLAYER_PSN_ONLINE_ID_DATA = 3
    MYSQL_INDEX_PLAYER_DATA_0 = 101
    MYSQL_INDEX_PLAYER_DATA_1 = 102
    MYSQL_INDEX_PLAYER_DATA_2 = 103
    MYSQL_INDEX_PLAYER_DATA_3 = 104
    MYSQL_INDEX_PLAYER_DATA_4 = 105
    MYSQL_INDEX_PLAYER_DATA_5 = 106
    MYSQL_INDEX_PLAYER_DATA_6 = 107
    MYSQL_INDEX_PLAYER_DATA_7 = 108
    MYSQL_INDEX_PLAYER_DATA_8 = 109
    MYSQL_INDEX_PLAYER_DATA_9 = 110
    MYSQL_INDEX_PLAYER_DATA_10 = 111
    MYSQL_INDEX_PLAYER_DATA_11 = 112
    MYSQL_INDEX_PLAYER_DATA_12 = 113
    MYSQL_INDEX_PLAYER_DATA_13 = 114
    MYSQL_INDEX_PLAYER_DATA_14 = 115
    MYSQL_INDEX_PLAYER_DATA_15 = 116
    MYSQL_INDEX_PLAYER_DATA_16 = 117
    MYSQL_INDEX_PLAYER_DATA_17 = 118
    MYSQL_INDEX_PLAYER_DATA_18 = 119
    MYSQL_INDEX_PLAYER_DATA_19 = 120
    MYSQL_INDEX_PLAYER_DATA_20 = 121
    MYSQL_INDEX_PLAYER_DATA_21 = 122
    MYSQL_INDEX_PLAYER_DATA_22 = 123
    MYSQL_INDEX_PLAYER_DATA_23 = 124
    MYSQL_INDEX_PLAYER_DATA_24 = 125
    MYSQL_INDEX_PLAYER_DATA_25 = 126
    MYSQL_INDEX_PLAYER_DATA_26 = 127
    MYSQL_INDEX_PLAYER_DATA_27 = 128
    MYSQL_INDEX_PLAYER_DATA_28 = 129
    MYSQL_INDEX_PLAYER_DATA_29 = 130
    MYSQL_INDEX_PLAYER_DATA_30 = 131
    MYSQL_INDEX_PLAYER_DATA_31 = 132
    MYSQL_INDEX_PLAYER_DATA_32 = 133
    MYSQL_INDEX_PLAYER_DATA_33 = 134
    MYSQL_INDEX_PLAYER_DATA_34 = 135
    MYSQL_INDEX_PLAYER_DATA_35 = 136
    MYSQL_INDEX_PLAYER_DATA_36 = 137
    MYSQL_INDEX_PLAYER_DATA_37 = 138
    MYSQL_INDEX_PLAYER_DATA_38 = 139
    MYSQL_INDEX_PLAYER_DATA_39 = 140
    MYSQL_INDEX_PLAYER_DATA_40 = 141
    MYSQL_INDEX_PLAYER_DATA_41 = 142
    MYSQL_INDEX_PLAYER_DATA_42 = 143
    MYSQL_INDEX_PLAYER_DATA_43 = 144
    MYSQL_INDEX_PLAYER_DATA_44 = 145
    MYSQL_INDEX_PLAYER_DATA_45 = 146
    MYSQL_INDEX_PLAYER_DATA_46 = 147
    MYSQL_INDEX_PLAYER_DATA_47 = 148
    MYSQL_INDEX_PLAYER_DATA_48 = 149
    MYSQL_INDEX_PLAYER_DATA_49 = 150
    MYSQL_INDEX_PLAYER_DATA_50 = 151
    MYSQL_INDEX_PLAYER_DATA_51 = 152
    MYSQL_INDEX_PLAYER_DATA_52 = 153
    MYSQL_INDEX_PLAYER_DATA_53 = 154
    MYSQL_INDEX_PLAYER_DATA_54 = 155
    MYSQL_INDEX_PLAYER_DATA_55 = 156
    MYSQL_INDEX_PLAYER_DATA_56 = 157
    MYSQL_INDEX_PLAYER_DATA_57 = 158
    MYSQL_INDEX_PLAYER_DATA_58 = 159
    MYSQL_INDEX_PLAYER_DATA_59 = 160
    MYSQL_INDEX_PLAYER_DATA_60 = 161
    MYSQL_INDEX_PLAYER_DATA_61 = 162
    MYSQL_INDEX_PLAYER_DATA_62 = 163
    MYSQL_INDEX_PLAYER_DATA_63 = 164
    MYSQL_INDEX_PLAYER_DATA_64 = 165
    MYSQL_INDEX_PLAYER_DATA_65 = 166
    MYSQL_INDEX_PLAYER_DATA_66 = 167
    MYSQL_INDEX_PLAYER_DATA_67 = 168
    MYSQL_INDEX_PLAYER_DATA_68 = 169
    MYSQL_INDEX_PLAYER_DATA_69 = 170
    MYSQL_INDEX_PLAYER_DATA_70 = 171
    MYSQL_INDEX_PLAYER_DATA_71 = 172
    MYSQL_INDEX_PLAYER_DATA_72 = 173
    MYSQL_INDEX_PLAYER_DATA_73 = 174
    MYSQL_INDEX_PLAYER_DATA_74 = 175
    MYSQL_INDEX_PLAYER_DATA_75 = 176
    MYSQL_INDEX_PLAYER_DATA_76 = 177
    MYSQL_INDEX_PLAYER_DATA_77 = 178
    MYSQL_INDEX_PLAYER_DATA_78 = 179
    MYSQL_INDEX_PLAYER_DATA_79 = 180
    MYSQL_INDEX_ORDER_DATA = 2001
    MYSQL_INDEX_CONFIG_LOCAL = 1001
    MYSQL_INDEX_CONFIG_GLOBAL = 1002
    MYSQL_INDEX_BLOCK_DATA_0 = 3001
    MYSQL_INDEX_BLOCK_DATA_1 = 3002
    MYSQL_INDEX_BLOCK_DATA_2 = 3003
    MYSQL_INDEX_BLOCK_DATA_3 = 3004
    MYSQL_INDEX_BLOCK_DATA_4 = 3005
    MYSQL_INDEX_BLOCK_DATA_5 = 3006
    MYSQL_INDEX_BLOCK_DATA_6 = 3007
    MYSQL_INDEX_BLOCK_DATA_7 = 3008
    MYSQL_INDEX_BLOCK_DATA_8 = 3009
    MYSQL_INDEX_BLOCK_DATA_9 = 3010
    MYSQL_INDEX_BLOCK_DATA_10 = 3011
    MYSQL_INDEX_BLOCK_DATA_11 = 3012
    MYSQL_INDEX_BLOCK_DATA_12 = 3013
    MYSQL_INDEX_BLOCK_DATA_13 = 3014
    MYSQL_INDEX_BLOCK_DATA_14 = 3015
    MYSQL_INDEX_BLOCK_DATA_15 = 3016
    MYSQL_INDEX_BLOCK_DATA_16 = 3017
    MYSQL_INDEX_BLOCK_DATA_17 = 3018
    MYSQL_INDEX_BLOCK_DATA_18 = 3019
    MYSQL_INDEX_BLOCK_DATA_19 = 3020
    MYSQL_INDEX_BLOCK_DATA_20 = 3021
    MYSQL_INDEX_BLOCK_DATA_21 = 3022
    MYSQL_INDEX_BLOCK_DATA_22 = 3023
    MYSQL_INDEX_BLOCK_DATA_23 = 3024
    MYSQL_INDEX_BLOCK_DATA_24 = 3025
    MYSQL_INDEX_BLOCK_DATA_25 = 3026
    MYSQL_INDEX_BLOCK_DATA_26 = 3027
    MYSQL_INDEX_BLOCK_DATA_27 = 3028
    MYSQL_INDEX_BLOCK_DATA_28 = 3029
    MYSQL_INDEX_BLOCK_DATA_29 = 3030
    MYSQL_INDEX_BLOCK_DATA_30 = 3031
    MYSQL_INDEX_BLOCK_DATA_31 = 3032
    MYSQL_INDEX_BLOCK_DATA_32 = 3033
    MYSQL_INDEX_BLOCK_DATA_33 = 3034
    MYSQL_INDEX_BLOCK_DATA_34 = 3035
    MYSQL_INDEX_BLOCK_DATA_35 = 3036
    MYSQL_INDEX_BLOCK_DATA_36 = 3037
    MYSQL_INDEX_BLOCK_DATA_37 = 3038
    MYSQL_INDEX_BLOCK_DATA_38 = 3039
    MYSQL_INDEX_BLOCK_DATA_39 = 3040
    MYSQL_INDEX_HOME_DATA_0 = 4001
    MYSQL_INDEX_HOME_DATA_1 = 4002
    MYSQL_INDEX_HOME_DATA_2 = 4003
    MYSQL_INDEX_HOME_DATA_3 = 4004
    MYSQL_INDEX_HOME_DATA_4 = 4005
    MYSQL_INDEX_HOME_DATA_5 = 4006
    MYSQL_INDEX_HOME_DATA_6 = 4007
    MYSQL_INDEX_HOME_DATA_7 = 4008
    MYSQL_INDEX_HOME_DATA_8 = 4009
    MYSQL_INDEX_HOME_DATA_9 = 4010
    MYSQL_INDEX_HOME_DATA_10 = 4011
    MYSQL_INDEX_HOME_DATA_11 = 4012
    MYSQL_INDEX_HOME_DATA_12 = 4013
    MYSQL_INDEX_HOME_DATA_13 = 4014
    MYSQL_INDEX_HOME_DATA_14 = 4015
    MYSQL_INDEX_HOME_DATA_15 = 4016
    MYSQL_INDEX_HOME_DATA_16 = 4017
    MYSQL_INDEX_HOME_DATA_17 = 4018
    MYSQL_INDEX_HOME_DATA_18 = 4019
    MYSQL_INDEX_HOME_DATA_19 = 4020
    MYSQL_INDEX_HOME_DATA_20 = 4021
    MYSQL_INDEX_HOME_DATA_21 = 4022
    MYSQL_INDEX_HOME_DATA_22 = 4023
    MYSQL_INDEX_HOME_DATA_23 = 4024
    MYSQL_INDEX_HOME_DATA_24 = 4025
    MYSQL_INDEX_HOME_DATA_25 = 4026
    MYSQL_INDEX_HOME_DATA_26 = 4027
    MYSQL_INDEX_HOME_DATA_27 = 4028
    MYSQL_INDEX_HOME_DATA_28 = 4029
    MYSQL_INDEX_HOME_DATA_29 = 4030
    MYSQL_INDEX_HOME_DATA_30 = 4031
    MYSQL_INDEX_HOME_DATA_31 = 4032
    MYSQL_INDEX_HOME_DATA_32 = 4033
    MYSQL_INDEX_HOME_DATA_33 = 4034
    MYSQL_INDEX_HOME_DATA_34 = 4035
    MYSQL_INDEX_HOME_DATA_35 = 4036
    MYSQL_INDEX_HOME_DATA_36 = 4037
    MYSQL_INDEX_HOME_DATA_37 = 4038
    MYSQL_INDEX_HOME_DATA_38 = 4039
    MYSQL_INDEX_HOME_DATA_39 = 4040
    MYSQL_INDEX_HOME_DATA_40 = 4041
    MYSQL_INDEX_HOME_DATA_41 = 4042
    MYSQL_INDEX_HOME_DATA_42 = 4043
    MYSQL_INDEX_HOME_DATA_43 = 4044
    MYSQL_INDEX_HOME_DATA_44 = 4045
    MYSQL_INDEX_HOME_DATA_45 = 4046
    MYSQL_INDEX_HOME_DATA_46 = 4047
    MYSQL_INDEX_HOME_DATA_47 = 4048
    MYSQL_INDEX_HOME_DATA_48 = 4049
    MYSQL_INDEX_HOME_DATA_49 = 4050
    MYSQL_INDEX_HOME_DATA_50 = 4051
    MYSQL_INDEX_HOME_DATA_51 = 4052
    MYSQL_INDEX_HOME_DATA_52 = 4053
    MYSQL_INDEX_HOME_DATA_53 = 4054
    MYSQL_INDEX_HOME_DATA_54 = 4055
    MYSQL_INDEX_HOME_DATA_55 = 4056
    MYSQL_INDEX_HOME_DATA_56 = 4057
    MYSQL_INDEX_HOME_DATA_57 = 4058
    MYSQL_INDEX_HOME_DATA_58 = 4059
    MYSQL_INDEX_HOME_DATA_59 = 4060
    MYSQL_INDEX_HOME_DATA_60 = 4061
    MYSQL_INDEX_HOME_DATA_61 = 4062
    MYSQL_INDEX_HOME_DATA_62 = 4063
    MYSQL_INDEX_HOME_DATA_63 = 4064
    MYSQL_INDEX_HOME_DATA_64 = 4065
    MYSQL_INDEX_HOME_DATA_65 = 4066
    MYSQL_INDEX_HOME_DATA_66 = 4067
    MYSQL_INDEX_HOME_DATA_67 = 4068
    MYSQL_INDEX_HOME_DATA_68 = 4069
    MYSQL_INDEX_HOME_DATA_69 = 4070
    MYSQL_INDEX_HOME_DATA_70 = 4071
    MYSQL_INDEX_HOME_DATA_71 = 4072
    MYSQL_INDEX_HOME_DATA_72 = 4073
    MYSQL_INDEX_HOME_DATA_73 = 4074
    MYSQL_INDEX_HOME_DATA_74 = 4075
    MYSQL_INDEX_HOME_DATA_75 = 4076
    MYSQL_INDEX_HOME_DATA_76 = 4077
    MYSQL_INDEX_HOME_DATA_77 = 4078
    MYSQL_INDEX_HOME_DATA_78 = 4079
    MYSQL_INDEX_HOME_DATA_79 = 4080


class RedisIndex(betterproto.Enum):
    REDIS_INDEX_NONE = 0
    REDIS_INDEX_PLAYER_STATUS = 1
    REDIS_INDEX_MAIL = 2
    REDIS_INDEX_OFFLINE_MSG = 3
    REDIS_INDEX_PLAYER_FRIEND_SET = 4
    REDIS_INDEX_PLAYER_ASK_FRIEND_SET = 5
    REDIS_INDEX_PLAYER_BRIEF_DATA = 6
    REDIS_INDEX_PLAYER_BLACKLIST = 7
    REDIS_INDEX_PLAYER_PRIVATE_CHAT = 8
    REDIS_INDEX_PLAYER_RECENT_CHAT = 9
    REDIS_INDEX_PLAYER_PRIVATE_CHAT_UNREAD = 10
    REDIS_INDEX_PLAYER_ACTIVITY_SOCIAL = 11
    REDIS_INDEX_HOME_STATUS = 12
    REDIS_INDEX_HOME_BRIEF_DATA = 13
    REDIS_INDEX_HOME_OFFLINE_MSG = 14
    REDIS_INDEX_OFFLINE_OP = 15
    REDIS_INDEX_CUSTOM_DUNGEON = 16
    REDIS_INDEX_PLAYER_PSN_FRIEND_SET = 17
    REDIS_INDEX_PLAYER_PSN_BLACKLIST = 18
    REDIS_INDEX_HOME_BLUEPRINT = 19


class EntityCompType(betterproto.Enum):
    ENTITY_COMP_NONE = 0
    ENTITY_COMP_ENV_ANIMAL = 1
    ENTITY_COMP_ANIMATOR = 2


class GadgetCompType(betterproto.Enum):
    GADGET_COMP_NONE = 0
    GADGET_COMP_INTERACT = 4
    GADGET_COMP_GEAR = 5
    GADGET_COMP_CRYSTAL = 6
    GADGET_COMP_PLATFORM = 7
    GADGET_COMP_WEAPON = 8
    GADGET_COMP_WORKTOP = 10
    GADGET_COMP_SEAL = 11
    GADGET_COMP_CLIENT = 12
    GADGET_COMP_ABILITY = 13
    GADGET_COMP_PLAY = 16
    GADGET_COMP_OFFERING = 17
    GADGET_COMP_MIRACLE_RING = 18
    GADGET_COMP_FOUNDATION = 19
    GADGET_COMP_VEHICLE = 20
    GADGET_COMP_SCREEN = 21
    GADGET_COMP_FISH_POOL = 22
    GADGET_COMP_CUSTOM_GADGET = 23
    GADGET_COMP_ROGUELIKE_OPERATOR_GADGET = 24
    GADGET_COMP_WIDGET_GADGET = 25
    GADGET_COMP_NIGHT_CROW = 26


class MonsterCompType(betterproto.Enum):
    MONSTER_COMP_NONE = 0
    MONSTER_COMP_ENV_ANIMAL = 1
    MONSTER_COMP_FISH = 2
    MONSTER_COMP_FISHTANK = 3


class SceneCompType(betterproto.Enum):
    SCENE_COMP_NONE = 0
    SCENE_COMP_ENV_ANIMAL = 1
    SCENE_COMP_GRID = 2
    SCENE_COMP_AREA = 3
    SCENE_COMP_BLOCK_GROUP = 4
    SCENE_COMP_MISC = 5
    SCENE_COMP_TEAM = 6
    SCENE_COMP_ENCOUNTER = 7
    SCENE_COMP_MULTISTAGE_PLAY = 8
    SCENE_COMP_GALLERY = 9
    SCENE_COMP_HOME = 10


class PlayerCompType(betterproto.Enum):
    PLAYER_COMP_NONE = 0
    PLAYER_COMP_BASIC = 1
    PLAYER_COMP_AVATAR = 2
    PLAYER_COMP_GM = 3
    PLAYER_COMP_QUEST = 4
    PLAYER_COMP_TALK = 5
    PLAYER_COMP_SHOP = 6
    PLAYER_COMP_ITEM = 7
    PLAYER_COMP_DUNGEON = 8
    PLAYER_COMP_SCENE = 9
    PLAYER_COMP_EVENT = 10
    PLAYER_COMP_BORED = 11
    PLAYER_COMP_MP = 12
    PLAYER_COMP_COOK = 13
    PLAYER_COMP_COMPOUND = 14
    PLAYER_COMP_MAIL = 15
    PLAYER_COMP_LOGIN = 16
    PLAYER_COMP_OFFLINE_MSG = 17
    PLAYER_COMP_DAILY_TASK = 18
    PLAYER_COMP_RAND_TASK = 19
    PLAYER_COMP_GACHA = 20
    PLAYER_COMP_GIVING = 21
    PLAYER_COMP_FORGE = 22
    PLAYER_COMP_INVESTIGATION = 23
    PLAYER_COMP_ACTIVITY = 24
    PLAYER_COMP_WATCHER = 25
    PLAYER_COMP_SOCIAL = 26
    PLAYER_COMP_TOWER = 27
    PLAYER_COMP_SIGN_IN = 28
    PLAYER_COMP_BATTLE_PASS = 29
    PLAYER_COMP_BLOSSOM = 30
    PLAYER_COMP_RECHARGE = 31
    PLAYER_COMP_MATCH = 32
    PLAYER_COMP_MP_PLAY = 33
    PLAYER_COMP_tRIAL_AVATAR = 34
    PLAYER_COMP_CODEX = 35
    PLAYER_COMP_ACHIEVEMENT = 36
    PLAYER_COMP_PERSONAL_LINE = 37
    PLAYER_COMP_ABILITY_GROUP = 38
    PLAYER_COMP_REPUTATION = 39
    PLAYER_COMP_WIDGET = 40
    PLAYER_COMP_HUNTING = 41
    PLAYER_COMP_COOP = 42
    PLAYER_COMP_SCENE_PLAY = 43
    PLAYER_COMP_COMBINE = 44
    PLAYER_COMP_OFFERING = 45
    PLAYER_COMP_ROUTINE = 46
    PLAYER_COMP_REUNION = 47
    PLAYER_COMP_MIRACLE_RING = 48
    PLAYER_COMP_MECHANICUS = 49
    PLAYER_COMP_OP_ACTIVITY = 50
    PLAYER_COMP_DRAFT = 51
    PLAYER_COMP_GALLERY = 52
    PLAYER_COMP_REGION_SEARCH = 53
    PLAYER_COMP_HOME = 54
    PLAYER_COMP_OFFLINE_OP = 55
    PLAYER_COMP_H5_ACTIVITY = 56
    PLAYER_COMP_EXHIBITION = 57
    PLAYER_COMP_VEHICLE = 58
    PLAYER_COMP_LIVE = 59
    PLAYER_COMP_GROUP_LINK = 60
    PLAYER_COMP_FISHING = 61
    PLAYER_COMP_FIREWORKS = 62
    PLAYER_COMP_CITY = 63
    PLAYER_COMP_CUSTOM_DUNGEON = 64
    PLAYER_COMP_REGIONAL_PLAY = 65
    PLAYER_COMP_SHARE_CD = 66
    PLAYER_COMP_UGC = 67
    PLAYER_COMP_POLYGON = 68
    PLAYER_COMP_ARANARA_COLLECTION = 69
    PLAYER_COMP_GCG = 70


class AvatarCompType(betterproto.Enum):
    AVATAR_COMP_NONE = 0
    AVATAR_COMP_EQUIP = 1
    AVATAR_COMP_SKILL = 2
    AVATAR_COMP_BUFF = 3
    AVATAR_COMP_TALENT = 4
    AVATAR_COMP_FASHION = 5
    AVATAR_COMP_EXTRA_PROP = 6


class AvatarSnapshotType(betterproto.Enum):
    AVATAR_SNAPSHOT_TYPE_NONE = 0
    AVATAR_SNAPSHOT_TYPE_ROGUE_ACTIVITY = 1


class FormalAvatarCompType(betterproto.Enum):
    FORMAL_AVATAR_COMP_NONE = 0
    FORMAL_AVATAR_COMP_FETTER = 1
    FORMAL_AVATAR_COMP_EXPEDITION = 2


class PacketHeadExtKeyType(betterproto.Enum):
    PACKET_HEAD_EXT_KEY_HTTP_SESSION_ID = 0
    PACKET_HEAD_EXT_KEY_PLAYER_RTT = 1
    PACKET_HEAD_EXT_KEY_IS_CALLBACK = 2
    PACKET_HEAD_EXT_KEY_WORD_FILTER_ACTION_TYPE = 3
    PACKET_HEAD_EXT_KEY_GATE_RECV_MS_TIMESTAMP = 10001
    PACKET_HEAD_EXT_KEY_GAME_RECV_MS_TIMESTAMP = 10002
    PACKET_HEAD_EXT_KEY_GAME_SEND_MS_TIMESTAMP = 10003


class MailAddOpType(betterproto.Enum):
    MAIL_ADD_OP_NONE = 0
    MAIL_ADD_OP_GAME = 1
    MAIL_ADD_OP_MUIP = 2


class MailDelOpType(betterproto.Enum):
    MAIL_DEL_OP_NONE = 0
    MAIL_DEL_OP_CLIENT = 1
    MAIL_DEL_OP_GAME = 2
    MAIL_DEL_OP_MUIP = 3
    MAIL_DEL_OP_MUIP_BY_TICKET = 4


class MailGetOpType(betterproto.Enum):
    MAIL_GET_OP_NONE = 0
    MAIL_GET_OP_CLIENT = 1
    MAIL_GET_OP_TAKE_ATTACHMENT = 2
    MAIL_GET_OP_MUIP = 3
    MAIL_GET_OP_UNTREATED = 4
    MAIL_GET_OP_CLIENT_MULTI_BATCH = 5


class MailGetType(betterproto.Enum):
    MAIL_GET_NONE = 0
    MAIL_GET_BY_ID = 1
    MAIL_GET_ALL = 2
    MAIL_GET_ALL_COLLECTED = 3


class MailUpdateOpType(betterproto.Enum):
    MAIL_UPDATE_OP_NONE = 0
    MAIL_UPDATE_OP_MARK_READ = 1
    MAIL_UPDATE_OP_TAKE_ATTACHMENT = 2
    MAIL_UPDATE_OP_STAR_MAIL = 3
    MAIL_UPDATE_OP_UNSTAR_MAIL = 4


class MatchUnitRemoveOpType(betterproto.Enum):
    MATCH_UNIT_REMOVE_OP_NONE = 0
    MATCH_UNIT_REMOVE_OP_PLAYER_CANCEL = 1
    MATCH_UNIT_REMOVE_OP_PLAYER_LOGOUT = 2
    MATCH_UNIT_REMOVE_OP_INTERRUPTED = 3
    MATCH_UNIT_REMOVE_OP_MP_UNAVAILABLE = 4


class MatchIdentity(betterproto.Enum):
    MATCH_IDENTITY_NONE = 0
    MATCH_IDENTITY_HOST = 1
    MATCH_IDENTITY_GUEST = 2


class ServiceMaxLoad(betterproto.Enum):
    SERVICE_MAX_LOAD_NONE = 0
    SERVICE_MAX_LOAD_GAME = 10000
    SERVICE_MAX_LOAD_GATE = 10000


class AsyncHttpType(betterproto.Enum):
    ASYNC_HTTP_DEFAULT = 0
    ASYNC_HTTP_FIRST_LOGIN_NICKNAME = 1
    ASYNC_HTTP_SAFE_SERVER = 2
    ASYNC_HTTP_HOME_VERIFY = 3
    ASYNC_HTTP_OUTPUT_CONTROL_MONITOR = 4
    ASYNC_HTTP_NICKNAME_SIGNATURE_AUDIT = 5


class HomeCompType(betterproto.Enum):
    HOME_COMP_NONE = 0
    HOME_COMP_BASIC = 1
    HOME_COMP_SCENE = 2
    HOME_COMP_OFFLINE_MSG = 3
    HOME_COMP_FURNITURE_MAKE = 4
    HOME_COMP_LIMITED_SHOP = 5
    HOME_COMP_PLANT = 6
    HOME_COMP_FISH_FARMING = 7
    HOME_COMP_CUSTOM_FURNITURE = 8
    HOME_PICTURE_FRAME = 9
    HOME_COMP_GROUP_RECORD = 10
    HOME_COMP_BLUEPRINT = 11


class SceneMultistagePlayCompType(betterproto.Enum):
    SCENE_MULTISTAGE_PLAY_COMP_NONE = 0
    SCENE_MULTISTAGE_PLAY_COMP_TOWER_DEFENSE = 1


class FeatureSwitchType(betterproto.Enum):
    FEATURE_SWITCH_NONE = 0
    FEATURE_SWITCH_FRIEND = 1
    FEATURE_SWITCH_ASKFRINED = 2
    FEATURE_SWITCH_TOWER_FLOOR = 3
    FEATURE_SWITCH_MP = 4
    FEATURE_SWITCH_BLOSSOM = 5
    FEATURE_SWITCH_BATTLE_PASS = 6
    FEATURE_SWITCH_DUNGEON = 7
    FEATURE_SWITCH_PUSH_PLATFORM = 8
    FEATURE_SWITCH_RECHARGE = 9
    FEATURE_SWITCH_SHOP = 10
    FEATURE_SWITCH_DAILY_TASK = 11
    FEATURE_SWITCH_RAND_TASK = 12
    FEATURE_SWITCH_REWARD_ID = 13
    FEATURE_SWITCH_DROP_ID = 14
    FEATURE_SWITCH_GATHER = 15
    FEATURE_SWITCH_GAME_TIME = 16
    FEATURE_SWITCH_FORGE = 17
    FEATURE_SWITCH_COOK = 18
    FEATURE_SWITCH_COMBINE = 19
    FEATURE_SWITCH_WEAPON = 20
    FEATURE_SWITCH_RELIQUARY = 21
    FEATURE_SWITCH_ITEM = 22
    FEATURE_SWITCH_AVATAR = 23
    FEATURE_SWITCH_CITY_REPUTATION = 24
    FEATURE_SWITCH_MP_PLAY = 25
    FEATURE_SWITCH_SIGHT_GROUP = 26
    FEATURE_SWITCH_NOTIFY_EYE_POINT = 27
    FEATURE_SWITCH_EYE_POINT_AS_EYE = 28
    FEATURE_SWITCH_GROUP_VISION_TYPE = 29
    FEATURE_SWITCH_OFFERING = 30
    FEATURE_SWITCH_ROUTINE = 31
    FEATURE_SWITCH_ANCHOR_POINT = 32
    FEATURE_SWITCH_ACTIVITY_SALE = 33
    FEATURE_SWITCH_MECHANICUS = 34
    FEATURE_SWITCH_MECHANICUS_PUNISH = 35
    FEATURE_SWITCH_WORLD_LEVEL_ADJUST = 36
    FEATURE_SWITCH_ENTER_HOME_WORLD = 37
    FEATURE_SWITCH_HOME_MP = 38
    FEATURE_SWITCH_HOME_EDIT_MODE = 40
    FEATURE_SWITCH_HOME_MODULE = 41
    FEATURE_SWITCH_HOME_FURNITURE_MAKE = 42
    FEATURE_SWITCH_HOME_LIMITED_SHOP = 43
    FEATURE_SWITCH_GADGET_INTERACT = 44
    FEATURE_SWITCH_REUNION_CLOSE_WITH_MARK = 45
    FEATURE_SWITCH_RANDOM_QUEST_TEMPLATE = 46
    FEATURE_SWITCH_MINORS_RECHARGE_HINT = 47
    FEATURE_SWITCH_MINORS_GACHA_RESTRICT = 48
    FEATURE_SWITCH_CUSTOM_DUNGEON = 49
    FEATURE_SWITCH_MINORS_REGISTER = 50
    FEATURE_SWITCH_MATCH_LIMIT = 51
    FEATURE_SWITCH_CUSTOM_DUNGEON_ID = 52
    FEATURE_SWITCH_NICKNAME_AUDIT = 53
    FEATURE_SWITCH_SIGNATURE_AUDIT = 54
    FEATURE_SWITCH_MATCH_RULE_OPTIMIZE = 55
    FEATURE_SWITCH_RELIQUARY_GUARANTEE = 56
    FEATURE_SWITCH_SECURITY_LIBRARY_MD5_CHECK = 57
    FEATURE_SWITCH_UGC = 58
    FEATURE_SWITCH_UGC_PUBLISH = 59
    FEATURE_SWITCH_HOME_AUDIT_BEFORE_RELEASE = 60
    FEATURE_SWITCH_SAFE_SERVER_NOTIFY = 2801
    FEATURE_SWITCH_GENERAL_GACHA_RESTRICT = 3101
    FEATURE_SWITCH_HOME_BLUEPRINT = 3201
    FEATURE_SWITCH_ANTI_OFFLINE_KICK = 3202
    FEATURE_SWITCH_ENVIRONMENT_ERROR_KICK = 3203


class AddRedisMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10372


class AddRedisMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10398


class DelRedisMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10312


class DelRedisMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10335


class GetRedisMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10307


class GetRedisMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10321


class RedisMailChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10303


class SendOfflineMsgReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10390


class SendOfflineMsgRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10373


class NewOfflineMsgNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10399


class GetOfflineMsgReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10331


class GetOfflineMsgRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10375


class RemoveOfflineMsgNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10348


class ClearOfflineMsgNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10397


class UpdateRedisMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10381


class UpdateRedisMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10305


class GetRedisMailTransactionStatusReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10382


class GetRedisMailTransactionStatusRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10347


class ClearUpRedisMailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10339


class CleanRedisMailNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10353


class ResendRedisMailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10322


class ResendRedisMailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10365


class AddMatchUnitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10926


class AddMatchUnitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10918


class MatchStartNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10925


class RemoveMatchUnitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10907


class RemoveMatchUnitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10902


class MatchUnitRemovedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10931


class GuestUnitMatchSuccNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10929


class ConfirmGuestUnitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10922


class ConfirmGuestUnitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10944


class MatchPlayerJoinNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10949


class MatchPlayerQuitNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10920


class GuestUnitAgreedResultNotifyReason(betterproto.Enum):
    SUCC = 0
    HOST_UNIT_QUIT = 1


class GuestUnitAgreedResultNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10945


class HostUnitMatchSuccNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10941


class SyncMatchUnitReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10942


class SyncMatchUnitRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10914


class MatchserverWorkloadInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10947


class MatchPlayerUpdateNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10937


class MatchIdentityNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10923


class GeneralMatchFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10935


class GcgMatchFinishNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10948


class DataVersionConfigDataVersionType(betterproto.Enum):
    SERVER = 0
    CLIENT = 1
    CLIENT_SILENCE = 2


class StopServerConfigNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10072


class NodeserverConnectedAndRegisteredNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10098


class MultiPlayerMsgCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10012


class AddGateserverNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10035


class RegisterServiceNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10007


class PlayerTransferNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10021


class PacketFreqencyExceedNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10003


class SceneAsyncLoadGroupBatchNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10090


class ClientVersionSyncNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10073


class RegisterServiceSuccessNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10099


class ReloadConfigNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10031


class MultiserverServiceTypeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10075


class MatchServiceStopNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10048


class MatchServiceStopImplementNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10097


class ServerBlockPlayerMpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10081


class ServerBlockPlayerChatNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10005


class ServerCheckSegmentCrcNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10082


class UpdateMpStatusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10472


class DelMpStatusNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10498


class GetPlayerMpStatusListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10412


class GetPlayerMpStatusListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10435


class GetPlayerMpStatusInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10407


class GetPlayerMpStatusInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10421


class PlayerMemDataType(betterproto.Enum):
    MEM_DATA_BASIC = 0
    MEM_DATA_H5_ACTIVITY = 1


class OnlinePlayerNumReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10272


class OnlinePlayerNumRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10298


class KickoutPlayerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10212


class CheckOnlinePlayerReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10235


class CheckOnlinePlayerRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10207


class PlayerCombatForceReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10221


class PlayerCombatForceRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10203


class CheckGameVersionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10290


class CheckGameVersionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10273


class PlatformPlayerNumReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10299


class PlatformPlayerNumRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10231


class QueryPlayerMemDataByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10275


class QueryPlayerMemDataByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10248


class BindGmUidNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10297


class UnbindGmUidNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10281


class GetBindGmUidReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10205


class GetBindGmUidRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10282


class PlatformAntiAddictNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10247


class PlayerLoginPerSecondReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10239


class PlayerLoginPerSecondRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10253


class FineGrainedPlayerNumReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10222


class FineGrainedPlayerNumRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10265


class CheckGameCrcVersionReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10204


class CheckGameCrcVersionRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10293


class UpdateRedPointByMuipNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10227


class SendConcertProductReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10294


class SendConcertProductRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10288


class QueryConcertProductInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10226


class QueryConcertProductInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10263


class SendOfflineOpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12226


class SendOfflineOpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12218


class GetOfflineOpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12225


class GetOfflineOpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12207


class NewOfflineOpNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12202


class RemoveOfflineOpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12231


class RemoveOfflineOpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12229


class SendGcgOfflineOpReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12222


class SendGcgOfflineOpRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 12244


class SavePlayerDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10198
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SavePlayerDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10112
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class PlayerOnlineStatusInfoStatusType(betterproto.Enum):
    ONLINE = 0
    OFFLINE = 1


class PlayerOnlineStatusNotifyEnum(betterproto.Enum):
    NONE = 0
    CMD_ID = 10135


class ServiceDisconnectNotifyEnum(betterproto.Enum):
    NONE = 0
    CMD_ID = 10103


class PlayerDisconnectNotifyEnum(betterproto.Enum):
    NONE = 0
    CMD_ID = 10190


class DisconnectClientNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10173


class SysCreateGroupReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10199


class SaveBlockDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10131
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SaveBlockDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10175
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SavePlayerExtraBinDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10148


class SysSavePlayerNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10197


class PlayerLoginBlockInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10181


class RechargeOrderNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10726


class MarkOrderFinishedReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10718


class MarkOrderFinishedRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10725


class GetUnfinishedOrderReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10707


class GetUnfinishedOrderRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10702


class GetSpecificUnfinishedReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10731


class GetSpecificUnfinishedRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10729


class PsRequstReason(betterproto.Enum):
    PS_REASON_NONE = 0
    PS_REASON_FRIEND_LIST = 1
    PS_REASON_APPLY_ENTER_MP = 2
    PS_REASON_BLACK_LIST = 3


class FriendBriefRequestReason(betterproto.Enum):
    FRIEND_BRIEF_REASON_NONE = 0
    FRIEND_BRIEF_REASON_BLESSING_ACTIVITY = 1
    FRIEND_BRIEF_REASON_PLANT_FLOWER_ACTIVITY = 2
    FRIEND_BRIEF_REASON_WINTER_CAMP_ACTIVITY = 3
    FRIEND_BRIEF_REASON_GACHA_ACTIVITY = 4
    FRIEND_BRIEF_REASON_VINTAGE_ACTIVITY = 5


class SaveCustomDungeonType(betterproto.Enum):
    SAVE_CUSTOM_DUNGEON_NONE = 0
    SAVE_CUSTOM_DUNGEON_ROOM = 1
    SAVE_CUSTOM_DUNGEON_SETTING = 2


class CustomDungeonSocialUpdateType(betterproto.Enum):
    CUSTOM_DUNGEON_SOCIAL_UPDATE_NONE = 0
    CUSTOM_DUNGEON_SOCIAL_UPDATE_STORE = 1
    CUSTOM_DUNGEON_SOCIAL_UPDATE_PLAY = 2
    CUSTOM_DUNGEON_SOCIAL_UPDATE_LIKE = 3


class CustomDungeonBriefGetType(betterproto.Enum):
    CUSTOM_DUNGEON_BRIEF_GET_NONE = 0
    CUSTOM_DUNGEON_BRIEF_GET_MY = 1
    CUSTOM_DUNGEON_BRIEF_GET_STORE = 2
    CUSTOM_DUNGEON_BRIEF_GET_SEARCH = 3
    CUSTOM_DUNGEON_BRIEF_GET_GM_SCORE = 4


class AddAskFriendNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10872
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetPlayerFriendListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10898
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetPlayerFriendListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10812
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetSocialDetailReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10807
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetSocialDetailRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10821
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerAskAddFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10803
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerAskAddFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10890
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerDealAddFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10873
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerDealAddFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10899
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerDeleteFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10831
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerDeleteFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10875
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerSetSignatureReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10881
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerSetSignatureRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10805
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetPlayerFriendBriefReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10847
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetPlayerFriendBriefRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10839
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeverGetPs4FriendUidReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10853
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SeverGetPs4FriendUidRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10822
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class SyncPlayerBriefNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10865
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerAddBlacklistReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10804
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerAddBlacklistRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10893
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerRemoveBlacklistReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10827
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerRemoveBlacklistRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10894
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetRecentMpPlayerListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10888
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetRecentMpPlayerListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10826
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetPlayerBlacklistReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10863
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetPlayerBlacklistRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10895
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerPrivateChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10806
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerPrivateChatRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10834
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerPullPrivateChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10850
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerPullRecentChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10843
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerUpdateActivitySocialDataNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10874
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerBlessingGetFriendPicListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10876


class ServerBlessingGetFriendPicListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10846


class ServerGetFriendBriefReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10841


class ServerGetFriendBriefRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10849


class ServerUpdateShowAvatarInfoNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10891


class ServerGetFriendShowAvatarInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10824


class ServerGetFriendShowAvatarInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10856


class ServerReadPrivateChatReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10842
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerGetFriendShowNameCardInfoReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10830


class ServerGetFriendShowNameCardInfoRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10867


class ServerGetAskFriendBriefReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10858


class ServerGetAskFriendBriefRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10870


class ServerAddPsnFriendReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10817


class ServerAddPsnFriendRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10802


class ServerAddPsnBlackReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10819


class ServerAddPsnBlackRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10861


class ServerFriendInfoChangeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10829
    ENET_CHANNEL_ID = 0
    ENET_IS_RELIABLE = 1


class ServerPlantFlowerGetFriendFlowerDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10857


class ServerPlantFlowerGetFriendFlowerDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10900


class ServerPlantFlowerGetFriendFlowerWishListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10816


class ServerPlantFlowerGetFriendFlowerWishListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10887


class ServerWinterCampGetFriendItemDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10840


class ServerWinterCampGetFriendItemDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10818


class ServerWinterCampGetFriendWishListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10866


class ServerWinterCampGetFriendWishListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10868


class ServerGetCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10833


class ServerGetCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10884


class ServerSaveCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10880


class ServerSaveCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10889


class ServerPublishCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10859


class ServerPublishCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10832


class ServerRemoveCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10860


class ServerRemoveCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10814


class ServerUpdateCustomDungeonSocialNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10892


class ServerGetCustomDungeonBriefReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10820


class ServerGetCustomDungeonBriefRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10864


class ServerGetRecommendCustomDungeonReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10838


class ServerGetRecommendCustomDungeonRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10811


class ServerAddFriendByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10844


class ServerAddFriendByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10886


class ServerDelFriendByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10801


class ServerDelFriendByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10828


class ServerAddFriendAskByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10851


class ServerAddFriendAskByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10823


class ServerDelFriendAskByMuipReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10871


class ServerDelFriendAskByMuipRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10845


class ServerCustomDungeonCacheInvalidNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10808


class ServerCustomDungeonSocialGmNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10809


class ServerCustomDungeonFirstLikeNotifyCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10852


class ServerGetUgcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10885


class ServerGetUgcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10825


class ServerGetUgcBriefReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10878


class ServerGetUgcBriefRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10836


class ServerMultiGetUgcBriefReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10854


class ServerMultiGetUgcBriefRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10883


class ServerSaveUgcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10869


class ServerSaveUgcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10810


class ServerPublishUgcReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10896


class ServerPublishUgcRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10862


class ServerCheckUgcUpdateReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10815


class ServerCheckUgcUpdateRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10813


class ServerActivityGetFriendGiftDataReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10879


class ServerActivityGetFriendGiftDataRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10855


class ServerActivityGetFriendGiftWishListReqCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10976


class ServerActivityGetFriendGiftWishListRspCmdId(betterproto.Enum):
    NONE = 0
    CMD_ID = 10968


@dataclass(eq=False, repr=False)
class ParamList(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PropValue(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    val: int = betterproto.int64_field(4)
    ival: int = betterproto.int64_field(2, group="value")
    fval: float = betterproto.float_field(3, group="value")


@dataclass(eq=False, repr=False)
class Uint32Pair(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RegionSimpleInfo(betterproto.Message):
    name: str = betterproto.string_field(1)
    title: str = betterproto.string_field(2)
    type: str = betterproto.string_field(3)
    dispatch_url: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class QueryRegionListHttpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    region_list: List["RegionSimpleInfo"] = betterproto.message_field(2)
    client_secret_key: bytes = betterproto.bytes_field(5)
    client_custom_config_encrypted: bytes = betterproto.bytes_field(6)
    enable_login_pc: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class ForceUpdateInfo(betterproto.Message):
    force_update_url: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class StopServerInfo(betterproto.Message):
    stop_begin_time: int = betterproto.uint32_field(1)
    stop_end_time: int = betterproto.uint32_field(2)
    url: str = betterproto.string_field(3)
    content_msg: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class ResVersionConfig(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    relogin: bool = betterproto.bool_field(2)
    md5: str = betterproto.string_field(3)
    release_total_size: str = betterproto.string_field(4)
    version_suffix: str = betterproto.string_field(5)
    branch: str = betterproto.string_field(6)
    next_script_version: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class RegionInfo(betterproto.Message):
    gateserver_ip: str = betterproto.string_field(1)
    gateserver_port: int = betterproto.uint32_field(2)
    pay_callback_url: str = betterproto.string_field(3)
    area_type: str = betterproto.string_field(7)
    resource_url: str = betterproto.string_field(8)
    data_url: str = betterproto.string_field(9)
    feedback_url: str = betterproto.string_field(10)
    bulletin_url: str = betterproto.string_field(11)
    resource_url_bak: str = betterproto.string_field(12)
    data_url_bak: str = betterproto.string_field(13)
    client_data_version: int = betterproto.uint32_field(14)
    handbook_url: str = betterproto.string_field(16)
    client_silence_data_version: int = betterproto.uint32_field(18)
    client_data_md5: str = betterproto.string_field(19)
    client_silence_data_md5: str = betterproto.string_field(20)
    res_version_config: "ResVersionConfig" = betterproto.message_field(22)
    secret_key: bytes = betterproto.bytes_field(23)
    official_community_url: str = betterproto.string_field(24)
    client_version_suffix: str = betterproto.string_field(26)
    client_silence_version_suffix: str = betterproto.string_field(27)
    use_gateserver_domain_name: bool = betterproto.bool_field(28)
    gateserver_domain_name: str = betterproto.string_field(29)
    user_center_url: str = betterproto.string_field(30)
    account_bind_url: str = betterproto.string_field(31)
    cdkey_url: str = betterproto.string_field(32)
    privacy_policy_url: str = betterproto.string_field(33)
    next_resource_url: str = betterproto.string_field(34)
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(35)
    game_biz: str = betterproto.string_field(36)


@dataclass(eq=False, repr=False)
class QueryCurrRegionHttpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    msg: str = betterproto.string_field(2)
    region_info: "RegionInfo" = betterproto.message_field(3)
    client_secret_key: bytes = betterproto.bytes_field(11)
    region_custom_config_encrypted: bytes = betterproto.bytes_field(12)
    client_region_custom_config_encrypted: bytes = betterproto.bytes_field(13)
    force_udpate: "ForceUpdateInfo" = betterproto.message_field(4, group="detail")
    stop_server: "StopServerInfo" = betterproto.message_field(5, group="detail")


@dataclass(eq=False, repr=False)
class PlayerUidExtInfo(betterproto.Message):
    reg_platform: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Reliquary(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    main_prop_id: int = betterproto.uint32_field(4)
    append_prop_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class Weapon(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    affix_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MaterialDeleteInfo(betterproto.Message):
    has_delete_config: bool = betterproto.bool_field(1)
    count_down_delete: "MaterialDeleteInfoCountDownDelete" = betterproto.message_field(
        2, group="delete_info"
    )
    date_delete: "MaterialDeleteInfoDateTimeDelete" = betterproto.message_field(
        3, group="delete_info"
    )
    delay_week_count_down_delete: "MaterialDeleteInfoDelayWeekCountDownDelete" = (
        betterproto.message_field(4, group="delete_info")
    )


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoCountDownDelete(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    config_count_down_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoDateTimeDelete(betterproto.Message):
    delete_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MaterialDeleteInfoDelayWeekCountDownDelete(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    config_delay_week: int = betterproto.uint32_field(2)
    config_count_down_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class Material(betterproto.Message):
    count: int = betterproto.uint32_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class Equip(betterproto.Message):
    is_locked: bool = betterproto.bool_field(3)
    reliquary: "Reliquary" = betterproto.message_field(1, group="detail")
    weapon: "Weapon" = betterproto.message_field(2, group="detail")


@dataclass(eq=False, repr=False)
class Furniture(betterproto.Message):
    count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Item(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    material: "Material" = betterproto.message_field(5, group="detail")
    equip: "Equip" = betterproto.message_field(6, group="detail")
    furniture: "Furniture" = betterproto.message_field(7, group="detail")


@dataclass(eq=False, repr=False)
class ItemParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EquipParam(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)
    item_level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EquipParamList(betterproto.Message):
    item_list: List["EquipParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Reward(betterproto.Message):
    reward_id: int = betterproto.uint32_field(1)
    item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityString(betterproto.Message):
    str: builtins.str = betterproto.string_field(1, group="type")
    hash: int = betterproto.uint32_field(2, group="type")


@dataclass(eq=False, repr=False)
class AbilityFloatValue(betterproto.Message):
    value: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class AbilityScalarValueEntry(betterproto.Message):
    key: "AbilityString" = betterproto.message_field(1)
    value_type: "AbilityScalarType" = betterproto.enum_field(2)
    float_value: float = betterproto.float_field(3, group="value")
    string_value: str = betterproto.string_field(4, group="value")
    int_value: int = betterproto.int32_field(5, group="value")
    uint_value: int = betterproto.uint32_field(6, group="value")


@dataclass(eq=False, repr=False)
class AbilityAppliedAbility(betterproto.Message):
    ability_name: "AbilityString" = betterproto.message_field(1)
    ability_override: "AbilityString" = betterproto.message_field(2)
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(3)
    instanced_ability_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AbilityAttachedModifier(betterproto.Message):
    is_invalid: bool = betterproto.bool_field(1)
    owner_entity_id: int = betterproto.uint32_field(2)
    instanced_modifier_id: int = betterproto.uint32_field(3)
    is_serverbuff_modifier: bool = betterproto.bool_field(4)
    attach_name_hash: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ModifierDurability(betterproto.Message):
    reduce_ratio: float = betterproto.float_field(1)
    remaining_durability: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class AbilityAppliedModifier(betterproto.Message):
    modifier_local_id: int = betterproto.int32_field(1)
    parent_ability_entity_id: int = betterproto.uint32_field(2)
    parent_ability_name: "AbilityString" = betterproto.message_field(3)
    parent_ability_override: "AbilityString" = betterproto.message_field(4)
    instanced_ability_id: int = betterproto.uint32_field(5)
    instanced_modifier_id: int = betterproto.uint32_field(6)
    exist_duration: float = betterproto.float_field(7)
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        8
    )
    apply_entity_id: int = betterproto.uint32_field(9)
    is_attached_parent_ability: bool = betterproto.bool_field(10)
    modifier_durability: "ModifierDurability" = betterproto.message_field(11)
    sbuff_uid: int = betterproto.uint32_field(12)
    is_serverbuff_modifier: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class MassivePropParam(betterproto.Message):
    type: int = betterproto.int32_field(1)
    reaction_info_list: List[int] = betterproto.uint32_field(2)
    param_list: List[float] = betterproto.float_field(3)
    sync_flag: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MassivePropSyncInfo(betterproto.Message):
    id: int = betterproto.int64_field(1)
    prop_list: List["MassivePropParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityMixinRecoverInfo(betterproto.Message):
    local_id: int = betterproto.uint32_field(3)
    data_list: List[int] = betterproto.uint32_field(4)
    is_serverbuff_modifier: bool = betterproto.bool_field(5)
    massive_prop_list: List["MassivePropSyncInfo"] = betterproto.message_field(6)
    instanced_ability_id: int = betterproto.uint32_field(1, group="Source")
    instanced_modifier_id: int = betterproto.uint32_field(2, group="Source")


@dataclass(eq=False, repr=False)
class AbilitySyncStateInfo(betterproto.Message):
    is_inited: bool = betterproto.bool_field(1)
    dynamic_value_map: List["AbilityScalarValueEntry"] = betterproto.message_field(2)
    applied_abilities: List["AbilityAppliedAbility"] = betterproto.message_field(3)
    applied_modifiers: List["AbilityAppliedModifier"] = betterproto.message_field(4)
    mixin_recover_infos: List["AbilityMixinRecoverInfo"] = betterproto.message_field(5)
    sgv_dynamic_value_map: List["AbilityScalarValueEntry"] = betterproto.message_field(
        6
    )


@dataclass(eq=False, repr=False)
class AbilityEmbryo(betterproto.Message):
    ability_id: int = betterproto.uint32_field(1)
    ability_name_hash: int = betterproto.fixed32_field(2)
    ability_override_name_hash: int = betterproto.fixed32_field(3)


@dataclass(eq=False, repr=False)
class AbilityControlBlock(betterproto.Message):
    ability_embryo_list: List["AbilityEmbryo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class Vector(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class VectorPlane(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class Vector3Int(betterproto.Message):
    x: int = betterproto.int32_field(1)
    y: int = betterproto.int32_field(2)
    z: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class EntityMoveInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(2)
    scene_time: int = betterproto.uint32_field(3)
    reliable_seq: int = betterproto.uint32_field(4)
    is_reliable: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class MotionInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)
    speed: "Vector" = betterproto.message_field(3)
    state: "MotionState" = betterproto.enum_field(4)
    params: List["Vector"] = betterproto.message_field(5)
    ref_pos: "Vector" = betterproto.message_field(6)
    ref_id: int = betterproto.uint32_field(7)
    scene_time: int = betterproto.uint32_field(8)
    interval_velocity: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class PlaceInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SceneWeaponInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    gadget_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(3)
    guid: int = betterproto.uint64_field(4)
    level: int = betterproto.uint32_field(5)
    promote_level: int = betterproto.uint32_field(6)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(7)
    affix_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class SceneReliquaryInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ServerBuff(betterproto.Message):
    server_buff_uid: int = betterproto.uint32_field(1)
    server_buff_id: int = betterproto.uint32_field(2)
    server_buff_type: int = betterproto.uint32_field(3)
    instanced_modifier_id: int = betterproto.uint32_field(4)
    is_modifier_added: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class CurVehicleInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    pos: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarExcelInfo(betterproto.Message):
    prefab_path_hash: int = betterproto.uint64_field(1)
    prefab_path_remote_hash: int = betterproto.uint64_field(2)
    controller_path_hash: int = betterproto.uint64_field(3)
    controller_path_remote_hash: int = betterproto.uint64_field(4)
    combat_config_hash: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class SceneAvatarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    peer_id: int = betterproto.uint32_field(4)
    equip_id_list: List[int] = betterproto.uint32_field(5)
    skill_depot_id: int = betterproto.uint32_field(6)
    talent_id_list: List[int] = betterproto.uint32_field(7)
    weapon: "SceneWeaponInfo" = betterproto.message_field(8)
    reliquary_list: List["SceneReliquaryInfo"] = betterproto.message_field(9)
    core_proud_skill_level: int = betterproto.uint32_field(11)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(12)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    server_buff_list: List["ServerBuff"] = betterproto.message_field(15)
    team_resonance_list: List[int] = betterproto.uint32_field(16)
    wearing_flycloak_id: int = betterproto.uint32_field(17)
    born_time: int = betterproto.uint32_field(18)
    costume_id: int = betterproto.uint32_field(19)
    cur_vehicle_info: "CurVehicleInfo" = betterproto.message_field(20)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(21)
    anim_hash: int = betterproto.uint32_field(22)


@dataclass(eq=False, repr=False)
class SceneFishInfo(betterproto.Message):
    fish_id: int = betterproto.uint32_field(1)
    fish_pool_entity_id: int = betterproto.uint32_field(2)
    fish_pool_pos: "Vector" = betterproto.message_field(3)
    fish_pool_gadget_id: int = betterproto.uint32_field(4)
    last_shock_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FishtankFishInfo(betterproto.Message):
    fish_distance_from_water: float = betterproto.float_field(1)
    fish_scale: float = betterproto.float_field(2)
    initial_rotation_y: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class SceneMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    weapon_list: List["SceneWeaponInfo"] = betterproto.message_field(4)
    authority_peer_id: int = betterproto.uint32_field(5)
    affix_list: List[int] = betterproto.uint32_field(6)
    is_elite: bool = betterproto.bool_field(7)
    owner_entity_id: int = betterproto.uint32_field(8)
    summoned_tag: int = betterproto.uint32_field(9)
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    pose_id: int = betterproto.uint32_field(11)
    born_type: "MonsterBornType" = betterproto.enum_field(12)
    block_id: int = betterproto.uint32_field(13)
    mark_flag: int = betterproto.uint32_field(14)
    title_id: int = betterproto.uint32_field(15)
    special_name_id: int = betterproto.uint32_field(16)
    attack_target_id: int = betterproto.uint32_field(17)
    monster_route: "MonsterRoute" = betterproto.message_field(18)
    ai_config_id: int = betterproto.uint32_field(19)
    level_route_id: int = betterproto.uint32_field(20)
    init_pose_id: int = betterproto.uint32_field(21)
    is_light: bool = betterproto.bool_field(22)
    kill_num: int = betterproto.uint32_field(23)
    fish_info: "SceneFishInfo" = betterproto.message_field(50, group="content")
    fishtank_fish_info: "FishtankFishInfo" = betterproto.message_field(
        51, group="content"
    )


@dataclass(eq=False, repr=False)
class SceneNpcInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(3)
    block_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WorktopInfo(betterproto.Message):
    option_list: List[int] = betterproto.uint32_field(1)
    is_guest_can_operate: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MathQuaternion(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    w: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class PlatformInfo(betterproto.Message):
    route_id: int = betterproto.uint32_field(1)
    start_index: int = betterproto.int32_field(2)
    start_route_time: int = betterproto.uint32_field(3)
    start_scene_time: int = betterproto.uint32_field(4)
    start_pos: "Vector" = betterproto.message_field(7)
    is_started: bool = betterproto.bool_field(8)
    start_rot: "MathQuaternion" = betterproto.message_field(9)
    stop_scene_time: int = betterproto.uint32_field(10)
    pos_offset: "Vector" = betterproto.message_field(11)
    rot_offset: "MathQuaternion" = betterproto.message_field(12)
    moving_platform_type: "MovingPlatformType" = betterproto.enum_field(13)
    is_active: bool = betterproto.bool_field(14)
    route: "Route" = betterproto.message_field(15)
    point_id: int = betterproto.uint32_field(16)


@dataclass(eq=False, repr=False)
class RoutePoint(betterproto.Message):
    position: "Vector" = betterproto.message_field(1)
    arrive_range: float = betterproto.float_field(2)
    has_reach_event: bool = betterproto.bool_field(3)
    velocity: float = betterproto.float_field(11, group="move_params")
    time: float = betterproto.float_field(12, group="move_params")
    rotation: "Vector" = betterproto.message_field(21, group="rotate_params")
    rotation_speed: "MathQuaternion" = betterproto.message_field(
        22, group="rotate_params"
    )
    axis_speed: "MathQuaternion" = betterproto.message_field(23, group="rotate_params")


@dataclass(eq=False, repr=False)
class Route(betterproto.Message):
    route_points: List["RoutePoint"] = betterproto.message_field(1)
    route_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MonsterRoute(betterproto.Message):
    route_points: List["RoutePoint"] = betterproto.message_field(1)
    speed_level: int = betterproto.uint32_field(2)
    route_type: int = betterproto.uint32_field(3)
    arrive_range: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class WeatherInfo(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClientGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_type: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    target_entity_id: int = betterproto.uint32_field(5)
    async_load: bool = betterproto.bool_field(6)
    is_peer_id_from_player: bool = betterproto.bool_field(7)
    target_entity_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AbilityGadgetInfo(betterproto.Message):
    camp_id: int = betterproto.uint32_field(1)
    camp_target_type: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GatherGadgetInfo(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    is_forbid_guest: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class StatueGadgetInfo(betterproto.Message):
    opened_statue_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WeeklyBossResinDiscountInfo(betterproto.Message):
    discount_num: int = betterproto.uint32_field(1)
    discount_num_limit: int = betterproto.uint32_field(2)
    resin_cost: int = betterproto.uint32_field(3)
    original_resin_cost: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BossChestInfo(betterproto.Message):
    monster_config_id: int = betterproto.uint32_field(1)
    resin: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    uid_discount_map: Dict[int, "WeeklyBossResinDiscountInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class BlossomChestInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    qualify_uid_list: List[int] = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    dead_time: int = betterproto.uint32_field(4)
    blossom_refresh_type: int = betterproto.uint32_field(5)
    refresh_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GadgetCrucibleInfo(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(1)
    prepare_end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GadgetPlayInfo(betterproto.Message):
    play_type: int = betterproto.uint32_field(1)
    duration: int = betterproto.uint32_field(2)
    progress_stage_list: List[int] = betterproto.uint32_field(3)
    start_cd: int = betterproto.uint32_field(4)
    start_time: int = betterproto.uint32_field(5)
    progress: int = betterproto.uint32_field(6)
    crucible_info: "GadgetCrucibleInfo" = betterproto.message_field(
        21, group="play_info"
    )


@dataclass(eq=False, repr=False)
class MpPlayRewardInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    remain_uid_list: List[int] = betterproto.uint32_field(2)
    qualify_uid_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GadgetGeneralRewardInfo(betterproto.Message):
    resin: int = betterproto.uint32_field(1)
    dead_time: int = betterproto.uint32_field(2)
    remain_uid_list: List[int] = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    item_param: "ItemParam" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class OfferingInfo(betterproto.Message):
    offering_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BuildingInfo(betterproto.Message):
    building_id: int = betterproto.uint32_field(1)
    point_config_id: int = betterproto.uint32_field(2)
    cost: int = betterproto.uint32_field(3)
    refund: int = betterproto.uint32_field(5)
    owner_uid: int = betterproto.uint32_field(6)
    current_num: int = betterproto.uint32_field(7)
    max_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FoundationInfo(betterproto.Message):
    status: "FoundationStatus" = betterproto.enum_field(1)
    uid_list: List[int] = betterproto.uint32_field(2)
    current_building_id: int = betterproto.uint32_field(3)
    locked_by_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VehicleMember(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(2)
    pos: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VehicleInfo(betterproto.Message):
    member_list: List["VehicleMember"] = betterproto.message_field(1)
    owner_uid: int = betterproto.uint32_field(2)
    cur_stamina: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class EchoShellInfo(betterproto.Message):
    shell_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ScreenInfo(betterproto.Message):
    live_id: int = betterproto.uint32_field(1)
    projector_entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FishPoolInfo(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    fish_area_list: List[int] = betterproto.uint32_field(2)
    today_fish_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CustomCommonNodeInfo(betterproto.Message):
    parent_index: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    slot_identifier: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class CustomGadgetTreeInfo(betterproto.Message):
    node_list: List["CustomCommonNodeInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeGadgetInfo(betterproto.Message):
    cell_config_id: int = betterproto.uint32_field(1)
    cell_type: int = betterproto.uint32_field(2)
    cell_state: int = betterproto.uint32_field(3)
    cell_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class NightCrowGadgetInfo(betterproto.Message):
    argument_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DeshretObeliskGadgetInfo(betterproto.Message):
    argument_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneGadgetInfo(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    owner_entity_id: int = betterproto.uint32_field(4)
    born_type: "GadgetBornType" = betterproto.enum_field(5)
    gadget_state: int = betterproto.uint32_field(6)
    gadget_type: int = betterproto.uint32_field(7)
    is_show_cutscene: bool = betterproto.bool_field(8)
    authority_peer_id: int = betterproto.uint32_field(9)
    is_enable_interact: bool = betterproto.bool_field(10)
    interact_id: int = betterproto.uint32_field(11)
    mark_flag: int = betterproto.uint32_field(21)
    prop_owner_entity_id: int = betterproto.uint32_field(22)
    platform: "PlatformInfo" = betterproto.message_field(23)
    interact_uid_list: List[int] = betterproto.uint32_field(24)
    draft_id: int = betterproto.uint32_field(25)
    gadget_talk_state: int = betterproto.uint32_field(26)
    play_info: "GadgetPlayInfo" = betterproto.message_field(100)
    trifle_item: "Item" = betterproto.message_field(12, group="content")
    gather_gadget: "GatherGadgetInfo" = betterproto.message_field(13, group="content")
    worktop: "WorktopInfo" = betterproto.message_field(14, group="content")
    client_gadget: "ClientGadgetInfo" = betterproto.message_field(15, group="content")
    weather: "WeatherInfo" = betterproto.message_field(17, group="content")
    ability_gadget: "AbilityGadgetInfo" = betterproto.message_field(18, group="content")
    statue_gadget: "StatueGadgetInfo" = betterproto.message_field(19, group="content")
    boss_chest: "BossChestInfo" = betterproto.message_field(20, group="content")
    blossom_chest: "BlossomChestInfo" = betterproto.message_field(41, group="content")
    mp_play_reward: "MpPlayRewardInfo" = betterproto.message_field(42, group="content")
    general_reward: "GadgetGeneralRewardInfo" = betterproto.message_field(
        43, group="content"
    )
    offering_info: "OfferingInfo" = betterproto.message_field(44, group="content")
    foundation_info: "FoundationInfo" = betterproto.message_field(45, group="content")
    vehicle_info: "VehicleInfo" = betterproto.message_field(46, group="content")
    shell_info: "EchoShellInfo" = betterproto.message_field(47, group="content")
    screen_info: "ScreenInfo" = betterproto.message_field(48, group="content")
    fish_pool_info: "FishPoolInfo" = betterproto.message_field(59, group="content")
    custom_gadget_tree_info: "CustomGadgetTreeInfo" = betterproto.message_field(
        60, group="content"
    )
    roguelike_gadget_info: "RoguelikeGadgetInfo" = betterproto.message_field(
        61, group="content"
    )
    night_crow_gadget_info: "NightCrowGadgetInfo" = betterproto.message_field(
        62, group="content"
    )
    deshret_obelisk_gadget_info: "DeshretObeliskGadgetInfo" = betterproto.message_field(
        63, group="content"
    )


@dataclass(eq=False, repr=False)
class AnimatorParameterValueInfo(betterproto.Message):
    para_type: int = betterproto.uint32_field(1)
    int_val: int = betterproto.int32_field(2, group="paraVal")
    float_val: float = betterproto.float_field(3, group="paraVal")
    bool_val: bool = betterproto.bool_field(4, group="paraVal")


@dataclass(eq=False, repr=False)
class ServantInfo(betterproto.Message):
    master_entity_id: int = betterproto.uint32_field(1)
    born_slot_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneEntityAiInfo(betterproto.Message):
    is_ai_open: bool = betterproto.bool_field(1)
    born_pos: "Vector" = betterproto.message_field(2)
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    servant_info: "ServantInfo" = betterproto.message_field(4)
    ai_threat_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    skill_group_cd_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_tactic: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EntityRendererChangedInfo(betterproto.Message):
    changed_renderers: Dict[str, int] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_UINT32
    )
    visibility_count: int = betterproto.uint32_field(2)
    is_cached: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PropPair(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    prop_value: "PropValue" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FightPropPair(betterproto.Message):
    prop_type: int = betterproto.uint32_field(1)
    prop_value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class AnimatorParameterValueInfoPair(betterproto.Message):
    name_id: int = betterproto.int32_field(1)
    animator_para: "AnimatorParameterValueInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EntityEnvironmentInfo(betterproto.Message):
    json_climate_type: int = betterproto.uint32_field(1)
    climate_area_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EntityClientExtraInfo(betterproto.Message):
    skill_anchor_position: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EntityAuthorityInfo(betterproto.Message):
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(1)
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(2)
    ai_info: "SceneEntityAiInfo" = betterproto.message_field(3)
    born_pos: "Vector" = betterproto.message_field(4)
    pose_para_list: List["AnimatorParameterValueInfoPair"] = betterproto.message_field(
        5
    )
    client_extra_info: "EntityClientExtraInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SceneEntityInfo(betterproto.Message):
    entity_type: "ProtEntityType" = betterproto.enum_field(1)
    entity_id: int = betterproto.uint32_field(2)
    name: str = betterproto.string_field(3)
    motion_info: "MotionInfo" = betterproto.message_field(4)
    prop_list: List["PropPair"] = betterproto.message_field(5)
    fight_prop_list: List["FightPropPair"] = betterproto.message_field(6)
    life_state: int = betterproto.uint32_field(7)
    animator_para_list: List[
        "AnimatorParameterValueInfoPair"
    ] = betterproto.message_field(9)
    last_move_scene_time_ms: int = betterproto.uint32_field(17)
    last_move_reliable_seq: int = betterproto.uint32_field(18)
    entity_client_data: "EntityClientData" = betterproto.message_field(19)
    entity_environment_info_list: List[
        "EntityEnvironmentInfo"
    ] = betterproto.message_field(20)
    entity_authority_info: "EntityAuthorityInfo" = betterproto.message_field(21)
    tag_list: List[str] = betterproto.string_field(22)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(23)
    avatar: "SceneAvatarInfo" = betterproto.message_field(10, group="entity")
    monster: "SceneMonsterInfo" = betterproto.message_field(11, group="entity")
    npc: "SceneNpcInfo" = betterproto.message_field(12, group="entity")
    gadget: "SceneGadgetInfo" = betterproto.message_field(13, group="entity")


@dataclass(eq=False, repr=False)
class CreateGadgetInfo(betterproto.Message):
    born_type: "GadgetBornType" = betterproto.enum_field(1)
    chest: "CreateGadgetInfoChest" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CreateGadgetInfoChest(betterproto.Message):
    chest_drop_id: int = betterproto.uint32_field(1)
    is_show_cutscene: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class CreateEntityInfo(betterproto.Message):
    level: int = betterproto.uint32_field(5)
    pos: "Vector" = betterproto.message_field(6)
    rot: "Vector" = betterproto.message_field(7)
    scene_id: int = betterproto.uint32_field(10)
    room_id: int = betterproto.uint32_field(11)
    client_unique_id: int = betterproto.uint32_field(12)
    monster_id: int = betterproto.uint32_field(1, group="entity")
    npc_id: int = betterproto.uint32_field(2, group="entity")
    gadget_id: int = betterproto.uint32_field(3, group="entity")
    item_id: int = betterproto.uint32_field(4, group="entity")
    gadget: "CreateGadgetInfo" = betterproto.message_field(
        13, group="entity_create_info"
    )


@dataclass(eq=False, repr=False)
class TrialAvatarGrantRecord(betterproto.Message):
    grant_reason: int = betterproto.uint32_field(1)
    from_parent_quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TrialAvatarInfo(betterproto.Message):
    trial_avatar_id: int = betterproto.uint32_field(1)
    trial_equip_list: List["Item"] = betterproto.message_field(2)
    grant_record: "TrialAvatarGrantRecord" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class AvatarSkillInfo(betterproto.Message):
    pass_cd_time: int = betterproto.uint32_field(1)
    full_cd_time_list: List[int] = betterproto.uint32_field(2)
    max_charge_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FetterData(betterproto.Message):
    fetter_id: int = betterproto.uint32_field(1)
    fetter_state: int = betterproto.uint32_field(2)
    cond_index_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarFetterInfo(betterproto.Message):
    exp_number: int = betterproto.uint32_field(1)
    exp_level: int = betterproto.uint32_field(2)
    open_id_list: List[int] = betterproto.uint32_field(3)
    finish_id_list: List[int] = betterproto.uint32_field(4)
    rewarded_fetter_level_list: List[int] = betterproto.uint32_field(5)
    fetter_list: List["FetterData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AvatarExpeditionInfo(betterproto.Message):
    state: "AvatarExpeditionState" = betterproto.enum_field(1)
    exp_id: int = betterproto.uint32_field(2)
    hour_time: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)
    shorten_ratio: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class AvatarEquipAffixInfo(betterproto.Message):
    equip_affix_id: int = betterproto.uint32_field(1)
    left_cd_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint64_field(2)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    life_state: int = betterproto.uint32_field(4)
    equip_guid_list: List[int] = betterproto.uint64_field(5)
    talent_id_list: List[int] = betterproto.uint32_field(6)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    trial_avatar_info: "TrialAvatarInfo" = betterproto.message_field(9)
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    skill_depot_id: int = betterproto.uint32_field(11)
    fetter_info: "AvatarFetterInfo" = betterproto.message_field(12)
    core_proud_skill_level: int = betterproto.uint32_field(13)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(14)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    expedition_state: "AvatarExpeditionState" = betterproto.enum_field(16)
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        17, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_focus: bool = betterproto.bool_field(18)
    avatar_type: int = betterproto.uint32_field(19)
    team_resonance_list: List[int] = betterproto.uint32_field(20)
    wearing_flycloak_id: int = betterproto.uint32_field(21)
    equip_affix_list: List["AvatarEquipAffixInfo"] = betterproto.message_field(22)
    born_time: int = betterproto.uint32_field(23)
    pending_promote_reward_list: List[int] = betterproto.uint32_field(24)
    costume_id: int = betterproto.uint32_field(25)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(26)
    anim_hash: int = betterproto.uint32_field(27)


@dataclass(eq=False, repr=False)
class ShowEquip(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    reliquary: "Reliquary" = betterproto.message_field(2, group="detail")
    weapon: "Weapon" = betterproto.message_field(3, group="detail")


@dataclass(eq=False, repr=False)
class ShowAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    talent_id_list: List[int] = betterproto.uint32_field(3)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    skill_depot_id: int = betterproto.uint32_field(5)
    core_proud_skill_level: int = betterproto.uint32_field(6)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(7)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    equip_list: List["ShowEquip"] = betterproto.message_field(10)
    fetter_info: "AvatarFetterInfo" = betterproto.message_field(11)
    costume_id: int = betterproto.uint32_field(12)
    excel_info: "AvatarExcelInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class Quest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    start_time: int = betterproto.uint32_field(4)
    is_random: bool = betterproto.bool_field(5)
    parent_quest_id: int = betterproto.uint32_field(6)
    quest_config_id: int = betterproto.uint32_field(7)
    start_game_time: int = betterproto.uint32_field(8)
    accept_time: int = betterproto.uint32_field(9)
    lacked_npc_list: List[int] = betterproto.uint32_field(10)
    finish_progress_list: List[int] = betterproto.uint32_field(11)
    fail_progress_list: List[int] = betterproto.uint32_field(12)
    lacked_npc_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    lacked_place_list: List[int] = betterproto.uint32_field(14)
    lacked_place_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class NpcPositionInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MailTextContent(betterproto.Message):
    title: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    sender: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class MailItem(betterproto.Message):
    equip_param: "EquipParam" = betterproto.message_field(1)
    delete_info: "MaterialDeleteInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MailData(betterproto.Message):
    mail_id: int = betterproto.uint32_field(1)
    mail_text_content: "MailTextContent" = betterproto.message_field(4)
    item_list: List["MailItem"] = betterproto.message_field(7)
    send_time: int = betterproto.uint32_field(8)
    expire_time: int = betterproto.uint32_field(9)
    importance: int = betterproto.uint32_field(10)
    is_read: bool = betterproto.bool_field(11)
    is_attachment_got: bool = betterproto.bool_field(12)
    config_id: int = betterproto.uint32_field(13)
    argument_list: List[str] = betterproto.string_field(14)
    collect_state: "MailCollectState" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class OnlinePlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    player_level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    mp_setting_type: "MpSettingType" = betterproto.enum_field(5)
    cur_player_num_in_world: int = betterproto.uint32_field(6)
    world_level: int = betterproto.uint32_field(7)
    online_id: str = betterproto.string_field(8)
    name_card_id: int = betterproto.uint32_field(9)
    blacklist_uid_list: List[int] = betterproto.uint32_field(10)
    signature: str = betterproto.string_field(11)
    profile_picture: "ProfilePicture" = betterproto.message_field(12)
    psn_id: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class Birthday(betterproto.Message):
    month: int = betterproto.uint32_field(1)
    day: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MapMarkPoint(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    pos: "Vector" = betterproto.message_field(3)
    point_type: "MapMarkPointType" = betterproto.enum_field(4)
    monster_id: int = betterproto.uint32_field(5)
    from_type: "MapMarkFromType" = betterproto.enum_field(6)
    quest_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MassiveWaterInfo(betterproto.Message):
    id: int = betterproto.int64_field(1)


@dataclass(eq=False, repr=False)
class MassiveGrassInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    center: "Vector" = betterproto.message_field(2)
    size: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MassiveBoxInfo(betterproto.Message):
    id: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    center: "Vector" = betterproto.message_field(3)
    extents: "Vector" = betterproto.message_field(4)
    up: "Vector" = betterproto.message_field(5)
    forward: "Vector" = betterproto.message_field(6)
    right: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ClientMassiveEntity(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)
    obj_id: int = betterproto.int64_field(3)
    water_info: "MassiveWaterInfo" = betterproto.message_field(4, group="entity_info")
    grass_info: "MassiveGrassInfo" = betterproto.message_field(5, group="entity_info")
    box_info: "MassiveBoxInfo" = betterproto.message_field(6, group="entity_info")


@dataclass(eq=False, repr=False)
class ShapeSphere(betterproto.Message):
    center: "Vector" = betterproto.message_field(1)
    radius: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class ShapeBox(betterproto.Message):
    center: "Vector" = betterproto.message_field(1)
    axis0: "Vector" = betterproto.message_field(2)
    axis1: "Vector" = betterproto.message_field(3)
    axis2: "Vector" = betterproto.message_field(4)
    extents: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ServerMassiveEntity(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)
    runtime_id: int = betterproto.uint32_field(3)
    authority_peer_id: int = betterproto.uint32_field(4)
    obj_id: int = betterproto.int64_field(5)
    water_info: "MassiveWaterInfo" = betterproto.message_field(6, group="entity_info")
    grass_info: "MassiveGrassInfo" = betterproto.message_field(7, group="entity_info")
    box_info: "MassiveBoxInfo" = betterproto.message_field(8, group="entity_info")


@dataclass(eq=False, repr=False)
class MassiveEntityState(betterproto.Message):
    entity_type: int = betterproto.uint32_field(1)
    obj_id: int = betterproto.int64_field(2)
    element_state: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EntityClientData(betterproto.Message):
    wind_change_scene_time: int = betterproto.uint32_field(1)
    windmill_sync_angle: float = betterproto.float_field(2)
    wind_change_target_level: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class BlockInfo(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    data_version: int = betterproto.uint32_field(2)
    bin_data: bytes = betterproto.bytes_field(3)
    is_dirty: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class ShopMcoinProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    mcoin_base: int = betterproto.uint32_field(3)
    mcoin_non_first: int = betterproto.uint32_field(4)
    mcoin_first: int = betterproto.uint32_field(5)
    bought_num: int = betterproto.uint32_field(6)
    is_audit: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class ShopCardProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    mcoin_base: int = betterproto.uint32_field(3)
    hcoin_per_day: int = betterproto.uint32_field(4)
    days: int = betterproto.uint32_field(5)
    remain_reward_days: int = betterproto.uint32_field(6)
    card_product_type: int = betterproto.uint32_field(7)
    resin_card: "ShopCardProductResinCard" = betterproto.message_field(
        101, group="extra_card_data"
    )


@dataclass(eq=False, repr=False)
class ShopCardProductResinCard(betterproto.Message):
    base_item_list: List["ItemParam"] = betterproto.message_field(1)
    per_day_item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ShopConcertProduct(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    price_tier: str = betterproto.string_field(2)
    obtain_count: int = betterproto.uint32_field(3)
    obtain_limit: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(6)
    buy_times: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HashedString(betterproto.Message):
    hash: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayTeamEntityInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    player_uid: int = betterproto.uint32_field(2)
    authority_peer_id: int = betterproto.uint32_field(3)
    gadget_config_id: int = betterproto.uint32_field(5)
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class FeatureBlockInfo(betterproto.Message):
    feature_type: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MapMarkTipsInfo(betterproto.Message):
    tips_type: "MapMarkTipsType" = betterproto.enum_field(1)
    point_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExhibitionDisplayInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)
    detail_param: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ProfilePicture(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RedPointData(betterproto.Message):
    red_point_type: int = betterproto.uint32_field(1)
    is_show: bool = betterproto.bool_field(2)
    content_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeMarkPointNpcData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeMarkPointSuiteData(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeMarkPointFurnitureData(betterproto.Message):
    guid: int = betterproto.uint32_field(1)
    furniture_id: int = betterproto.uint32_field(2)
    furniture_type: int = betterproto.uint32_field(3)
    pos: "Vector" = betterproto.message_field(4)
    npc_data: "HomeMarkPointNpcData" = betterproto.message_field(6, group="extra")
    suite_data: "HomeMarkPointSuiteData" = betterproto.message_field(7, group="extra")


@dataclass(eq=False, repr=False)
class MapAreaInfo(betterproto.Message):
    map_area_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class HomeFurnitureArrangementMuipData(betterproto.Message):
    furniture_id: int = betterproto.uint32_field(1)
    spawn_pos: "Vector" = betterproto.message_field(2)
    spawn_rot: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeBlockArrangementMuipData(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    furniture_data_list: List[
        "HomeFurnitureArrangementMuipData"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeSceneArrangementMuipData(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    is_room: bool = betterproto.bool_field(3)
    block_data_list: List["HomeBlockArrangementMuipData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonBattleRecordMuipData(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    min_cost_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerCustomDungeonMuipData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    publish_dungeon_list: List[int] = betterproto.uint64_field(2)
    store_dungeon_list: List[int] = betterproto.uint64_field(3)
    battle_record_list: List[
        "CustomDungeonBattleRecordMuipData"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonSettingMuipData(betterproto.Message):
    is_arrive_finish: bool = betterproto.bool_field(1)
    coin_limit: int = betterproto.uint32_field(2)
    time_limit: int = betterproto.uint32_field(3)
    is_forbid_skill: bool = betterproto.bool_field(4)
    life_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CustomDungeonAbstractMuipData(betterproto.Message):
    first_publish_time: int = betterproto.uint32_field(1)
    last_publish_time: int = betterproto.uint32_field(2)
    brick_statistics_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class CustomDungeonSocialMuipData(betterproto.Message):
    play_num: int = betterproto.uint32_field(1)
    like_num: int = betterproto.uint32_field(2)
    store_num: int = betterproto.uint32_field(3)
    win_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonBriefMuipData(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    creator_nickname: str = betterproto.string_field(3)
    tag_list: List[int] = betterproto.uint32_field(4)
    setting: "CustomDungeonSettingMuipData" = betterproto.message_field(5)
    abstract: "CustomDungeonAbstractMuipData" = betterproto.message_field(6)
    social: "CustomDungeonSocialMuipData" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class CustomDungeonBatchBriefMuipData(betterproto.Message):
    brief_list: List["CustomDungeonBriefMuipData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeBlueprintBriefMuipData(betterproto.Message):
    share_code: str = betterproto.string_field(1)
    owner_uid: int = betterproto.uint32_field(2)
    module_id: int = betterproto.uint32_field(3)
    scene_id: int = betterproto.uint32_field(4)
    block_id: int = betterproto.uint32_field(5)
    is_allow_copy: bool = betterproto.bool_field(6)
    create_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeBlueprintBatchBriefMuipData(betterproto.Message):
    brief_list: List["HomeBlueprintBriefMuipData"] = betterproto.message_field(1)
    not_exist_share_code_list: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ContentAuditInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)
    content: str = betterproto.string_field(2)
    submit_count: int = betterproto.uint32_field(3)
    audit_state: "AuditState" = betterproto.enum_field(4)
    submit_limit: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ContentAuditData(betterproto.Message):
    type: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    auto_pass_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ContentAuditField(betterproto.Message):
    segment_list: List["ContentAuditData"] = betterproto.message_field(1)
    name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ContentAuditAuxiliaryField(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class NicknameSignatureAuditData(betterproto.Message):
    aid: str = betterproto.string_field(1)
    entity_id: str = betterproto.string_field(2)
    lang: str = betterproto.string_field(3)
    queue_key: str = betterproto.string_field(4)
    region: str = betterproto.string_field(5)
    uid: int = betterproto.uint32_field(6)
    audit_field_list: List["ContentAuditField"] = betterproto.message_field(7)
    aux_field_list: List["ContentAuditAuxiliaryField"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ActivityDungeonAvatar(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    is_trial: bool = betterproto.bool_field(2)
    costume_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgChallengeData(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    challenge_type: int = betterproto.uint32_field(2)
    param_list: List[int] = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgDuelExtra(betterproto.Message):
    card_id_list: List[int] = betterproto.uint32_field(1)
    field_id: int = betterproto.uint32_field(2)
    card_back_id: int = betterproto.uint32_field(3)
    card_face_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    challenge_list: List["GcgChallengeData"] = betterproto.message_field(5)
    score: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HitCollision(betterproto.Message):
    hit_collider_type: "HitColliderType" = betterproto.enum_field(8)
    hit_point: "Vector" = betterproto.message_field(7)
    attackee_hit_force_angle: float = betterproto.float_field(2)
    hit_dir: "Vector" = betterproto.message_field(13)
    attackee_hit_entity_angle: float = betterproto.float_field(15)
    hit_box_index: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class AttackHitEffectResult(betterproto.Message):
    hit_halt_time_scale: float = betterproto.float_field(8)
    original_hit_eff_level: int = betterproto.uint32_field(12)
    air_strength: float = betterproto.float_field(15)
    hit_eff_level: int = betterproto.uint32_field(2)
    hit_halt_time: float = betterproto.float_field(13)
    retreat_strength: float = betterproto.float_field(7)


@dataclass(eq=False, repr=False)
class AbilityIdentifier(betterproto.Message):
    modifier_owner_id: int = betterproto.uint32_field(2)
    instanced_modifier_id: int = betterproto.uint32_field(9)
    instanced_ability_id: int = betterproto.uint32_field(10)
    is_serverbuff_modifier: bool = betterproto.bool_field(6)
    ability_caster_id: int = betterproto.uint32_field(15)
    local_id: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class AttackResult(betterproto.Message):
    is_resist_text: bool = betterproto.bool_field(1858)
    create_count_sync_to_server: int = betterproto.uint32_field(1011)
    amplify_reaction_type: int = betterproto.uint32_field(2005)
    endure_break: int = betterproto.uint32_field(7)
    element_type: int = betterproto.uint32_field(5)
    element_durability_attenuation: float = betterproto.float_field(425)
    defense_id: int = betterproto.uint32_field(15)
    attack_timestamp_ms: int = betterproto.uint32_field(1188)
    bullet_fly_time_ms: int = betterproto.uint32_field(91)
    is_crit: bool = betterproto.bool_field(13)
    element_amplify_rate: float = betterproto.float_field(900)
    attack_count: int = betterproto.uint32_field(1564)
    critical_rand: int = betterproto.uint32_field(1664)
    hit_pos_type: int = betterproto.uint32_field(2)
    anim_event_id: str = betterproto.string_field(4)
    hit_eff_result: "AttackHitEffectResult" = betterproto.message_field(8)
    damage_shield: float = betterproto.float_field(1202)
    endure_delta: float = betterproto.float_field(430)
    resolved_dir: "Vector" = betterproto.message_field(1)
    damage: float = betterproto.float_field(6)
    addhurt_reaction_type: int = betterproto.uint32_field(1887)
    hashed_anim_event_id: int = betterproto.uint32_field(278)
    use_gadget_damage_action: bool = betterproto.bool_field(1418)
    hit_retreat_angle_compat: int = betterproto.int32_field(9)
    ability_identifier: "AbilityIdentifier" = betterproto.message_field(14)
    attacker_id: int = betterproto.uint32_field(11)
    mute_element_hurt: bool = betterproto.bool_field(1530)
    target_type: int = betterproto.uint32_field(1366)
    hit_collision: "HitCollision" = betterproto.message_field(10)
    gadget_damage_action_idx: int = betterproto.uint32_field(1110)


@dataclass(eq=False, repr=False)
class EvtBeingHitInfo(betterproto.Message):
    peer_id: int = betterproto.uint32_field(6)
    attack_result: "AttackResult" = betterproto.message_field(7)
    frame_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class EvtHittingOtherInfo(betterproto.Message):
    attack_result: "AttackResult" = betterproto.message_field(2)
    peer_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EvtBeingHitNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(6)
    being_hit_info: "EvtBeingHitInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EvtAnimatorParameterInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    is_server_cache: bool = betterproto.bool_field(5)
    value: "AnimatorParameterValueInfo" = betterproto.message_field(7)
    name_id: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class EvtAnimatorParameterNotify(betterproto.Message):
    animator_param_info: "EvtAnimatorParameterInfo" = betterproto.message_field(12)
    forward_type: "ForwardType" = betterproto.enum_field(14)


@dataclass(eq=False, repr=False)
class AbilityArgument(betterproto.Message):
    int_arg: int = betterproto.uint32_field(5, group="arg")
    float_arg: float = betterproto.float_field(15, group="arg")
    str_arg: str = betterproto.string_field(11, group="arg")


@dataclass(eq=False, repr=False)
class HostPlayerNotify(betterproto.Message):
    host_peer_id: int = betterproto.uint32_field(13)
    host_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EvtDoSkillSuccNotify(betterproto.Message):
    caster_id: int = betterproto.uint32_field(13)
    forward_type: "ForwardType" = betterproto.enum_field(10)
    forward: "Vector" = betterproto.message_field(15)
    skill_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EvtCreateGadgetNotify(betterproto.Message):
    is_async_load: bool = betterproto.bool_field(8)
    camp_type: int = betterproto.uint32_field(5)
    sight_group_with_owner: bool = betterproto.bool_field(10)
    target_entity_id_list: List[int] = betterproto.uint32_field(889)
    forward_type: "ForwardType" = betterproto.enum_field(12)
    entity_id: int = betterproto.uint32_field(2)
    target_entity_id: int = betterproto.uint32_field(3)
    camp_id: int = betterproto.uint32_field(15)
    guid: int = betterproto.uint64_field(6)
    init_euler_angles: "Vector" = betterproto.message_field(13)
    target_lock_point_index: int = betterproto.uint32_field(11)
    target_lock_point_index_list: List[int] = betterproto.uint32_field(1920)
    init_pos: "Vector" = betterproto.message_field(4)
    owner_entity_id: int = betterproto.uint32_field(9)
    room_id: int = betterproto.uint32_field(7)
    is_peer_id_from_player: bool = betterproto.bool_field(25)
    prop_owner_entity_id: int = betterproto.uint32_field(1)
    is_true_life_time_by_owner: bool = betterproto.bool_field(379)
    config_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EvtDestroyGadgetNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(5)
    entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EvtFaceToEntityNotify(betterproto.Message):
    face_entity_id: int = betterproto.uint32_field(5)
    forward_type: "ForwardType" = betterproto.enum_field(9)
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EvtFaceToDirInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(12)
    face_dir: "Vector" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class EvtFaceToDirNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(13)
    evt_face_to_dir_info: "EvtFaceToDirInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class EvtCostStaminaNotify(betterproto.Message):
    skill_id: int = betterproto.uint32_field(6)
    cost_stamina: float = betterproto.float_field(11)


@dataclass(eq=False, repr=False)
class EvtSetAttackTargetInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(11)
    select_point_index: int = betterproto.uint32_field(6)
    attack_target_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EvtSetAttackTargetNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_set_attack_target_info: "EvtSetAttackTargetInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class EvtAnimatorStateChangedInfo(betterproto.Message):
    face_angle_compact: int = betterproto.int32_field(14)
    to_state_hash: int = betterproto.uint32_field(5)
    normalized_time_compact: int = betterproto.uint32_field(9)
    layer: int = betterproto.uint32_field(2)
    pos: "Vector" = betterproto.message_field(13)
    fade_duration: float = betterproto.float_field(3)
    force_sync: bool = betterproto.bool_field(1)
    entity_id: int = betterproto.uint32_field(15)
    handle_animator_state_immediately: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class EvtCompensatePosDiffInfo(betterproto.Message):
    cur_pos: "Vector" = betterproto.message_field(14)
    entity_id: int = betterproto.uint32_field(11)
    face_angle_compact: int = betterproto.int32_field(10)
    cur_hash: int = betterproto.uint32_field(4)
    normalized_time_compact: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EvtMonsterDoBlink(betterproto.Message):
    target_rot: "Vector" = betterproto.message_field(3)
    target_pos: "Vector" = betterproto.message_field(7)
    entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EvtFixedRushMove(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)
    speed: float = betterproto.float_field(3)
    need_set_is_in_air: bool = betterproto.bool_field(7)
    animator_state_id_list: List[int] = betterproto.uint32_field(2)
    target_pos: "Vector" = betterproto.message_field(9)
    check_animator_state_on_exit_only: bool = betterproto.bool_field(6)
    override_collider: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class EvtSyncTransform(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)
    entity_pos: "Vector" = betterproto.message_field(6)
    entity_rot: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EvtLightCoreMove(betterproto.Message):
    target_pos: "Vector" = betterproto.message_field(15)
    acelerate: float = betterproto.float_field(11)
    entity_id: int = betterproto.uint32_field(5)
    max_absorb_time: float = betterproto.float_field(10)
    speed: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class EvtGrapplingHookMove(betterproto.Message):
    acceleration: float = betterproto.float_field(1)
    animator_state_id_list: List[int] = betterproto.uint32_field(2)
    entity_id: int = betterproto.uint32_field(3)
    need_set_is_in_air: bool = betterproto.bool_field(13)
    speed: float = betterproto.float_field(12)
    max_speed: float = betterproto.float_field(8)
    check_animator_state_on_exit_only: bool = betterproto.bool_field(11)
    override_collider: str = betterproto.string_field(14)
    target_pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class EvtAnimatorStateChangedNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(3)
    evt_animator_state_changed_info: "EvtAnimatorStateChangedInfo" = (
        betterproto.message_field(10)
    )


@dataclass(eq=False, repr=False)
class EvtRushMoveInfo(betterproto.Message):
    state_name_hash: int = betterproto.int32_field(11)
    rush_to_pos: "Vector" = betterproto.message_field(9)
    rush_attack_target_pos: "Vector" = betterproto.message_field(8)
    entity_id: int = betterproto.uint32_field(4)
    time_range: float = betterproto.float_field(15)
    velocity: "Vector" = betterproto.message_field(6)
    pos: "Vector" = betterproto.message_field(2)
    face_angle_compact: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class EvtMotionInfoDuringSteerAttack(betterproto.Message):
    face_dir: "Vector" = betterproto.message_field(4)
    velocity: "Vector" = betterproto.message_field(3)
    pos: "Vector" = betterproto.message_field(1)
    entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EvtCombatSteerMotionInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(12)
    velocity: "Vector" = betterproto.message_field(10)
    entity_id: int = betterproto.uint32_field(4)
    face_dir: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EvtCombatForceSetPosInfo(betterproto.Message):
    ice_id: int = betterproto.uint32_field(9)
    collider_entity_id: int = betterproto.uint32_field(10)
    entity_id: int = betterproto.uint32_field(6)
    target_pos: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EvtSyncEntityPositionInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(10)
    normalized_time_compact: int = betterproto.uint32_field(13)
    state_hash: int = betterproto.uint32_field(8)
    face_angle_compact: int = betterproto.int32_field(7)
    pos: "Vector" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class EvtRushMoveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(1)
    evt_rush_move_info: "EvtRushMoveInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class EvtBulletHitNotify(betterproto.Message):
    single_bullet_id: int = betterproto.uint32_field(8)
    hit_point: "Vector" = betterproto.message_field(15)
    hit_normal: "Vector" = betterproto.message_field(11)
    hit_box_index: int = betterproto.int32_field(9)
    hit_entity_id: int = betterproto.uint32_field(3)
    entity_id: int = betterproto.uint32_field(5)
    forward_peer: int = betterproto.uint32_field(7)
    forward_type: "ForwardType" = betterproto.enum_field(2)
    hit_collider_type: "HitColliderType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class EvtBulletDeactiveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(6)
    entity_id: int = betterproto.uint32_field(9)
    disappear_pos: "Vector" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EvtEntityStartDieEndNotify(betterproto.Message):
    immediately: bool = betterproto.bool_field(15)
    die_state_flag: int = betterproto.uint32_field(12)
    entity_id: int = betterproto.uint32_field(8)
    forward_type: "ForwardType" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class EvtBulletMoveNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(14)
    cur_pos: "Vector" = betterproto.message_field(1)
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EvtAvatarEnterFocusNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    can_move: bool = betterproto.bool_field(10)
    enter_holding_focus_shoot: bool = betterproto.bool_field(13)
    disable_aim_layer: bool = betterproto.bool_field(6)
    use_auto_focus: bool = betterproto.bool_field(5)
    fast_focus: bool = betterproto.bool_field(3)
    show_cross_hair: bool = betterproto.bool_field(12)
    enter_normal_focus_shoot: bool = betterproto.bool_field(14)
    forward_type: "ForwardType" = betterproto.enum_field(8)
    focus_forward: "Vector" = betterproto.message_field(7)
    disable_anim: bool = betterproto.bool_field(9)
    use_focus_sticky: bool = betterproto.bool_field(15)
    use_gyro: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class EvtAvatarExitFocusNotify(betterproto.Message):
    finish_forward: "Vector" = betterproto.message_field(12)
    forward_type: "ForwardType" = betterproto.enum_field(11)
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EvtAvatarUpdateFocusNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(7)
    focus_forward: "Vector" = betterproto.message_field(11)
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AuthorityChange(betterproto.Message):
    entity_authority_info: "EntityAuthorityInfo" = betterproto.message_field(5)
    authority_peer_id: int = betterproto.uint32_field(3)
    entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EntityAuthorityChangeNotify(betterproto.Message):
    authority_change_list: List["AuthorityChange"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class AvatarBuffAddNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(10)
    buff_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AvatarBuffDelNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(10)
    buff_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MonsterAlertChangeNotify(betterproto.Message):
    avatar_entity_id: int = betterproto.uint32_field(15)
    monster_entity_list: List[int] = betterproto.uint32_field(5)
    is_alert: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MonsterForceAlertNotify(betterproto.Message):
    monster_entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AvatarEnterElementViewNotify(betterproto.Message):
    is_triggerd: bool = betterproto.bool_field(3)
    avatar_entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TriggerCreateGadgetToEquipPartNotify(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    entity_id: int = betterproto.uint32_field(13)
    equip_part: str = betterproto.string_field(14)
    gadget_entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EvtEntityRenderersChangedNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(8)
    is_server_cache: bool = betterproto.bool_field(3)
    renderer_changed_info: "EntityRendererChangedInfo" = betterproto.message_field(5)
    entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class AnimatorForceSetAirMoveNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)
    in_air_move: bool = betterproto.bool_field(13)
    forward_type: "ForwardType" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class AiSkillCdInfo(betterproto.Message):
    skill_cd_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    skill_group_cd_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class EvtAiSyncSkillCdNotify(betterproto.Message):
    ai_cd_map: Dict[int, "AiSkillCdInfo"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EvtBeingHitsCombineNotify(betterproto.Message):
    forward_type: "ForwardType" = betterproto.enum_field(11)
    evt_being_hit_info_list: List["EvtBeingHitInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class EvtAvatarSitDownNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(9)
    entity_id: int = betterproto.uint32_field(4)
    chair_id: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class EvtAvatarStandUpNotify(betterproto.Message):
    chair_id: int = betterproto.uint64_field(11)
    perform_id: int = betterproto.int32_field(6)
    direction: int = betterproto.int32_field(1)
    entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityReq(betterproto.Message):
    massive_entity_list: List["ClientMassiveEntity"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class CreateMassiveEntityNotify(betterproto.Message):
    massive_entity_list: List["ServerMassiveEntity"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class DestroyMassiveEntityNotify(betterproto.Message):
    massive_entity_list: List["ClientMassiveEntity"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class MassiveEntityStateChangedNotify(betterproto.Message):
    massive_entity_state_list: List["MassiveEntityState"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TeamEntityInfo(betterproto.Message):
    authority_peer_id: int = betterproto.uint32_field(10)
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(9)
    team_entity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SyncTeamEntityNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(13)
    team_entity_info_list: List["TeamEntityInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class DelTeamEntityNotify(betterproto.Message):
    del_entity_id_list: List[int] = betterproto.uint32_field(15)
    scene_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EvtSyncSkillAnchorPosition(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    skill_anchor_position: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class CombatInvokeEntry(betterproto.Message):
    combat_data: bytes = betterproto.bytes_field(12)
    forward_type: "ForwardType" = betterproto.enum_field(10)
    argument_type: "CombatTypeArgument" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class CombatInvocationsNotify(betterproto.Message):
    invoke_list: List["CombatInvokeEntry"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ServerBuffChangeNotify(betterproto.Message):
    server_buff_change_type: "ServerBuffChangeNotifyServerBuffChangeType" = (
        betterproto.enum_field(7)
    )
    is_creature_buff: bool = betterproto.bool_field(10)
    entity_id_list: List[int] = betterproto.uint32_field(1)
    avatar_guid_list: List[int] = betterproto.uint64_field(12)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class AiThreatInfo(betterproto.Message):
    ai_threat_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class EvtAiSyncCombatThreatInfoNotify(betterproto.Message):
    combat_threat_info_map: Dict[int, "AiThreatInfo"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class MassiveEntityElementOpBatchNotify(betterproto.Message):
    entity_type: int = betterproto.int32_field(6)
    op_idx: int = betterproto.uint32_field(9)
    user_id: int = betterproto.uint32_field(11)
    attacker_id: int = betterproto.uint32_field(3)
    source_element_type: int = betterproto.int32_field(12)
    reaction_source_type: int = betterproto.int32_field(4)
    attack_element_durability: float = betterproto.float_field(7)
    shape_sphere: "ShapeSphere" = betterproto.message_field(10, group="check_shape")
    shape_box: "ShapeBox" = betterproto.message_field(2, group="check_shape")


@dataclass(eq=False, repr=False)
class AiSyncInfo(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)
    is_self_killing: bool = betterproto.bool_field(8)
    has_path_to_target: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class EntityAiSyncNotify(betterproto.Message):
    local_avatar_alerted_monster_list: List[int] = betterproto.uint32_field(15)
    info_list: List["AiSyncInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class LuaSetOptionNotify(betterproto.Message):
    lua_set_param: str = betterproto.string_field(8)
    option_type: "LuaSetOptionNotifyLuaOptionType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class EvtDestroyServerGadgetNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EntityAiKillSelfNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EvtAvatarLockChairReq(betterproto.Message):
    chair_id: int = betterproto.uint64_field(5)
    position: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class EvtAvatarLockChairRsp(betterproto.Message):
    chair_id: int = betterproto.uint64_field(14)
    entity_id: int = betterproto.uint32_field(15)
    position: "Vector" = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ReportFightAntiCheatNotify(betterproto.Message):
    cheat_count: int = betterproto.uint32_field(8)
    cheat_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EvtBeingHealedNotify(betterproto.Message):
    target_id: int = betterproto.uint32_field(1)
    real_heal_amount: float = betterproto.float_field(5)
    source_id: int = betterproto.uint32_field(13)
    heal_amount: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class EvtLocalGadgetOwnerLeaveSceneNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntryHead(betterproto.Message):
    modifier_config_local_id: int = betterproto.int32_field(7)
    is_serverbuff_modifier: bool = betterproto.bool_field(2)
    instanced_ability_id: int = betterproto.uint32_field(1)
    instanced_modifier_id: int = betterproto.uint32_field(12)
    local_id: int = betterproto.int32_field(10)
    server_buff_uid: int = betterproto.uint32_field(14)
    target_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityInvokeEntry(betterproto.Message):
    argument_type: "AbilityInvokeArgument" = betterproto.enum_field(1)
    head: "AbilityInvokeEntryHead" = betterproto.message_field(2)
    forward_peer: int = betterproto.uint32_field(4)
    event_id: int = betterproto.uint32_field(12)
    forward_type: "ForwardType" = betterproto.enum_field(3)
    ability_data: bytes = betterproto.bytes_field(15)
    total_tick_time: float = betterproto.double_field(14)
    entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class AbilityInvocationFixedNotify(betterproto.Message):
    invoke6_th: "AbilityInvokeEntry" = betterproto.message_field(14)
    invoke5_th: "AbilityInvokeEntry" = betterproto.message_field(8)
    invoke4_th: "AbilityInvokeEntry" = betterproto.message_field(1)
    invoke2_nd: "AbilityInvokeEntry" = betterproto.message_field(5)
    invoke1_st: "AbilityInvokeEntry" = betterproto.message_field(10)
    invoke3_rd: "AbilityInvokeEntry" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class AbilityInvocationsNotify(betterproto.Message):
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityMetaReInitOverrideMap(betterproto.Message):
    override_map: List["AbilityScalarValueEntry"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class AbilityMetaAddAbility(betterproto.Message):
    ability: "AbilityAppliedAbility" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class ModifierProperty(betterproto.Message):
    key: "AbilityString" = betterproto.message_field(15)
    value: float = betterproto.float_field(5)


@dataclass(eq=False, repr=False)
class AbilityMetaModifierChange(betterproto.Message):
    attached_instanced_modifier: "AbilityAttachedModifier" = betterproto.message_field(
        7
    )
    server_buff_uid: int = betterproto.uint32_field(4)
    is_attached_parent_ability: bool = betterproto.bool_field(10)
    action: "ModifierAction" = betterproto.enum_field(13)
    modifier_local_id: int = betterproto.int32_field(2)
    parent_ability_name: "AbilityString" = betterproto.message_field(1)
    is_mute_remote: bool = betterproto.bool_field(6)
    apply_entity_id: int = betterproto.uint32_field(5)
    properties: List["ModifierProperty"] = betterproto.message_field(3)
    parent_ability_override: "AbilityString" = betterproto.message_field(11)
    is_durability_zero: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class AbilityMetaDurabilityIsZero(betterproto.Message):
    is_zero: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class AbilityMetaSpecialFloatArgument(betterproto.Message):
    argument_value: float = betterproto.float_field(14)
    is_on: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class AbilityMetaAddOrGetAbilityAndTrigger(betterproto.Message):
    ability_name: "AbilityString" = betterproto.message_field(13)
    trigger_argument: float = betterproto.float_field(3)
    ability_override: "AbilityString" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class AbilityMetaSetKilledState(betterproto.Message):
    killed: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class AbilityMetaSetAbilityTrigger(betterproto.Message):
    trigger_ability_entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AbilityMetaSetModifierApplyEntityId(betterproto.Message):
    apply_entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AbilityMetaModifierDurabilityChange(betterproto.Message):
    reduce_durability: float = betterproto.float_field(6)
    remain_durability: float = betterproto.float_field(15)


@dataclass(eq=False, repr=False)
class AbilityMetaElementReactionVisual(betterproto.Message):
    hit_index: int = betterproto.int32_field(2)
    element_source_type: int = betterproto.uint32_field(12)
    element_reactor_type: int = betterproto.uint32_field(6)
    element_reaction_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AbilityMetaTriggerElementReaction(betterproto.Message):
    hit_index: int = betterproto.int32_field(9)
    element_source_type: int = betterproto.uint32_field(7)
    element_reactor_type: int = betterproto.uint32_field(12)
    trigger_entity_id: int = betterproto.uint32_field(2)
    element_reaction_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityMetaLoseHp(betterproto.Message):
    lose_hp_config_idx: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AbilityMetaSetPoseParameter(betterproto.Message):
    value: "AnimatorParameterValueInfoPair" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AbilityMetaUpdateBaseReactionDamage(betterproto.Message):
    source_caster_id: int = betterproto.uint32_field(15)
    ability_name: "AbilityString" = betterproto.message_field(1)
    global_value_key: "AbilityString" = betterproto.message_field(4)
    reaction_type: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AbilityActionTriggerAbility(betterproto.Message):
    other_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AbilityActionSetCrashDamage(betterproto.Message):
    hit_pos: "Vector" = betterproto.message_field(2)
    damage: float = betterproto.float_field(15)


@dataclass(eq=False, repr=False)
class AbilityBornType(betterproto.Message):
    rot: "Vector" = betterproto.message_field(2)
    move_dir: "Vector" = betterproto.message_field(14)
    pos: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class AbilityActionSummon(betterproto.Message):
    pos: "Vector" = betterproto.message_field(10)
    rot: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityActionBlink(betterproto.Message):
    rot: "Vector" = betterproto.message_field(11)
    pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class AbilityActionCreateGadget(betterproto.Message):
    room_id: int = betterproto.uint32_field(3)
    rot: "Vector" = betterproto.message_field(8)
    pos: "Vector" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class AbilityActionSetRandomOverrideMapValue(betterproto.Message):
    random_value: float = betterproto.float_field(1)


@dataclass(eq=False, repr=False)
class AbilityActionServerMonsterLog(betterproto.Message):
    param_list: List[int] = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class AbilityActionCreateTile(betterproto.Message):
    rot: "Vector" = betterproto.message_field(3)
    pos: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class AbilityActionDestroyTile(betterproto.Message):
    rot: "Vector" = betterproto.message_field(3)
    pos: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AbilityActionFireAfterImgae(betterproto.Message):
    dir: "Vector" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class AbilityApplyLevelModifier(betterproto.Message):
    apply_entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AbilityActionGenerateElemBall(betterproto.Message):
    room_id: int = betterproto.uint32_field(2)
    pos: "Vector" = betterproto.message_field(7)
    rot: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class AbilityActionDeductStamina(betterproto.Message):
    is_swim: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AbilityActionHitEffect(betterproto.Message):
    trigger_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityActionSetBulletTrackTarget(betterproto.Message):
    chased_entity_id: int = betterproto.uint32_field(1)
    lock_point_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AbilityMixinEmpty(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AbilityMixinAvatarSteerByCamera(betterproto.Message):
    target_dir: "Vector" = betterproto.message_field(7)
    target_pos: "Vector" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AbilityMixinWindZone(betterproto.Message):
    entity_ids: List[int] = betterproto.uint32_field(13)
    zone_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AbilityMixinCostStamina(betterproto.Message):
    is_swim: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AbilityMixinEliteShield(betterproto.Message):
    sub_shield: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class AbilityMixinElementShield(betterproto.Message):
    sub_shield: float = betterproto.float_field(10)
    shield: float = betterproto.float_field(8)
    absorb_type: int = betterproto.uint32_field(1)
    player_num: int = betterproto.uint32_field(4)
    is_shield_broken: bool = betterproto.bool_field(9)
    max_shield: float = betterproto.float_field(12)


@dataclass(eq=False, repr=False)
class AbilityMixinGlobalShield(betterproto.Message):
    is_create_effect: bool = betterproto.bool_field(4)
    sub_shield: float = betterproto.float_field(7)
    height_offset: float = betterproto.float_field(5)
    avatar_id: int = betterproto.uint32_field(11)
    max_shield: float = betterproto.float_field(10)
    shield_effect_name: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class AbilityMixinShieldBar(betterproto.Message):
    player_num: int = betterproto.uint32_field(14)
    max_shield: float = betterproto.float_field(15)
    shield: float = betterproto.float_field(12)
    element_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawner(betterproto.Message):
    add_signal: "AbilityMixinWindSeedSpawnerAddSignal" = betterproto.message_field(
        2, group="cmd"
    )
    refresh_seed: "AbilityMixinWindSeedSpawnerRefreshSeed" = betterproto.message_field(
        15, group="cmd"
    )
    catch_seed: "AbilityMixinWindSeedSpawnerCatchSeed" = betterproto.message_field(
        11, group="cmd"
    )


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerAddSignal(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerRefreshSeed(betterproto.Message):
    pos_list: List["Vector"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AbilityMixinWindSeedSpawnerCatchSeed(betterproto.Message):
    entity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AbilityMixinDoActionByElementReaction(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AbilityMixinFieldEntityCountChange(betterproto.Message):
    field_entity_count: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AbilityMixinScenePropSync(betterproto.Message):
    delete_id_list: List[int] = betterproto.int64_field(5)
    is_clear_all: bool = betterproto.bool_field(12)
    massive_prop_list: List["MassivePropSyncInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class AbilityMixinWidgetMpSupport(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class AbilityMixinDoActionBySelfModifierElementDurabilityRatio(betterproto.Message):
    last_duability_ratio: float = betterproto.float_field(9)


@dataclass(eq=False, repr=False)
class AbilityMixinFireworksLauncher(betterproto.Message):
    invoke_type: int = betterproto.uint32_field(2)
    start_count_down_time: int = betterproto.uint32_field(3)
    fired_bullet_count: int = betterproto.uint32_field(1)
    phase: int = betterproto.uint32_field(6)
    fireworks_config: List[int] = betterproto.uint32_field(4)
    turn_index: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AbilityMixinUgcTimeControl(betterproto.Message):
    start_move_time_ms: int = betterproto.uint64_field(13)
    start_move_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AbilityMixinUiInteract(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AbilityMixinAvatarCombat(betterproto.Message):
    is_enter_combat: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class AbilityMixinShootFromCamera(betterproto.Message):
    init_pos: "Vector" = betterproto.message_field(13)
    forward: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AbilityMixinEraseBrickActivity(betterproto.Message):
    data: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AttackResultCreateCount(betterproto.Message):
    create_count_list: List[int] = betterproto.uint32_field(10)
    create_count_no_cost_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ClientAbilityInitBeginNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClientAbilityInitFinishNotify(betterproto.Message):
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(14)
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AbilityInvocationFailNotify(betterproto.Message):
    reason: str = betterproto.string_field(7)
    entity_id: int = betterproto.uint32_field(13)
    invoke: "AbilityInvokeEntry" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EntityAbilityInvokeEntry(betterproto.Message):
    entity_id: int = betterproto.uint32_field(8)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ClientAbilitiesInitFinishCombineNotify(betterproto.Message):
    entity_invoke_list: List["EntityAbilityInvokeEntry"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WindSeedClientNotify(betterproto.Message):
    refresh_notify: "WindSeedClientNotifyRefreshNotify" = betterproto.message_field(
        14, group="notify"
    )
    add_wind_bullet_notify: "WindSeedClientNotifyAddWindBulletNotify" = (
        betterproto.message_field(6, group="notify")
    )
    area_notify: "WindSeedClientNotifyAreaNotify" = betterproto.message_field(
        4, group="notify"
    )


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyRefreshNotify(betterproto.Message):
    refresh_num: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyAddWindBulletNotify(betterproto.Message):
    seed_pos: "Vector" = betterproto.message_field(6)
    catch_player_uid: int = betterproto.uint32_field(8)
    seed_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WindSeedClientNotifyAreaNotify(betterproto.Message):
    area_code: bytes = betterproto.bytes_field(5)
    area_id: int = betterproto.uint32_field(10)
    area_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AbilityChangeNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(1)
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ClientAbilityChangeNotify(betterproto.Message):
    is_init_hash: bool = betterproto.bool_field(9)
    entity_id: int = betterproto.uint32_field(2)
    invokes: List["AbilityInvokeEntry"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerUpdateGlobalValueNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)
    update_type: "ServerUpdateGlobalValueNotifyUpdateType" = betterproto.enum_field(13)
    delta: float = betterproto.float_field(3)
    key_hash: int = betterproto.uint32_field(10)
    value: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class ServerGlobalValueChangeNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(6)
    value: float = betterproto.float_field(12)
    key_hash: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ClientAiStateNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)
    cur_tactic: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ServerCombatEndNotify(betterproto.Message):
    combat_end_type_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ClientRemoveCombatEndModifierNotify(betterproto.Message):
    combat_end_type_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class Achievement(betterproto.Message):
    finish_timestamp: int = betterproto.uint32_field(11)
    status: "AchievementStatus" = betterproto.enum_field(13)
    cur_progress: int = betterproto.uint32_field(12)
    id: int = betterproto.uint32_field(14)
    total_progress: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AchievementAllDataNotify(betterproto.Message):
    achievement_list: List["Achievement"] = betterproto.message_field(4)
    reward_taken_goal_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AchievementUpdateNotify(betterproto.Message):
    achievement_list: List["Achievement"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class TakeAchievementRewardReq(betterproto.Message):
    id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TakeAchievementRewardRsp(betterproto.Message):
    id_list: List[int] = betterproto.uint32_field(7)
    item_list: List["ItemParam"] = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class TakeAchievementGoalRewardReq(betterproto.Message):
    id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeAchievementGoalRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    id_list: List[int] = betterproto.uint32_field(12)
    item_list: List["ItemParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GalleryFlowerStartParam(betterproto.Message):
    target_score: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GalleryStartNotify(betterproto.Message):
    end_time: int = betterproto.uint32_field(6)
    player_count: int = betterproto.uint32_field(11)
    owner_uid: int = betterproto.uint32_field(9)
    gallery_id: int = betterproto.uint32_field(13)
    start_time: int = betterproto.uint32_field(5)
    flower_start_param: "GalleryFlowerStartParam" = betterproto.message_field(
        15, group="detail"
    )


@dataclass(eq=False, repr=False)
class GalleryBalloonShootNotify(betterproto.Message):
    trigger_entity_id: int = betterproto.uint32_field(12)
    gallery_id: int = betterproto.uint32_field(5)
    combo: int = betterproto.uint32_field(14)
    combo_disable_time: int = betterproto.uint64_field(6)
    add_score: int = betterproto.int32_field(11)
    cur_score: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GalleryBalloonScoreNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(9)
    uid_score_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class BalloonSettleInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(3)
    shoot_count: int = betterproto.uint32_field(12)
    max_combo: int = betterproto.uint32_field(9)
    final_score: int = betterproto.uint32_field(7)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GalleryStopNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FallSettleInfo(betterproto.Message):
    catch_count: int = betterproto.uint32_field(15)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(13)
    uid: int = betterproto.uint32_field(14)
    flower_ring_catch_count_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    remain_time: int = betterproto.uint32_field(10)
    final_score: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GalleryFallCatchNotify(betterproto.Message):
    cur_score: int = betterproto.uint32_field(6)
    time_cost: int = betterproto.uint32_field(11)
    ball_catch_count_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    add_score: int = betterproto.uint32_field(1)
    is_ground: bool = betterproto.bool_field(12)
    gallery_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FallPlayerBrief(betterproto.Message):
    uid: int = betterproto.uint32_field(13)
    is_ground: bool = betterproto.bool_field(5)
    score: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GalleryFallScoreNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(7)
    uid_brief_map: Dict[int, "FallPlayerBrief"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class BalloonPlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(15)
    cur_score: int = betterproto.uint32_field(2)
    combo_disable_time: int = betterproto.uint32_field(14)
    combo: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FallPlayerInfo(betterproto.Message):
    time_cost: int = betterproto.uint32_field(11)
    uid: int = betterproto.uint32_field(9)
    ball_catch_count_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_score: int = betterproto.uint32_field(7)
    is_ground: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class SceneGalleryBalloonInfo(betterproto.Message):
    scene_player_balloon_info_map: Dict[
        int, "BalloonPlayerInfo"
    ] = betterproto.map_field(14, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    end_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SceneGalleryFallInfo(betterproto.Message):
    scene_player_fall_info_map: Dict[int, "FallPlayerInfo"] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneGalleryFlowerInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(7)
    target_score: int = betterproto.uint32_field(13)
    cur_score: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneGalleryBulletInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(1)
    hit_count_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SceneGalleryBrokenFloorInfo(betterproto.Message):
    fall_count_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    end_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneGalleryHideAndSeekInfo(betterproto.Message):
    visible_uid_list: List[int] = betterproto.uint32_field(13)
    caught_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneGalleryBuoyantCombatInfo(betterproto.Message):
    score: int = betterproto.uint32_field(6)
    kill_special_monster_count: int = betterproto.uint32_field(1)
    kill_monster_count: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneGalleryProgressInfo(betterproto.Message):
    progress_stage_list: List[int] = betterproto.uint32_field(8)
    key: str = betterproto.string_field(11)
    progress: int = betterproto.uint32_field(5)
    ui_form: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SceneGalleryBounceConjuringInfo(betterproto.Message):
    total_destroyed_machine_count: int = betterproto.uint32_field(4)
    total_score: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SceneGalleryHandballInfo(betterproto.Message):
    ball_place_info: "PlaceInfo" = betterproto.message_field(9)
    is_have_ball: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class SceneGallerySumoInfo(betterproto.Message):
    score: int = betterproto.uint32_field(2)
    kill_normal_mosnter_num: int = betterproto.uint32_field(15)
    kill_elite_monster_num: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneGallerySalvagePreventInfo(betterproto.Message):
    monster_count: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneGallerySalvageEscortInfo(betterproto.Message):
    max_box_count: int = betterproto.uint32_field(14)
    max_monster_count: int = betterproto.uint32_field(3)
    box_count: int = betterproto.uint32_field(7)
    monster_count: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SceneGalleryCrystalLinkInfo(betterproto.Message):
    score: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneGalleryIrodoriMasterInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(8)
    difficulty: int = betterproto.uint32_field(1)
    is_cg_viewed: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SceneGalleryHomeBalloonInfo(betterproto.Message):
    score: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneGalleryLuminanceStoneChallengeInfo(betterproto.Message):
    kill_monster_count: int = betterproto.uint32_field(5)
    score: int = betterproto.uint32_field(3)
    clean_mud_count: int = betterproto.uint32_field(2)
    kill_special_monster_count: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SceneGalleryHomeSeekFurnitureInfo(betterproto.Message):
    cur_tide_left_num: int = betterproto.uint32_field(6)
    player_score_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_tide_duration_time: int = betterproto.uint32_field(12)
    cur_tide_total_num: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneGalleryIslandPartyDownHillInfo(betterproto.Message):
    total_kill_monster_count: int = betterproto.uint32_field(14)
    start_source: "GalleryStartSource" = betterproto.enum_field(15)
    max_kill_monster_count: int = betterproto.uint32_field(5)
    coin: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SceneGallerySummerTimeV2BoatInfo(betterproto.Message):
    param1: int = betterproto.uint32_field(15)
    param3: int = betterproto.uint32_field(3)
    used_time: int = betterproto.uint32_field(11)
    param2: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneGalleryIslandPartyRaftInfo(betterproto.Message):
    coin: int = betterproto.uint32_field(6)
    start_source: "GalleryStartSource" = betterproto.enum_field(7)
    component: int = betterproto.uint32_field(1)
    fuel: int = betterproto.uint32_field(15)
    point_id: int = betterproto.uint32_field(12)
    raft_entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneGalleryIslandPartySailInfo(betterproto.Message):
    max_clean_progress: int = betterproto.uint32_field(14)
    clean_progress: int = betterproto.uint32_field(10)
    start_source: "GalleryStartSource" = betterproto.enum_field(1)
    kill_progress: int = betterproto.uint32_field(11)
    coin: int = betterproto.uint32_field(15)
    stage: "IslandPartySailStage" = betterproto.enum_field(12)
    max_kill_progress: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SceneGalleryInstableSprayBuffInfo(betterproto.Message):
    buff_id: int = betterproto.uint32_field(6)
    buff_end_time: int = betterproto.uint64_field(9)
    buff_max_time: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class SceneGalleryInstaleSprayInfo(betterproto.Message):
    score: int = betterproto.uint32_field(5)
    buff_info_list: List[
        "SceneGalleryInstableSprayBuffInfo"
    ] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SceneGalleryTreasureSeelieInfo(betterproto.Message):
    progress: int = betterproto.uint32_field(15)
    goal: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SceneGalleryWindFieldInfo(betterproto.Message):
    killed_monster_num: int = betterproto.uint32_field(5)
    challenge_ball_max_count: int = betterproto.uint32_field(12)
    show_id: int = betterproto.uint32_field(15)
    challenge_total_time: int = betterproto.uint32_field(4)
    challenge_ball_cur_count: int = betterproto.uint32_field(9)
    coin_num: int = betterproto.uint32_field(1)
    challenge_timestamp: int = betterproto.uint32_field(13)
    element_ball_num: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneGalleryFungusFighterTrainingInfo(betterproto.Message):
    max_monster_count: int = betterproto.uint32_field(4)
    killed_monster_count: int = betterproto.uint32_field(9)
    buff_start_time: int = betterproto.uint32_field(13)
    buff_id: int = betterproto.uint32_field(1)
    max_skill_count: int = betterproto.uint32_field(10)
    buff_last_time: int = betterproto.uint32_field(14)
    rest_skill_count: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SceneGalleryFungusFighterCaptureInfo(betterproto.Message):
    is_hide_progress: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class SceneGalleryEffigyChallengeV2Info(betterproto.Message):
    killed_monster_cnt: int = betterproto.uint32_field(10)
    total_target_kill_cnt: int = betterproto.uint32_field(15)
    scene_start_time: int = betterproto.uint32_field(14)
    t_remain_use_time: int = betterproto.uint32_field(6)
    boss_violent_level: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneGalleryCharAmusementInfo(betterproto.Message):
    is_last_level: bool = betterproto.bool_field(2)
    max_score: int = betterproto.uint32_field(9)
    cur_score: int = betterproto.uint32_field(14)
    is_finish: bool = betterproto.bool_field(10)
    is_success: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class SceneGalleryInfo(betterproto.Message):
    stage: "GalleryStageType" = betterproto.enum_field(5)
    progress_info_list: List["SceneGalleryProgressInfo"] = betterproto.message_field(4)
    gallery_id: int = betterproto.uint32_field(2)
    start_time: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(11)
    owner_uid: int = betterproto.uint32_field(9)
    player_count: int = betterproto.uint32_field(1)
    pre_start_end_time: int = betterproto.uint32_field(15)
    balloon_info: "SceneGalleryBalloonInfo" = betterproto.message_field(
        14, group="info"
    )
    fall_info: "SceneGalleryFallInfo" = betterproto.message_field(7, group="info")
    flower_info: "SceneGalleryFlowerInfo" = betterproto.message_field(8, group="info")
    bullet_info: "SceneGalleryBulletInfo" = betterproto.message_field(13, group="info")
    broken_floor_info: "SceneGalleryBrokenFloorInfo" = betterproto.message_field(
        10, group="info"
    )
    hide_and_seek_info: "SceneGalleryHideAndSeekInfo" = betterproto.message_field(
        6, group="info"
    )
    buoyant_combat_info: "SceneGalleryBuoyantCombatInfo" = betterproto.message_field(
        1384, group="info"
    )
    bounce_conjuring_info: "SceneGalleryBounceConjuringInfo" = (
        betterproto.message_field(708, group="info")
    )
    handball_info: "SceneGalleryHandballInfo" = betterproto.message_field(
        1997, group="info"
    )
    sumo_info: "SceneGallerySumoInfo" = betterproto.message_field(811, group="info")
    salvage_prevent_info: "SceneGallerySalvagePreventInfo" = betterproto.message_field(
        1700, group="info"
    )
    salvage_escort_info: "SceneGallerySalvageEscortInfo" = betterproto.message_field(
        759, group="info"
    )
    home_balloon_info: "SceneGalleryHomeBalloonInfo" = betterproto.message_field(
        1034, group="info"
    )
    crystal_link_info: "SceneGalleryCrystalLinkInfo" = betterproto.message_field(
        2004, group="info"
    )
    irodori_master_info: "SceneGalleryIrodoriMasterInfo" = betterproto.message_field(
        1953, group="info"
    )
    luminance_stone_challenge_info: "SceneGalleryLuminanceStoneChallengeInfo" = (
        betterproto.message_field(106, group="info")
    )
    home_seek_furniture_info: "SceneGalleryHomeSeekFurnitureInfo" = (
        betterproto.message_field(1456, group="info")
    )
    island_party_down_hill_info: "SceneGalleryIslandPartyDownHillInfo" = (
        betterproto.message_field(462, group="info")
    )
    summer_time_v2_boat_info: "SceneGallerySummerTimeV2BoatInfo" = (
        betterproto.message_field(296, group="info")
    )
    island_party_raft_info: "SceneGalleryIslandPartyRaftInfo" = (
        betterproto.message_field(1805, group="info")
    )
    island_party_sail_info: "SceneGalleryIslandPartySailInfo" = (
        betterproto.message_field(1133, group="info")
    )
    instable_spray_info: "SceneGalleryInstaleSprayInfo" = betterproto.message_field(
        1196, group="info"
    )
    muqadas_potion_info: "SceneGalleryMuqadasPotionInfo" = betterproto.message_field(
        865, group="info"
    )
    treasure_seelie_info: "SceneGalleryTreasureSeelieInfo" = betterproto.message_field(
        1525, group="info"
    )
    vintage_hunting_info: "SceneGalleryVintageHuntingInfo" = betterproto.message_field(
        254, group="info"
    )
    wind_field_info: "SceneGalleryWindFieldInfo" = betterproto.message_field(
        1080, group="info"
    )
    fungus_fighter_training_info: "SceneGalleryFungusFighterTrainingInfo" = (
        betterproto.message_field(1328, group="info")
    )
    effigy_challenge_info: "SceneGalleryEffigyChallengeV2Info" = (
        betterproto.message_field(882, group="info")
    )
    fungus_fighter_capture_info: "SceneGalleryFungusFighterCaptureInfo" = (
        betterproto.message_field(422, group="info")
    )
    char_amusement_info: "SceneGalleryCharAmusementInfo" = betterproto.message_field(
        1086, group="info"
    )


@dataclass(eq=False, repr=False)
class GetAllSceneGalleryInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllSceneGalleryInfoRsp(betterproto.Message):
    gallery_info_list: List["SceneGalleryInfo"] = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GalleryFlowerCatchNotify(betterproto.Message):
    cur_score: int = betterproto.uint32_field(12)
    add_score: int = betterproto.uint32_field(14)
    gallery_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GalleryPreStartNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(10)
    pre_start_end_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GalleryBulletHitNotify(betterproto.Message):
    hit_count: int = betterproto.uint32_field(14)
    gallery_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GalleryBrokenFloorFallNotify(betterproto.Message):
    fall_count: int = betterproto.uint32_field(3)
    gallery_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class InterruptGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class InterruptGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    gallery_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneGalleryInfoNotify(betterproto.Message):
    gallery_info: "SceneGalleryInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class BuoyantCombatGallerySettleInfo(betterproto.Message):
    gallery_level: int = betterproto.uint32_field(12)
    final_score: int = betterproto.uint32_field(15)
    kill_monster_count: int = betterproto.uint32_field(9)
    kill_target_count: int = betterproto.uint32_field(1)
    kill_special_monster_count: int = betterproto.uint32_field(4)
    gallery_id: int = betterproto.uint32_field(2)
    gallery_multiple: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BounceConjuringGallerySettleInfo(betterproto.Message):
    player_info: "OnlinePlayerInfo" = betterproto.message_field(14)
    destroyed_machine_count: int = betterproto.uint32_field(5)
    fever_count: int = betterproto.uint32_field(6)
    normal_hit_count: int = betterproto.uint32_field(4)
    damage: float = betterproto.float_field(11)
    gadget_count_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    score: int = betterproto.uint32_field(12)
    perfect_hit_count: int = betterproto.uint32_field(8)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GalleryBounceConjuringHitNotify(betterproto.Message):
    add_score: int = betterproto.uint32_field(8)
    is_perfect: bool = betterproto.bool_field(5)
    gallery_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GallerySumoKillMonsterNotify(betterproto.Message):
    kill_normal_mosnter_num: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(7)
    kill_elite_monster_num: int = betterproto.uint32_field(14)
    gallery_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GalleryCrystalLinkKillMonsterNotify(betterproto.Message):
    score: int = betterproto.uint32_field(7)
    gallery_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GalleryCrystalLinkBuffInfoNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(13)
    is_buff_valid: bool = betterproto.bool_field(11)
    buff_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class FishInfo(betterproto.Message):
    free_count: int = betterproto.uint32_field(11)
    into_bag_count: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class FishingScore(betterproto.Message):
    fishing_score: int = betterproto.uint32_field(2)
    is_new_record: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class FishingGallerySettleInfo(betterproto.Message):
    fish_map: Dict[int, "FishInfo"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    fishing_score_list: List["FishingScore"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class RacingGallerySettleInfo(betterproto.Message):
    winner_uid: int = betterproto.uint32_field(6)
    reason: "GalleryStopReason" = betterproto.enum_field(4)
    use_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SalvagePreventGallerySettleInfo(betterproto.Message):
    time_remain: int = betterproto.uint32_field(8)
    reason: "SalvagePreventStopReason" = betterproto.enum_field(7)
    final_score: int = betterproto.uint32_field(13)
    monster_count: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SalvageEscortGallerySettleInfo(betterproto.Message):
    time_remain: int = betterproto.uint32_field(14)
    reason: "SalvageEscortStopReason" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class BalloonGallerySettleInfo(betterproto.Message):
    score: int = betterproto.uint32_field(8)
    reason: "GalleryStopReason" = betterproto.enum_field(14)
    hit_count: int = betterproto.uint32_field(10)
    owner_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class IrodoriMasterGallerySettleInfo(betterproto.Message):
    reason: "GalleryStopReason" = betterproto.enum_field(15)
    is_finish: bool = betterproto.bool_field(11)
    finish_time: int = betterproto.uint32_field(14)
    difficult: int = betterproto.uint32_field(6)
    level_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PhotoGallerySettleInfo(betterproto.Message):
    reason: "GalleryStopReason" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeGallerySettleInfo(betterproto.Message):
    kill_monster_count: int = betterproto.uint32_field(12)
    kill_special_monster_count: int = betterproto.uint32_field(8)
    clean_mud_count: int = betterproto.uint32_field(10)
    gallery_id: int = betterproto.uint32_field(2)
    reason: "GalleryStopReason" = betterproto.enum_field(11)
    final_score: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeGalleryInPlayingNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatGallerySettleInfo(betterproto.Message):
    param1: int = betterproto.uint32_field(7)
    param2: int = betterproto.uint32_field(2)
    reason: "GalleryStopReason" = betterproto.enum_field(3)
    param3: int = betterproto.uint32_field(6)
    used_time: int = betterproto.uint32_field(12)
    gallery_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GalleryIslandPartyDownHillInfoNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(2)
    coin: int = betterproto.uint32_field(9)
    total_kill_monster_count: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class IslandPartyRaftInfoNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(7)
    coin: int = betterproto.uint32_field(15)
    fuel: int = betterproto.uint32_field(3)
    component: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class IslandPartySailInfoNotify(betterproto.Message):
    coin: int = betterproto.uint32_field(10)
    stage: "IslandPartySailStage" = betterproto.enum_field(8)
    kill_monster_count: int = betterproto.uint32_field(4)
    progress: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class IslandPartyGallerySettleInfo(betterproto.Message):
    player_info: "OnlinePlayerInfo" = betterproto.message_field(13)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class BackRebornGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class BackRebornGalleryRsp(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GalleryWillStartCountdownNotify(betterproto.Message):
    start_source: "GalleryStartSource" = betterproto.enum_field(11)
    end_time: int = betterproto.uint32_field(12)
    is_end: bool = betterproto.bool_field(7)
    gallery_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class InstableSprayGalleryInfoNotify(betterproto.Message):
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SceneGalleryMuqadasPotionInfo(betterproto.Message):
    score: int = betterproto.uint32_field(6)
    capture_weakness_count: int = betterproto.uint32_field(4)
    skill_energy: int = betterproto.uint32_field(10)
    skill_use_limit: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class VintageHuntingFirstStageInfo(betterproto.Message):
    timid_cnt: int = betterproto.uint32_field(15)
    brutal_cnt: int = betterproto.uint32_field(7)
    score: int = betterproto.uint32_field(14)
    elite_cnt: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class VintageHuntingSecondStageInfo(betterproto.Message):
    total_num: int = betterproto.uint32_field(11)
    capture_animal_num: int = betterproto.uint32_field(13)
    left_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VintageHuntingThirdStageInfo(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SceneGalleryVintageHuntingInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(7)
    first_stage_info: "VintageHuntingFirstStageInfo" = betterproto.message_field(
        2, group="info"
    )
    second_stage_info: "VintageHuntingSecondStageInfo" = betterproto.message_field(
        15, group="info"
    )
    third_stage_info: "VintageHuntingThirdStageInfo" = betterproto.message_field(
        12, group="info"
    )


@dataclass(eq=False, repr=False)
class WindFieldGalleryInfoNotify(betterproto.Message):
    show_id: int = betterproto.uint32_field(3)
    killed_monster_num: int = betterproto.uint32_field(7)
    coin_num: int = betterproto.uint32_field(9)
    challenge_ball_max_count: int = betterproto.uint32_field(1)
    challenge_total_time: int = betterproto.uint32_field(5)
    challenge_ball_cur_count: int = betterproto.uint32_field(10)
    challenge_timestamp: int = betterproto.uint32_field(4)
    element_ball_num: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class WindFieldGalleryChallengeInfoNotify(betterproto.Message):
    challenge_timestamp: int = betterproto.uint32_field(6)
    is_start: bool = betterproto.bool_field(8)
    show_id: int = betterproto.uint32_field(12)
    is_success: bool = betterproto.bool_field(7)
    challenge_total_time: int = betterproto.uint32_field(13)
    challenge_ball_max_count: int = betterproto.uint32_field(11)
    challenge_ball_cur_count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingInfoNotify(betterproto.Message):
    buff_start_time: int = betterproto.uint32_field(3)
    max_skill_count: int = betterproto.uint32_field(7)
    max_monster_count: int = betterproto.uint32_field(8)
    buff_id: int = betterproto.uint32_field(14)
    buff_last_time: int = betterproto.uint32_field(4)
    rest_skill_count: int = betterproto.uint32_field(6)
    killed_monster_count: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingSettleInfo(betterproto.Message):
    used_time: int = betterproto.uint32_field(15)
    reason: "GalleryStopReason" = betterproto.enum_field(3)
    transaction: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class FungusCaptureSettleNotify(betterproto.Message):
    is_success: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SocialShowAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    costume_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SocialDetail(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    signature: str = betterproto.string_field(5)
    birthday: "Birthday" = betterproto.message_field(6)
    world_level: int = betterproto.uint32_field(7)
    reserved_list: List[int] = betterproto.uint32_field(8)
    online_state: "FriendOnlineState" = betterproto.enum_field(9)
    param: int = betterproto.uint32_field(10)
    is_friend: bool = betterproto.bool_field(11)
    is_mp_mode_available: bool = betterproto.bool_field(12)
    online_id: str = betterproto.string_field(13)
    name_card_id: int = betterproto.uint32_field(14)
    is_in_blacklist: bool = betterproto.bool_field(15)
    is_chat_no_disturb: bool = betterproto.bool_field(16)
    remark_name: str = betterproto.string_field(17)
    finish_achievement_num: int = betterproto.uint32_field(18)
    tower_floor_index: int = betterproto.uint32_field(19)
    tower_level_index: int = betterproto.uint32_field(20)
    is_show_avatar: bool = betterproto.bool_field(21)
    show_avatar_info_list: List["SocialShowAvatarInfo"] = betterproto.message_field(22)
    show_name_card_id_list: List[int] = betterproto.uint32_field(23)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(24)
    profile_picture: "ProfilePicture" = betterproto.message_field(25)


@dataclass(eq=False, repr=False)
class FriendBrief(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    level: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(4)
    world_level: int = betterproto.uint32_field(5)
    signature: str = betterproto.string_field(6)
    online_state: "FriendOnlineState" = betterproto.enum_field(7)
    param: int = betterproto.uint32_field(8)
    is_mp_mode_available: bool = betterproto.bool_field(10)
    online_id: str = betterproto.string_field(11)
    last_active_time: int = betterproto.uint32_field(12)
    name_card_id: int = betterproto.uint32_field(13)
    mp_player_num: int = betterproto.uint32_field(14)
    is_chat_no_disturb: bool = betterproto.bool_field(15)
    chat_sequence: int = betterproto.uint32_field(16)
    remark_name: str = betterproto.string_field(17)
    show_avatar_info_list: List["SocialShowAvatarInfo"] = betterproto.message_field(22)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(23)
    profile_picture: "ProfilePicture" = betterproto.message_field(24)
    is_game_source: bool = betterproto.bool_field(25)
    is_psn_source: bool = betterproto.bool_field(26)
    platform_type: "PlatformType" = betterproto.enum_field(27)


@dataclass(eq=False, repr=False)
class ChatEmojiCollectionData(betterproto.Message):
    emoji_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPlayerFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerFriendListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    ask_friend_list: List["FriendBrief"] = betterproto.message_field(8)
    friend_list: List["FriendBrief"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class AskAddFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AskAddFriendRsp(betterproto.Message):
    param: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(7)
    target_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DealAddFriendReq(betterproto.Message):
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(12)
    target_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DealAddFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(5)
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class GetPlayerSocialDetailReq(betterproto.Message):
    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetPlayerSocialDetailRsp(betterproto.Message):
    detail_data: "SocialDetail" = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DeleteFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DeleteFriendRsp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class SetPlayerBirthdayReq(betterproto.Message):
    birthday: "Birthday" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class SetPlayerBirthdayRsp(betterproto.Message):
    birthday: "Birthday" = betterproto.message_field(2)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class SetPlayerSignatureReq(betterproto.Message):
    signature: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class SetPlayerSignatureRsp(betterproto.Message):
    signature: str = betterproto.string_field(1)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class SetPlayerHeadImageReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SetPlayerHeadImageRsp(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(6)
    avatar_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class UpdatePs4FriendListNotify(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class DeleteFriendNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AddFriendNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(11)
    target_friend_brief: "FriendBrief" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class AskAddFriendNotify(betterproto.Message):
    target_friend_brief: "FriendBrief" = betterproto.message_field(15)
    target_uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SetNameCardReq(betterproto.Message):
    name_card_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SetNameCardRsp(betterproto.Message):
    name_card_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class GetAllUnlockNameCardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllUnlockNameCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    name_card_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AddBlacklistReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AddBlacklistRsp(betterproto.Message):
    target_friend_brief: "FriendBrief" = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class RemoveBlacklistReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class RemoveBlacklistRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    target_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class UnlockNameCardNotify(betterproto.Message):
    name_card_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetRecentMpPlayerListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRecentMpPlayerListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    recent_mp_player_brief_list: List["FriendBrief"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SocialDataNotify(betterproto.Message):
    is_have_first_share: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class TakeFirstShareRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeFirstShareRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class UpdatePs4BlockListReq(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(10)


@dataclass(eq=False, repr=False)
class UpdatePs4BlockListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class GetPlayerBlacklistReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerBlacklistRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    blacklist: List["FriendBrief"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerReportReq(betterproto.Message):
    reason: "ReportReasonType" = betterproto.enum_field(12)
    content: str = betterproto.string_field(8)
    target_home_module_id: int = betterproto.uint32_field(5)
    target_home_module_name: str = betterproto.string_field(6)
    target_uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerReportRsp(betterproto.Message):
    cd_time: int = betterproto.uint32_field(11)
    target_uid: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class SetFriendRemarkNameReq(betterproto.Message):
    uid: int = betterproto.uint32_field(10)
    remark_name: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class SetFriendRemarkNameRsp(betterproto.Message):
    remark_name: str = betterproto.string_field(13)
    is_clear_remark: bool = betterproto.bool_field(3)
    uid: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowAvatarListReq(betterproto.Message):
    is_show_avatar: bool = betterproto.bool_field(15)
    show_avatar_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowAvatarListRsp(betterproto.Message):
    show_avatar_id_list: List[int] = betterproto.uint32_field(1)
    is_show_avatar: bool = betterproto.bool_field(3)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class GetFriendShowAvatarInfoReq(betterproto.Message):
    uid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetFriendShowAvatarInfoRsp(betterproto.Message):
    uid: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(3)
    show_avatar_info_list: List["ShowAvatarInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowNameCardListReq(betterproto.Message):
    show_name_card_id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class UpdatePlayerShowNameCardListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    show_name_card_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetFriendShowNameCardInfoReq(betterproto.Message):
    uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetFriendShowNameCardInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    uid: int = betterproto.uint32_field(7)
    show_name_card_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ForceAddPlayerFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ForceAddPlayerFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    target_friend_brief: "FriendBrief" = betterproto.message_field(2)
    target_uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ProfilePictureChangeNotify(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PsnFriendListNotify(betterproto.Message):
    psn_friend_list: List["FriendBrief"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class PsnBlackListNotify(betterproto.Message):
    psn_blacklist: List["FriendBrief"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GetPlayerAskFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerAskFriendListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    ask_friend_list: List["FriendBrief"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GetChatEmojiCollectionReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetChatEmojiCollectionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    chat_emoji_collection_data: "ChatEmojiCollectionData" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class SetChatEmojiCollectionReq(betterproto.Message):
    chat_emoji_collection_data: "ChatEmojiCollectionData" = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class SetChatEmojiCollectionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class UpdatePs4FriendListReq(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class UpdatePs4FriendListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    psn_id_list: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class FriendInfoChangeNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    online_id: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class PlayerSignatureAuditDataNotify(betterproto.Message):
    info: "ContentAuditInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class PlayerSignatureNotify(betterproto.Message):
    signature: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class SignatureAuditConfigNotify(betterproto.Message):
    is_open: bool = betterproto.bool_field(9)
    submit_limit: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ReadSignatureAuditReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReadSignatureAuditRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class UgcMusicNote(betterproto.Message):
    start_time: int = betterproto.uint32_field(12)
    end_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class UgcMusicTrack(betterproto.Message):
    music_note_list: List["UgcMusicNote"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class UgcMusicRecord(betterproto.Message):
    music_track_list: List["UgcMusicTrack"] = betterproto.message_field(4)
    music_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class UgcMusicBriefInfo(betterproto.Message):
    import_from_ugc_guid: int = betterproto.uint64_field(5)
    is_published: bool = betterproto.bool_field(8)
    is_played: bool = betterproto.bool_field(1)
    music_id: int = betterproto.uint32_field(2)
    save_page_type: int = betterproto.uint32_field(1182)
    save_idx: int = betterproto.uint32_field(12)
    creator_nickname: str = betterproto.string_field(10)
    version: int = betterproto.uint32_field(15)
    save_time: int = betterproto.uint32_field(3)
    after_note_list: List[int] = betterproto.uint32_field(1002)
    before_note_list: List[int] = betterproto.uint32_field(982)
    is_psn_platform: bool = betterproto.bool_field(9)
    time_line_edit_time: int = betterproto.uint32_field(1822)
    is_changed_after_publish: bool = betterproto.bool_field(11)
    publish_time: int = betterproto.uint32_field(13)
    max_score: int = betterproto.uint32_field(14)
    real_time_edit_time: int = betterproto.uint32_field(576)
    note_count: int = betterproto.uint32_field(7)
    ugc_guid: int = betterproto.uint64_field(4)
    self_max_score: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(8)
    ugc_guid: int = betterproto.uint64_field(5)
    ugc_record_usage: "RecordUsage" = betterproto.enum_field(6)
    is_require_brief: bool = betterproto.bool_field(11)
    get_ugc_type: "GetUgcType" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class GetUgcRsp(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(15)
    ugc_type: "UgcType" = betterproto.enum_field(10)
    retcode: int = betterproto.int32_field(2)
    ugc_record_usage: "RecordUsage" = betterproto.enum_field(14)
    music_record: "UgcMusicRecord" = betterproto.message_field(4, group="record")
    music_brief_info: "UgcMusicBriefInfo" = betterproto.message_field(
        1819, group="brief"
    )


@dataclass(eq=False, repr=False)
class GetUgcBriefInfoReq(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(7)
    ugc_type: "UgcType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class GetUgcBriefInfoRsp(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(3)
    ugc_type: "UgcType" = betterproto.enum_field(11)
    retcode: int = betterproto.int32_field(4)
    music_brief_info: "UgcMusicBriefInfo" = betterproto.message_field(2, group="brief")


@dataclass(eq=False, repr=False)
class SaveUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(11)
    music_record: "UgcMusicRecord" = betterproto.message_field(2, group="record")
    music_brief_info: "UgcMusicBriefInfo" = betterproto.message_field(
        1488, group="brief"
    )


@dataclass(eq=False, repr=False)
class SaveUgcRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    ugc_guid: int = betterproto.uint64_field(8)
    ugc_type: "UgcType" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PublishUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(7)
    ugc_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class PublishUgcRsp(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(14)
    retcode: int = betterproto.int32_field(15)
    ugc_type: "UgcType" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class CheckUgcUpdateReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class CheckUgcUpdateRsp(betterproto.Message):
    update_ugc_guid_list: List[int] = betterproto.uint64_field(15)
    retcode: int = betterproto.int32_field(10)
    ugc_type: "UgcType" = betterproto.enum_field(12)


@dataclass(eq=False, repr=False)
class UgcNotify(betterproto.Message):
    is_ugc_publish_ban: bool = betterproto.bool_field(12)
    is_ugc_publish_feature_closed: bool = betterproto.bool_field(8)
    is_ugc_feature_closed: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class CheckUgcStateReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CheckUgcStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class InBattleMechanicusBuildingInfo(betterproto.Message):
    building_id: int = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(7)
    cost_points: int = betterproto.uint32_field(2)
    refund_points: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class InBattleMechanicusPlayerInfo(betterproto.Message):
    pick_card_id: int = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(14)
    building_list: List["InBattleMechanicusBuildingInfo"] = betterproto.message_field(4)
    is_card_confirmed: bool = betterproto.bool_field(13)
    building_points: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class InBattleMechanicusMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(14)
    count: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class InBattleMechanicusCardInfo(betterproto.Message):
    rand_effect_id: int = betterproto.uint32_field(12)
    end_round: int = betterproto.uint32_field(3)
    challenge_state: "InBattleMechanicusCardChallengeState" = betterproto.enum_field(5)
    cost_points: int = betterproto.uint32_field(1)
    card_id: int = betterproto.uint32_field(11)
    begin_round: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class InBattleMechanicusInfo(betterproto.Message):
    left_monster: int = betterproto.uint32_field(5)
    wait_seconds: int = betterproto.uint32_field(13)
    entrance_list: List[int] = betterproto.uint32_field(410)
    exit_list: List[int] = betterproto.uint32_field(115)
    history_card_list: List["InBattleMechanicusCardInfo"] = betterproto.message_field(
        11
    )
    max_excape_monster_num: int = betterproto.uint32_field(10)
    building_stage_duration: int = betterproto.uint32_field(4)
    duration_ms: int = betterproto.uint64_field(8)
    stage: "InBattleMechanicusStageType" = betterproto.enum_field(9)
    total_round: int = betterproto.uint32_field(12)
    monster_list: List["InBattleMechanicusMonsterInfo"] = betterproto.message_field(14)
    excaped_monster_num: int = betterproto.uint32_field(6)
    round: int = betterproto.uint32_field(3)
    pick_card_list: List["InBattleMechanicusCardInfo"] = betterproto.message_field(15)
    player_list: List["InBattleMechanicusPlayerInfo"] = betterproto.message_field(7)
    wait_begin_time_us: int = betterproto.uint64_field(1)
    begin_time_ms: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class InBattleFleurFairInfo(betterproto.Message):
    gallery_id_list: List[int] = betterproto.uint32_field(5)
    gallery_stage_index: int = betterproto.uint32_field(6)
    preview_stage_index: int = betterproto.uint32_field(8)
    ability_group_id_list: List[int] = betterproto.uint32_field(2)
    preview_display_duration: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class CharAmusementAvatarInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(11)
    punish_time: int = betterproto.uint32_field(7)
    avatar_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CharAmusementInfo(betterproto.Message):
    total_cost_time: int = betterproto.uint32_field(11)
    stage_id: int = betterproto.uint32_field(2)
    level_id: int = betterproto.uint32_field(10)
    preview_stage_index: int = betterproto.uint32_field(4)
    avatar_info_list: List["CharAmusementAvatarInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MultistagePlayInfo(betterproto.Message):
    play_index: int = betterproto.uint32_field(13)
    play_type: int = betterproto.uint32_field(11)
    stage_type: int = betterproto.uint32_field(10)
    duration: int = betterproto.uint32_field(8)
    group_id: int = betterproto.uint32_field(12)
    begin_time: int = betterproto.uint32_field(9)
    stage_index: int = betterproto.uint32_field(1)
    mechanicus_info: "InBattleMechanicusInfo" = betterproto.message_field(
        1334, group="detail"
    )
    fleur_fair_info: "InBattleFleurFairInfo" = betterproto.message_field(
        1064, group="detail"
    )
    hide_and_seek_info: "HideAndSeekStageInfo" = betterproto.message_field(
        108, group="detail"
    )
    chess_info: "InBattleChessInfo" = betterproto.message_field(1758, group="detail")
    irodori_chess_info: "InBattleIrodoriChessInfo" = betterproto.message_field(
        531, group="detail"
    )
    char_amusement_info: "CharAmusementInfo" = betterproto.message_field(
        324, group="detail"
    )


@dataclass(eq=False, repr=False)
class MultistagePlayInfoNotify(betterproto.Message):
    info: "MultistagePlayInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class MultistagePlayFinishStageReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(12)
    play_index: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class InBattleMechanicusExcapeMonsterNotify(betterproto.Message):
    excaped_monster_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class InBattleMechanicusLeftMonsterNotify(betterproto.Message):
    left_monster: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class InBattleMechanicusBuildingPointsNotify(betterproto.Message):
    player_building_points_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class InBattleMechanicusPickCardReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(11)
    play_index: int = betterproto.uint32_field(7)
    card_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class InBattleMechanicusPickCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    card_id: int = betterproto.uint32_field(2)
    play_index: int = betterproto.uint32_field(4)
    group_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class InBattleMechanicusPickCardNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(6)
    group_id: int = betterproto.uint32_field(7)
    play_index: int = betterproto.uint32_field(8)
    card_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class InBattleMechanicusConfirmCardReq(betterproto.Message):
    play_index: int = betterproto.uint32_field(6)
    card_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class InBattleMechanicusConfirmCardRsp(betterproto.Message):
    play_index: int = betterproto.uint32_field(2)
    card_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(11)
    group_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class InBattleMechanicusConfirmCardNotify(betterproto.Message):
    play_index: int = betterproto.uint32_field(11)
    card_id: int = betterproto.uint32_field(13)
    group_id: int = betterproto.uint32_field(10)
    player_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class InBattleMechanicusCardResultNotify(betterproto.Message):
    wait_seconds: int = betterproto.uint32_field(6)
    group_id: int = betterproto.uint32_field(2)
    card_list: List["InBattleMechanicusCardInfo"] = betterproto.message_field(9)
    wait_begin_time_us: int = betterproto.uint64_field(7)
    player_confirmed_card_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    play_index: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class MultistagePlayFinishStageRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    group_id: int = betterproto.uint32_field(12)
    play_index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MultistageSettleWatcherInfo(betterproto.Message):
    total_progress: int = betterproto.uint32_field(13)
    cur_progress: int = betterproto.uint32_field(5)
    watcher_id: int = betterproto.uint32_field(7)
    is_inverse: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class InBattleMechanicusSettleNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(15)
    scene_time_ms: int = betterproto.uint64_field(11)
    difficulty_percentage: int = betterproto.uint32_field(6)
    total_token: int = betterproto.uint32_field(7)
    watcher_list: List["MultistageSettleWatcherInfo"] = betterproto.message_field(3)
    real_token: int = betterproto.uint32_field(13)
    is_success: bool = betterproto.bool_field(2)
    play_index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class InBattleMechanicusSettleInfo(betterproto.Message):
    scene_time_ms: int = betterproto.uint64_field(15)
    total_token: int = betterproto.uint32_field(4)
    real_token: int = betterproto.uint32_field(8)
    watcher_list: List["MultistageSettleWatcherInfo"] = betterproto.message_field(7)
    is_success: bool = betterproto.bool_field(6)
    play_index: int = betterproto.uint32_field(3)
    difficulty_percentage: int = betterproto.uint32_field(10)
    group_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MultistagePlaySettleNotify(betterproto.Message):
    play_index: int = betterproto.uint32_field(14)
    group_id: int = betterproto.uint32_field(4)
    mechanicus_settle_info: "InBattleMechanicusSettleInfo" = betterproto.message_field(
        1402, group="detail"
    )
    chess_settle_info: "InBattleChessSettleInfo" = betterproto.message_field(
        1283, group="detail"
    )
    irodori_chess_settle_info: "InBattleIrodoriChessSettleInfo" = (
        betterproto.message_field(612, group="detail")
    )


@dataclass(eq=False, repr=False)
class MultistagePlayStageEndNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(15)
    play_index: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MultistagePlayEndNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(5)
    play_index: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FleurFairBuffEnergyNotify(betterproto.Message):
    energy: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FleurFairGallerySettleInfo(betterproto.Message):
    energy: int = betterproto.uint32_field(2)
    gallery_stage_index: int = betterproto.uint32_field(11)
    energy_stat_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    gallery_stage_count: int = betterproto.uint32_field(9)
    is_success: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class FleurFairPlayerStatInfo(betterproto.Message):
    online_id: str = betterproto.string_field(11)
    uid: int = betterproto.uint32_field(8)
    profile_picture: "ProfilePicture" = betterproto.message_field(1)
    stat_id: int = betterproto.uint32_field(3)
    head_image: int = betterproto.uint32_field(6)
    nick_name: str = betterproto.string_field(15)
    param: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class FleurFairBossSettleInfo(betterproto.Message):
    reward_token_num: int = betterproto.uint32_field(15)
    stat_info_list: List["FleurFairPlayerStatInfo"] = betterproto.message_field(1)
    is_success: bool = betterproto.bool_field(10)
    energy: int = betterproto.uint32_field(12)
    cost_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FleurFairStageSettleNotify(betterproto.Message):
    stage_type: int = betterproto.uint32_field(10)
    gallery_settle_info: "FleurFairGallerySettleInfo" = betterproto.message_field(
        13, group="detail"
    )
    boss_settle_info: "FleurFairBossSettleInfo" = betterproto.message_field(
        14, group="detail"
    )


@dataclass(eq=False, repr=False)
class FleurFairFinishGalleryStageNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HideAndSeekPlayerBattleInfo(betterproto.Message):
    costume_id: int = betterproto.uint32_field(3)
    skill_list: List[int] = betterproto.uint32_field(15)
    is_ready: bool = betterproto.bool_field(12)
    avatar_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HideAndSeekStageInfo(betterproto.Message):
    map_id: int = betterproto.uint32_field(8)
    is_record_score: bool = betterproto.bool_field(3)
    stage_type: "HideAndSeekStageType" = betterproto.enum_field(7)
    battle_info_map: Dict[int, "HideAndSeekPlayerBattleInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    hider_uid_list: List[int] = betterproto.uint32_field(1)
    hunter_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectAvatarReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    avatar_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HideAndSeekSetReadyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HideAndSeekSetReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class HideAndSeekSettleInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(2)
    profile_picture: "ProfilePicture" = betterproto.message_field(1)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(8)
    nickname: str = betterproto.string_field(3)
    head_image: int = betterproto.uint32_field(4)
    online_id: str = betterproto.string_field(10)


@dataclass(eq=False, repr=False)
class HideAndSeekSettleNotify(betterproto.Message):
    cost_time: int = betterproto.uint32_field(2)
    settle_info_list: List["HideAndSeekSettleInfo"] = betterproto.message_field(8)
    winner_list: List[int] = betterproto.uint32_field(15)
    reason: "HideAndSeekSettleNotifySettleReason" = betterproto.enum_field(4)
    play_index: int = betterproto.uint32_field(13)
    is_record_score: bool = betterproto.bool_field(6)
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(9)
    stage_type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HideAndSeekPlayerReadyNotify(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HideAndSeekPlayerSetAvatarNotify(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(2)
    costume_id: int = betterproto.uint32_field(13)
    uid: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ChessCardInfo(betterproto.Message):
    effect_stack: int = betterproto.uint32_field(12)
    card_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class InBattleChessInfo(betterproto.Message):
    ban_card_tag_list: List[int] = betterproto.uint32_field(2)
    round: int = betterproto.uint32_field(4)
    selected_card_info_list: List["ChessCardInfo"] = betterproto.message_field(9)
    mystery_info: "ChessMysteryInfo" = betterproto.message_field(1)
    player_info_map: Dict[int, "ChessPlayerInfo"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    max_escapable_monsters: int = betterproto.uint32_field(6)
    excaped_monsters: int = betterproto.uint32_field(12)
    total_round: int = betterproto.uint32_field(14)
    left_monsters: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class InBattleChessSettleInfo(betterproto.Message):
    is_success: bool = betterproto.bool_field(7)
    chess_exp: int = betterproto.uint32_field(11)
    chess_level: int = betterproto.uint32_field(13)
    old_chess_level: int = betterproto.uint32_field(10)
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(1)
    scene_time_ms: int = betterproto.uint64_field(14)
    old_chess_exp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChessPlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(5)
    free_refresh_limit: int = betterproto.uint32_field(10)
    candidate_card_info_list: List["ChessNormalCardInfo"] = betterproto.message_field(3)
    building_points: int = betterproto.uint32_field(12)
    candidate_index: int = betterproto.uint32_field(6)
    free_refresh_count: int = betterproto.uint32_field(13)
    refresh_cost: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ChessMonsterInfo(betterproto.Message):
    monster_id: int = betterproto.uint32_field(12)
    level: int = betterproto.uint32_field(2)
    affix_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ChessEntranceInfo(betterproto.Message):
    monster_info_list: List["ChessMonsterInfo"] = betterproto.message_field(14)
    entrance_index: int = betterproto.uint32_field(15)
    entrance_point_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChessEntranceDetailInfo(betterproto.Message):
    info_list: List["ChessEntranceInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ChessMysteryInfo(betterproto.Message):
    entrance_point_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    exit_point_id_list: List[int] = betterproto.uint32_field(3)
    detail_info_map: Dict[int, "ChessEntranceDetailInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ChessNormalCardInfo(betterproto.Message):
    card_id: int = betterproto.uint32_field(2)
    cost_points: int = betterproto.uint32_field(15)
    is_attach_curse: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class ChessPickCardReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(1)
    card_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChessPickCardRsp(betterproto.Message):
    card_index: int = betterproto.uint32_field(11)
    card_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ChessPickCardNotify(betterproto.Message):
    curse_card_id: int = betterproto.uint32_field(13)
    normal_card_info: "ChessNormalCardInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChessManualRefreshCardsReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChessManualRefreshCardsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ChessPlayerInfoNotify(betterproto.Message):
    player_info: "ChessPlayerInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class ChessLeftMonstersNotify(betterproto.Message):
    left_monsters: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChessEscapedMonstersNotify(betterproto.Message):
    excaped_monsters: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ChessSelectedCardsNotify(betterproto.Message):
    selected_card_info_list: List["ChessCardInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GlobalBuildingInfoNotify(betterproto.Message):
    current_num: int = betterproto.uint32_field(5)
    building_list: List["BuildingInfo"] = betterproto.message_field(3)
    max_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class InBattleIrodoriChessInfo(betterproto.Message):
    mystery_info: "IrodoriChessMysteryInfo" = betterproto.message_field(3)
    left_monsters: int = betterproto.uint32_field(12)
    selected_card_id_list: List[int] = betterproto.uint32_field(13)
    building_points: int = betterproto.uint32_field(7)
    settle_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IrodoriChessMonsterInfo(betterproto.Message):
    grant_points: int = betterproto.uint32_field(6)
    level: int = betterproto.uint32_field(13)
    monster_id: int = betterproto.uint32_field(14)
    affix_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class IrodoriChessEntranceInfo(betterproto.Message):
    monster_info_list: List["IrodoriChessMonsterInfo"] = betterproto.message_field(6)
    entrance_point_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IrodoriChessEntranceDetailInfo(betterproto.Message):
    info_list: List["IrodoriChessEntranceInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class IrodoriChessMysteryInfo(betterproto.Message):
    entrance_detail_info: "IrodoriChessEntranceDetailInfo" = betterproto.message_field(
        5
    )
    entrance_point_id_list: List[int] = betterproto.uint32_field(2)
    exit_point_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class InBattleIrodoriChessSettleInfo(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(5)
    is_activity_end: bool = betterproto.bool_field(2)
    scene_time_ms: int = betterproto.uint64_field(1)
    settle_score: int = betterproto.uint32_field(3)
    is_perfect: bool = betterproto.bool_field(12)
    kill_monster_num: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class IrodoriChessPlayerInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(4)
    building_points: int = betterproto.uint32_field(9)
    settle_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class IrodoriChessPlayerInfoNotify(betterproto.Message):
    player_info: "IrodoriChessPlayerInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class IrodoriChessLeftMonsterNotify(betterproto.Message):
    left_monsters: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetActivityScheduleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ActivityScheduleInfo(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)
    is_open: bool = betterproto.bool_field(2)
    activity_id: int = betterproto.uint32_field(14)
    end_time: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetActivityScheduleRsp(betterproto.Message):
    activity_schedule_list: List["ActivityScheduleInfo"] = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(13)
    remain_fly_sea_lamp_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetActivityInfoReq(betterproto.Message):
    activity_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ActivityInfo(betterproto.Message):
    is_finished: bool = betterproto.bool_field(6)
    activity_type: int = betterproto.uint32_field(4)
    begin_time: int = betterproto.uint32_field(8)
    taken_reward_list: List[int] = betterproto.uint32_field(329)
    is_hidden: bool = betterproto.bool_field(919)
    is_quick_open: bool = betterproto.bool_field(1449)
    meet_cond_list: List[int] = betterproto.uint32_field(10)
    activity_coin_map: Dict[int, int] = betterproto.map_field(
        682, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_banner_cleared: bool = betterproto.bool_field(102)
    cur_score: int = betterproto.uint32_field(1906)
    first_day_start_time: int = betterproto.uint32_field(592)
    activity_id: int = betterproto.uint32_field(12)
    is_play_open_anim: bool = betterproto.bool_field(13)
    end_time: int = betterproto.uint32_field(5)
    score_limit: int = betterproto.uint32_field(1958)
    wish_gift_num_map: Dict[int, int] = betterproto.map_field(
        1399, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    selected_avatar_reward_id: int = betterproto.uint32_field(1290)
    is_common_content_closed: bool = betterproto.bool_field(1963)
    expire_cond_list: List[int] = betterproto.uint32_field(3)
    activity_push_tips_data_list: List[
        "ActivityPushTipsData"
    ] = betterproto.message_field(864)
    watcher_info_list: List["ActivityWatcherInfo"] = betterproto.message_field(2)
    schedule_id: int = betterproto.uint32_field(15)
    is_starting: bool = betterproto.bool_field(9)
    sam_lamp_info: "SeaLampActivityDetailInfo" = betterproto.message_field(
        7, group="detail"
    )
    crucible_info: "CrucibleActivityDetailInfo" = betterproto.message_field(
        14, group="detail"
    )
    salesman_info: "SalesmanActivityDetailInfo" = betterproto.message_field(
        11, group="detail"
    )
    trial_avatar_info: "TrialAvatarActivityDetailInfo" = betterproto.message_field(
        1, group="detail"
    )
    delivery_info: "DeliveryActivityDetailInfo" = betterproto.message_field(
        1092, group="detail"
    )
    aster_info: "AsterActivityDetailInfo" = betterproto.message_field(
        557, group="detail"
    )
    flight_info: "FlightActivityDetailInfo" = betterproto.message_field(
        1365, group="detail"
    )
    dragon_spine_info: "DragonSpineActivityDetailInfo" = betterproto.message_field(
        1727, group="detail"
    )
    effigy_info: "EffigyActivityDetailInfo" = betterproto.message_field(
        391, group="detail"
    )
    treasure_map_info: "TreasureMapActivityDetailInfo" = betterproto.message_field(
        1114, group="detail"
    )
    blessing_info: "BlessingActivityDetailInfo" = betterproto.message_field(
        1869, group="detail"
    )
    sea_lamp_info: "SeaLampActivityInfo" = betterproto.message_field(
        494, group="detail"
    )
    expedition_info: "ExpeditionActivityDetailInfo" = betterproto.message_field(
        202, group="detail"
    )
    arena_challenge_info: "ArenaChallengeActivityDetailInfo" = (
        betterproto.message_field(859, group="detail")
    )
    fleur_fair_info: "FleurFairActivityDetailInfo" = betterproto.message_field(
        857, group="detail"
    )
    water_spirit_info: "WaterSpiritActivityDetailInfo" = betterproto.message_field(
        1675, group="detail"
    )
    challneler_slab_info: "ChannelerSlabActivityDetailInfo" = betterproto.message_field(
        1015, group="detail"
    )
    mist_trial_activity_info: "MistTrialActivityDetailInfo" = betterproto.message_field(
        156, group="detail"
    )
    hide_and_seek_info: "HideAndSeekActivityDetailInfo" = betterproto.message_field(
        427, group="detail"
    )
    find_hilichurl_info: "FindHilichurlDetailInfo" = betterproto.message_field(
        1411, group="detail"
    )
    summer_time_info: "SummerTimeDetailInfo" = betterproto.message_field(
        1372, group="detail"
    )
    buoyant_combat_info: "BuoyantCombatDetailInfo" = betterproto.message_field(
        1842, group="detail"
    )
    echo_shell_info: "EchoShellDetailInfo" = betterproto.message_field(
        1113, group="detail"
    )
    bounce_conjuring_info: "BounceConjuringActivityDetailInfo" = (
        betterproto.message_field(767, group="detail")
    )
    blitz_rush_info: "BlitzRushActivityDetailInfo" = betterproto.message_field(
        794, group="detail"
    )
    chess_info: "ChessActivityDetailInfo" = betterproto.message_field(
        927, group="detail"
    )
    sumo_info: "SumoActivityDetailInfo" = betterproto.message_field(
        1261, group="detail"
    )
    moonfin_trial_info: "MoonfinTrialActivityDetailInfo" = betterproto.message_field(
        1588, group="detail"
    )
    luna_rite_info: "LunaRiteDetailInfo" = betterproto.message_field(
        814, group="detail"
    )
    plant_flower_info: "PlantFlowerActivityDetailInfo" = betterproto.message_field(
        54, group="detail"
    )
    music_game_info: "MusicGameActivityDetailInfo" = betterproto.message_field(
        460, group="detail"
    )
    roguelike_dungoen_info: "RoguelikeDungeonActivityDetailInfo" = (
        betterproto.message_field(219, group="detail")
    )
    dig_info: "DigActivityDetailInfo" = betterproto.message_field(403, group="detail")
    hachi_info: "HachiActivityDetailInfo" = betterproto.message_field(
        491, group="detail"
    )
    winter_camp_info: "WinterCampActivityDetailInfo" = betterproto.message_field(
        1083, group="detail"
    )
    potion_info: "PotionActivityDetailInfo" = betterproto.message_field(
        1273, group="detail"
    )
    tanuki_travel_activity_info: "TanukiTravelActivityDetailInfo" = (
        betterproto.message_field(1796, group="detail")
    )
    lantern_rite_activity_info: "LanternRiteActivityDetailInfo" = (
        betterproto.message_field(1876, group="detail")
    )
    michiae_matsuri_info: "MichiaeMatsuriActivityDetailInfo" = (
        betterproto.message_field(194, group="detail")
    )
    bartender_info: "BartenderActivityDetailInfo" = betterproto.message_field(
        1725, group="detail"
    )
    ugc_info: "UgcActivityDetailInfo" = betterproto.message_field(703, group="detail")
    crystal_link_info: "CrystalLinkActivityDetailInfo" = betterproto.message_field(
        1226, group="detail"
    )
    irodori_info: "IrodoriActivityDetailInfo" = betterproto.message_field(
        750, group="detail"
    )
    photo_info: "PhotoActivityDetailInfo" = betterproto.message_field(
        328, group="detail"
    )
    spice_info: "SpiceActivityDetailInfo" = betterproto.message_field(
        1891, group="detail"
    )
    gacha_info: "GachaActivityDetailInfo" = betterproto.message_field(
        825, group="detail"
    )
    luminance_stone_challenge_info: "LuminanceStoneChallengeActivityDetailInfo" = (
        betterproto.message_field(1308, group="detail")
    )
    rogue_diary_info: "RogueDiaryActivityDetailInfo" = betterproto.message_field(
        812, group="detail"
    )
    summer_time_v2_info: "SummerTimeV2DetailInfo" = betterproto.message_field(
        622, group="detail"
    )
    island_party_info: "IslandPartyDetailInfo" = betterproto.message_field(
        1885, group="detail"
    )
    gear_info: "GearActivityDetailInfo" = betterproto.message_field(722, group="detail")
    graven_innocence_info: "GravenInnocenceDetailInfo" = betterproto.message_field(
        1911, group="detail"
    )
    instable_spray_info: "InstableSprayDetailInfo" = betterproto.message_field(
        1043, group="detail"
    )
    muqadas_potion_info: "MuqadasPotionActivityDetailInfo" = betterproto.message_field(
        1157, group="detail"
    )
    treasure_seelie_info: "TreasureSeelieActivityDetailInfo" = (
        betterproto.message_field(966, group="detail")
    )
    rock_board_explore_info: "RockBoardExploreDetailInfo" = betterproto.message_field(
        1078, group="detail"
    )
    vintage_info: "VintageActivityDetailInfo" = betterproto.message_field(
        445, group="detail"
    )
    wind_field_info: "WindFieldDetailInfo" = betterproto.message_field(
        352, group="detail"
    )
    fungus_fighter_info: "FungusFighterDetailInfo" = betterproto.message_field(
        490, group="detail"
    )
    char_amusement_info: "CharAmusementDetailInfo" = betterproto.message_field(
        1496, group="detail"
    )
    effigy_challenge_info: "EffigyChallengeV2DetailInfo" = betterproto.message_field(
        1025, group="detail"
    )


@dataclass(eq=False, repr=False)
class GetActivityInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    activity_info_list: List["ActivityInfo"] = betterproto.message_field(5)
    activated_sale_id_list: List[int] = betterproto.uint32_field(11)
    disable_transfer_point_interaction_list: List[
        "Uint32Pair"
    ] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class ActivityPlayOpenAnimNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ActivityInfoNotify(betterproto.Message):
    activity_info: "ActivityInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ActivityScheduleInfoNotify(betterproto.Message):
    activity_schedule_list: List["ActivityScheduleInfo"] = betterproto.message_field(12)
    remain_fly_sea_lamp_num: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ActivityWatcherInfo(betterproto.Message):
    is_taken_reward: bool = betterproto.bool_field(8)
    cur_progress: int = betterproto.uint32_field(2)
    total_progress: int = betterproto.uint32_field(4)
    watcher_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(4)
    watcher_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(14)
    watcher_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ActivityUpdateWatcherNotify(betterproto.Message):
    watcher_info: "ActivityWatcherInfo" = betterproto.message_field(2)
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivitySelectAvatarCardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(15)
    reward_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ActivitySelectAvatarCardRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(3)
    reward_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ActivityCoinInfoNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)
    activity_id: int = betterproto.uint32_field(10)
    activity_coin_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SeaLampActivityDetailInfo(betterproto.Message):
    phase_id: int = betterproto.uint32_field(14)
    taken_phase_reward_list: List[int] = betterproto.uint32_field(1)
    taken_contribution_reward_list: List[int] = betterproto.uint32_field(7)
    progress: int = betterproto.uint32_field(8)
    contribution: int = betterproto.uint32_field(15)
    factor: int = betterproto.uint32_field(13)
    days: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(9)
    param: int = betterproto.int32_field(10)
    pos: "Vector" = betterproto.message_field(7)
    item_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampRsp(betterproto.Message):
    item_num: int = betterproto.uint32_field(9)
    item_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class SeaLampTakeContributionRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(4)
    config_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SeaLampTakeContributionRewardRsp(betterproto.Message):
    config_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class SeaLampTakePhaseRewardReq(betterproto.Message):
    phase_id: int = betterproto.uint32_field(12)
    activity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SeaLampTakePhaseRewardRsp(betterproto.Message):
    phase_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class SeaLampContributeItemReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(8)
    item_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SeaLampContributeItemRsp(betterproto.Message):
    add_contribution: int = betterproto.uint32_field(7)
    add_progress: int = betterproto.uint32_field(1)
    total_contribution: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class SeaLampSectionInfo(betterproto.Message):
    section_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SeaLampActivityInfo(betterproto.Message):
    is_mechanicus_open: bool = betterproto.bool_field(14)
    day_index: int = betterproto.uint32_field(1)
    section_info_list: List["SeaLampSectionInfo"] = betterproto.message_field(6)
    popularity: int = betterproto.uint32_field(10)
    sea_lamp_coin: int = betterproto.uint32_field(15)
    first_day_start_time: int = betterproto.uint32_field(11)
    mechanicus_id: int = betterproto.uint32_field(9)
    is_mechanicus_feature_close: bool = betterproto.bool_field(12)
    is_content_closed: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SeaLampFlyLampNotify(betterproto.Message):
    pos: "Vector" = betterproto.message_field(11)
    item_num: int = betterproto.uint32_field(10)
    item_id: int = betterproto.uint32_field(7)
    param: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class SeaLampCoinNotify(betterproto.Message):
    sea_lamp_coin: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SeaLampPopularityNotify(betterproto.Message):
    popularity: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AnnounceData(betterproto.Message):
    count_down_text: str = betterproto.string_field(9)
    center_system_text: str = betterproto.string_field(8)
    count_down_frequency: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(7)
    begin_time: int = betterproto.uint32_field(4)
    center_system_frequency: int = betterproto.uint32_field(11)
    dungeon_confirm_text: str = betterproto.string_field(2)
    is_center_system_last_5_every_minutes: bool = betterproto.bool_field(14)
    end_time: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class LoadActivityTerrainNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerAnnounceNotify(betterproto.Message):
    announce_data_list: List["AnnounceData"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class ServerAnnounceRevokeNotify(betterproto.Message):
    config_id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ActivityBannerNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityBannerClearReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(15)
    activity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ActivityBannerClearRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(6)
    schedule_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SalesmanActivityDetailInfo(betterproto.Message):
    special_reward_preview_id: int = betterproto.uint32_field(3)
    status: "SalesmanStatusType" = betterproto.enum_field(4)
    last_deliver_time: int = betterproto.uint32_field(2)
    selected_reward_id_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    deliver_count: int = betterproto.uint32_field(11)
    is_has_taken_special_reward: bool = betterproto.bool_field(7)
    day_index: int = betterproto.uint32_field(12)
    cond_day_count: int = betterproto.uint32_field(6)
    day_reward_id: int = betterproto.uint32_field(9)
    is_today_has_delivered: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class SalesmanDeliverItemReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SalesmanDeliverItemRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class SalesmanTakeRewardReq(betterproto.Message):
    position: int = betterproto.uint32_field(8)
    schedule_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SalesmanTakeRewardRsp(betterproto.Message):
    position: int = betterproto.uint32_field(13)
    schedule_id: int = betterproto.uint32_field(7)
    reward_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class ActivityCondStateChangeNotify(betterproto.Message):
    activated_sale_id_list: List[int] = betterproto.uint32_field(9)
    activity_id: int = betterproto.uint32_field(4)
    schedule_id: int = betterproto.uint32_field(5)
    expire_cond_list: List[int] = betterproto.uint32_field(11)
    disable_transfer_point_interaction_list: List[
        "Uint32Pair"
    ] = betterproto.message_field(12)
    meet_cond_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SalesmanTakeSpecialRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SalesmanTakeSpecialRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetAuthSalesmanInfoReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetAuthSalesmanInfoRsp(betterproto.Message):
    day_reward_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(6)
    schedule_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TrialAvatarActivityRewardDetailInfo(betterproto.Message):
    passed_dungeon: bool = betterproto.bool_field(2)
    trial_avatar_index_id: int = betterproto.uint32_field(4)
    received_reward: bool = betterproto.bool_field(5)
    reward_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TrialAvatarActivityDetailInfo(betterproto.Message):
    reward_info_list: List[
        "TrialAvatarActivityRewardDetailInfo"
    ] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class EnterTrialAvatarActivityDungeonReq(betterproto.Message):
    enter_point_id: int = betterproto.uint32_field(10)
    trial_avatar_index_id: int = betterproto.uint32_field(5)
    activity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class EnterTrialAvatarActivityDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    trial_avatar_index_id: int = betterproto.uint32_field(13)
    activity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ReceivedTrialAvatarActivityRewardReq(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ReceivedTrialAvatarActivityRewardRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(3)
    trial_avatar_index_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TrialAvatarFirstPassDungeonNotify(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TrialAvatarInDungeonIndexNotify(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CrucibleBattleUidInfo(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(15)
    uid: int = betterproto.uint32_field(4)
    nickname: str = betterproto.string_field(5)
    online_id: str = betterproto.string_field(13)
    icon: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CrucibleActivityDetailInfo(betterproto.Message):
    cost_time: int = betterproto.uint32_field(5)
    battle_world_level: int = betterproto.uint32_field(12)
    uid_info_list: List["CrucibleBattleUidInfo"] = betterproto.message_field(3)
    pos: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class DeliveryActivityDetailInfo(betterproto.Message):
    day_index: int = betterproto.uint32_field(14)
    is_taken_reward: bool = betterproto.bool_field(13)
    finished_delivery_quest_index: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeDeliveryDailyRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TakeDeliveryDailyRewardRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class FinishDeliveryNotify(betterproto.Message):
    finished_quest_index: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(10)
    day_index: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AsterLittleDetailInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(4)
    stage_state: "AsterLittleStageState" = betterproto.enum_field(7)
    stage_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(6)
    stage_begin_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AsterMidCampInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(3)
    camp_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AsterMidDetailInfo(betterproto.Message):
    begin_time: int = betterproto.uint32_field(10)
    camp_list: List["AsterMidCampInfo"] = betterproto.message_field(7)
    is_open: bool = betterproto.bool_field(4)
    collect_count: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AsterLargeDetailInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(3)
    begin_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AsterProgressDetailInfo(betterproto.Message):
    last_auto_add_time: int = betterproto.uint32_field(3)
    count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AsterActivityDetailInfo(betterproto.Message):
    aster_little: "AsterLittleDetailInfo" = betterproto.message_field(7)
    aster_credit: int = betterproto.uint32_field(14)
    aster_large: "AsterLargeDetailInfo" = betterproto.message_field(9)
    is_special_reward_taken: bool = betterproto.bool_field(1)
    is_content_closed: bool = betterproto.bool_field(13)
    content_close_time: int = betterproto.uint32_field(8)
    aster_token: int = betterproto.uint32_field(5)
    aster_mid: "AsterMidDetailInfo" = betterproto.message_field(6)
    aster_progress: "AsterProgressDetailInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SelectAsterMidDifficultyReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(13)
    schedule_id: int = betterproto.uint32_field(1)
    difficulty_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SelectAsterMidDifficultyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    schedule_id: int = betterproto.uint32_field(2)
    gadget_entity_id: int = betterproto.uint32_field(5)
    difficulty_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AsterProgressInfoNotify(betterproto.Message):
    info: "AsterProgressDetailInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AsterLittleInfoNotify(betterproto.Message):
    info: "AsterLittleDetailInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AsterMidInfoNotify(betterproto.Message):
    info: "AsterMidDetailInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class AsterMiscInfoNotify(betterproto.Message):
    aster_token: int = betterproto.uint32_field(2)
    aster_credit: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeAsterSpecialRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeAsterSpecialRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    schedule_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AsterLargeInfoNotify(betterproto.Message):
    info: "AsterLargeDetailInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class FlightDailyRecord(betterproto.Message):
    group_id: int = betterproto.uint32_field(4)
    is_touched: bool = betterproto.bool_field(1)
    watcher_id_list: List[int] = betterproto.uint32_field(11)
    best_score: int = betterproto.uint32_field(7)
    start_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FlightActivityDetailInfo(betterproto.Message):
    preview_reward_id: int = betterproto.uint32_field(15)
    min_open_player_level: int = betterproto.uint32_field(11)
    daily_record_list: List["FlightDailyRecord"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class FlightActivitySettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(1)
    medal_level: int = betterproto.uint32_field(6)
    left_time: int = betterproto.uint32_field(13)
    collect_num: int = betterproto.uint32_field(9)
    total_num: int = betterproto.uint32_field(5)
    group_id: int = betterproto.uint32_field(8)
    score: int = betterproto.uint32_field(10)
    is_success: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class FlightActivityRestartReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(4)
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FlightActivityRestartRsp(betterproto.Message):
    group_id: int = betterproto.uint32_field(11)
    schedule_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class AsterMidCampInfoNotify(betterproto.Message):
    camp_list: List["AsterMidCampInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class DragonSpineActivityDetailInfo(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(10)
    chapter_info_list: List["DragonSpineChapterInfo"] = betterproto.message_field(4)
    weapon_enhance_level: int = betterproto.uint32_field(2)
    content_finish_time: int = betterproto.uint32_field(15)
    shimmering_essence: int = betterproto.uint32_field(13)
    warm_essence: int = betterproto.uint32_field(11)
    wondrous_essence: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DragonSpineChapterInfo(betterproto.Message):
    progress: int = betterproto.uint32_field(14)
    open_time: int = betterproto.uint32_field(6)
    is_open: bool = betterproto.bool_field(11)
    chapter_id: int = betterproto.uint32_field(9)
    finished_mission_num: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DragonSpineChapterOpenNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(12)
    chapter_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DragonSpineChapterProgressChangeNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(7)
    chapter_id: int = betterproto.uint32_field(11)
    cur_progress: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DragonSpineChapterFinishNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)
    chapter_id: int = betterproto.uint32_field(11)
    weapon_enhance_level: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DragonSpineCoinChangeNotify(betterproto.Message):
    shimmering_essence: int = betterproto.uint32_field(4)
    warm_essence: int = betterproto.uint32_field(13)
    schedule_id: int = betterproto.uint32_field(12)
    wondrous_essence: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ActivitySaleChangeNotify(betterproto.Message):
    sale_id: int = betterproto.uint32_field(5)
    is_close: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class EffigyDailyInfo(betterproto.Message):
    challenge_max_score: int = betterproto.uint32_field(6)
    is_first_pass_reward_taken: bool = betterproto.bool_field(12)
    challenge_total_score: int = betterproto.uint32_field(15)
    challenge_id: int = betterproto.uint32_field(1)
    challenge_count: int = betterproto.uint32_field(3)
    day_index: int = betterproto.uint32_field(14)
    begin_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EffigyActivityDetailInfo(betterproto.Message):
    cur_score: int = betterproto.uint32_field(5)
    daily_info_list: List["EffigyDailyInfo"] = betterproto.message_field(14)
    last_difficulty_id: int = betterproto.uint32_field(9)
    taken_reward_index_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StartEffigyChallengeReq(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(9)
    condition_id_list: List[int] = betterproto.uint32_field(6)
    challenge_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class StartEffigyChallengeRsp(betterproto.Message):
    condition_id_list: List[int] = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(8)
    challenge_id: int = betterproto.uint32_field(15)
    difficulty_id: int = betterproto.uint32_field(10)
    point_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EffigyChallengeInfoNotify(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(9)
    condition_id_list: List[int] = betterproto.uint32_field(11)
    challenge_score: int = betterproto.uint32_field(14)
    challenge_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EffigyChallengeDungeonResultInfo(betterproto.Message):
    challenge_score: int = betterproto.uint32_field(7)
    is_in_time_limit: bool = betterproto.bool_field(8)
    challenge_id: int = betterproto.uint32_field(6)
    is_success: bool = betterproto.bool_field(15)
    challenge_max_score: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EffigyChallengeResultNotify(betterproto.Message):
    is_success: bool = betterproto.bool_field(5)
    challenge_max_score: int = betterproto.uint32_field(12)
    challenge_score: int = betterproto.uint32_field(3)
    challenge_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TakeEffigyFirstPassRewardReq(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TakeEffigyFirstPassRewardRsp(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class TakeEffigyRewardReq(betterproto.Message):
    reward_index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TakeEffigyRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    reward_index: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SelectEffigyChallengeConditionReq(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(15)
    challenge_id: int = betterproto.uint32_field(7)
    condition_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SelectEffigyChallengeConditionRsp(betterproto.Message):
    condition_id_list: List[int] = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(6)
    difficulty_id: int = betterproto.uint32_field(7)
    challenge_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RestartEffigyChallengeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RestartEffigyChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class TreasureMapRegionInfo(betterproto.Message):
    start_time: int = betterproto.uint32_field(6)
    current_progress: int = betterproto.uint32_field(11)
    is_done_mp_spot: bool = betterproto.bool_field(3)
    scene_id: int = betterproto.uint32_field(2)
    goal_points: int = betterproto.uint32_field(12)
    is_find_mp_spot: bool = betterproto.bool_field(4)
    region_radius: int = betterproto.uint32_field(1)
    region_center_pos: "Vector" = betterproto.message_field(9)
    region_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TreasureMapBonusChallengeInfo(betterproto.Message):
    is_done: bool = betterproto.bool_field(5)
    config_id: int = betterproto.uint32_field(10)
    is_active: bool = betterproto.bool_field(1)
    fragment_map: Dict[int, bool] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_BOOL
    )
    solution_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TreasureMapActivityDetailInfo(betterproto.Message):
    active_region_index: int = betterproto.uint32_field(1)
    region_info_list: List["TreasureMapRegionInfo"] = betterproto.message_field(6)
    is_mp_challenge_touched: bool = betterproto.bool_field(7)
    treasure_close_time: int = betterproto.uint32_field(10)
    bonus_challenge_list: List[
        "TreasureMapBonusChallengeInfo"
    ] = betterproto.message_field(5)
    currency_num: int = betterproto.uint32_field(2)
    preview_reward_id: int = betterproto.uint32_field(14)
    min_open_player_level: int = betterproto.uint32_field(8)
    total_mp_spot_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TreasureMapRegionInfoNotify(betterproto.Message):
    region_info: "TreasureMapRegionInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class TreasureMapCurrencyNotify(betterproto.Message):
    currency_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TreasureMapRegionActiveNotify(betterproto.Message):
    active_region_index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TreasureMapMpChallengeNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TreasureMapBonusChallengeNotify(betterproto.Message):
    info: "TreasureMapBonusChallengeInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TreasureMapGuideTaskDoneNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TreasureMapPreTaskDoneNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingActivityDetailInfo(betterproto.Message):
    cur_day_scan_type: int = betterproto.uint32_field(9)
    is_content_closed: bool = betterproto.bool_field(11)
    pic_num_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    content_close_time: int = betterproto.uint32_field(2)
    cur_day_scan_num: int = betterproto.uint32_field(4)
    redeem_reward_num: int = betterproto.uint32_field(1)
    is_activated: bool = betterproto.bool_field(13)
    next_refresh_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BlessingScanReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BlessingScanRsp(betterproto.Message):
    scan_pic_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(11)
    cur_day_scan_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BlessingRedeemRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingRedeemRewardRsp(betterproto.Message):
    pic_num_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class BlessingFriendPicData(betterproto.Message):
    pic_num_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    avatar_id: int = betterproto.uint32_field(5)
    remark_name: str = betterproto.string_field(11)
    nickname: str = betterproto.string_field(14)
    signature: str = betterproto.string_field(1)
    profile_picture: "ProfilePicture" = betterproto.message_field(6)
    uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class BlessingRecvPicRecord(betterproto.Message):
    nickname: str = betterproto.string_field(1)
    remark_name: str = betterproto.string_field(2)
    pic_id: int = betterproto.uint32_field(3)
    uid: int = betterproto.uint32_field(5)
    avatar_id: int = betterproto.uint32_field(6)
    signature: str = betterproto.string_field(10)
    index: int = betterproto.uint32_field(14)
    is_recv: bool = betterproto.bool_field(7)
    profile_picture: "ProfilePicture" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class BlessingGetFriendPicListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingGetFriendPicListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    friend_pic_data_list: List["BlessingFriendPicData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class BlessingGiveFriendPicReq(betterproto.Message):
    uid: int = betterproto.uint32_field(11)
    pic_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BlessingGiveFriendPicRsp(betterproto.Message):
    pic_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(11)
    uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BlessingAcceptGivePicReq(betterproto.Message):
    index: int = betterproto.uint32_field(9)
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BlessingAcceptGivePicRsp(betterproto.Message):
    pic_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(13)
    index: int = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class BlessingGetAllRecvPicRecordListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingGetAllRecvPicRecordListRsp(betterproto.Message):
    recv_pic_record_list: List["BlessingRecvPicRecord"] = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class BlessingRecvFriendPicNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(15)
    pic_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BlessingAcceptAllGivePicReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BlessingAcceptAllGivePicRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    accept_pic_num_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    accept_index_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ExpeditionPathInfo(betterproto.Message):
    mark_id: int = betterproto.uint32_field(12)
    start_time: int = betterproto.uint32_field(9)
    assist_avatar_id: int = betterproto.uint32_field(7)
    bonus_probability: float = betterproto.float_field(4)
    state: "ExpeditionState" = betterproto.enum_field(15)
    avatar_id_list: List[int] = betterproto.uint32_field(2)
    assist_costume_id: int = betterproto.uint32_field(5)
    path_id: int = betterproto.uint32_field(8)
    challenge_id: int = betterproto.uint32_field(11)
    assist_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ExpeditionChallengeInfo(betterproto.Message):
    is_finished: bool = betterproto.bool_field(5)
    id: int = betterproto.uint32_field(11)
    open_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ExpeditionActivityDetailInfo(betterproto.Message):
    cur_challenge_id: int = betterproto.uint32_field(5)
    challenge_info_list: List["ExpeditionChallengeInfo"] = betterproto.message_field(10)
    expedition_count: int = betterproto.uint32_field(2)
    content_close_time: int = betterproto.uint32_field(4)
    is_content_closed: bool = betterproto.bool_field(8)
    path_info_list: List["ExpeditionPathInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ExpeditionStartReq(betterproto.Message):
    avatar_id_list: List[int] = betterproto.uint32_field(1)
    assist_uid: int = betterproto.uint32_field(5)
    assist_avatar_id: int = betterproto.uint32_field(8)
    path_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ExpeditionStartRsp(betterproto.Message):
    assist_uid: int = betterproto.uint32_field(1)
    path_id: int = betterproto.uint32_field(7)
    avatar_id_list: List[int] = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(12)
    assist_avatar_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExpeditionRecallReq(betterproto.Message):
    path_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ExpeditionRecallRsp(betterproto.Message):
    path_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class ExpeditionTakeRewardReq(betterproto.Message):
    path_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ExpeditionTakeRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    is_bonus: bool = betterproto.bool_field(11)
    reward_level: int = betterproto.uint32_field(1)
    path_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ExpeditionAssistInfo(betterproto.Message):
    online_id: str = betterproto.string_field(14)
    assist_time: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(6)
    target_nick_name: str = betterproto.string_field(4)
    avatar_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetExpeditionAssistInfoListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetExpeditionAssistInfoListRsp(betterproto.Message):
    assist_info_list: List["ExpeditionAssistInfo"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class SetCurExpeditionChallengeIdReq(betterproto.Message):
    id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SetCurExpeditionChallengeIdRsp(betterproto.Message):
    id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ExpeditionChallengeEnterRegionNotify(betterproto.Message):
    id: int = betterproto.uint32_field(5)
    is_puzzle_finished: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class ExpeditionChallengeFinishedNotify(betterproto.Message):
    id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class WaterSpiritActivityDetailInfo(betterproto.Message):
    search_time_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    region_search_id: int = betterproto.uint32_field(2)
    mp_play_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class FleurFairChapterInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(15)
    chapter_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FleurFairBalloonInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FleurFairFallInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FleurFairMusicRecord(betterproto.Message):
    max_combo: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(11)
    is_unlock: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class FleurFairMusicGameInfo(betterproto.Message):
    music_record_map: Dict[int, "FleurFairMusicRecord"] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FleurFairMinigameInfo(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(13)
    is_open: bool = betterproto.bool_field(8)
    open_time: int = betterproto.uint32_field(15)
    balloon_info: "FleurFairBalloonInfo" = betterproto.message_field(12, group="detail")
    fall_info: "FleurFairFallInfo" = betterproto.message_field(11, group="detail")
    music_info: "FleurFairMusicGameInfo" = betterproto.message_field(9, group="detail")


@dataclass(eq=False, repr=False)
class FleurFairDungeonSectionInfo(betterproto.Message):
    section_id: int = betterproto.uint32_field(10)
    open_time: int = betterproto.uint32_field(13)
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class FleurFairActivityDetailInfo(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(4)
    dungeon_punish_over_time: int = betterproto.uint32_field(6)
    content_close_time: int = betterproto.uint32_field(15)
    obtained_token: int = betterproto.uint32_field(13)
    chapter_info_list: List["FleurFairChapterInfo"] = betterproto.message_field(14)
    minigame_info_map: Dict[int, "FleurFairMinigameInfo"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    dungeon_section_info_map: Dict[
        int, "FleurFairDungeonSectionInfo"
    ] = betterproto.map_field(3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    is_dungeon_unlocked: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class FleurFairBalloonSettleInfo(betterproto.Message):
    settle_info: "BalloonSettleInfo" = betterproto.message_field(10)
    is_new_record: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class FleurFairFallSettleInfo(betterproto.Message):
    settle_info: "FallSettleInfo" = betterproto.message_field(4)
    is_new_record: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class FleurFairBalloonSettleNotify(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(9)
    settle_info_map: Dict[int, "FleurFairBalloonSettleInfo"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FleurFairFallSettleNotify(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(15)
    settle_info_map: Dict[int, "FleurFairFallSettleInfo"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FleurFairMusicGameSettleReq(betterproto.Message):
    score: int = betterproto.uint32_field(3)
    combo: int = betterproto.uint32_field(6)
    correct_hit: int = betterproto.uint32_field(10)
    music_basic_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FleurFairMusicGameSettleRsp(betterproto.Message):
    is_unlock_next_level: bool = betterproto.bool_field(4)
    is_new_record: bool = betterproto.bool_field(12)
    retcode: int = betterproto.int32_field(5)
    music_basic_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FleurFairMusicGameStartReq(betterproto.Message):
    music_basic_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FleurFairMusicGameStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    music_basic_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FleurFairReplayMiniGameReq(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FleurFairReplayMiniGameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    minigame_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ArenaChallengeMonsterLevel(betterproto.Message):
    arena_challenge_level: int = betterproto.uint32_field(7)
    arena_challenge_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ArenaChallengeActivityDetailInfo(betterproto.Message):
    is_finish_any_level: bool = betterproto.bool_field(14)
    level_open_time_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    world_level: int = betterproto.uint32_field(15)
    level_list: List["ArenaChallengeMonsterLevel"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class StartArenaChallengeLevelReq(betterproto.Message):
    arena_challenge_id: int = betterproto.uint32_field(4)
    gadget_entity_id: int = betterproto.uint32_field(5)
    arena_challenge_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StartArenaChallengeLevelRsp(betterproto.Message):
    arena_challenge_level: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(9)
    gadget_entity_id: int = betterproto.uint32_field(3)
    arena_challenge_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ArenaChallengeChildChallengeInfo(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(12)
    challenge_type: int = betterproto.uint32_field(5)
    challenge_index: int = betterproto.uint32_field(4)
    is_success: bool = betterproto.bool_field(7)
    is_settled: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class ArenaChallengeFinishNotify(betterproto.Message):
    arena_challenge_level: int = betterproto.uint32_field(13)
    arena_challenge_id: int = betterproto.uint32_field(3)
    child_challenge_list: List[
        "ArenaChallengeChildChallengeInfo"
    ] = betterproto.message_field(2)
    is_success: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class WaterSpritePhaseFinishNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardBatchReq(betterproto.Message):
    watcher_id_list: List[int] = betterproto.uint32_field(11)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityTakeWatcherRewardBatchRsp(betterproto.Message):
    watcher_id_list: List[int] = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(15)
    activity_id: int = betterproto.uint32_field(7)
    item_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChannelerSlabCamp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(11)
    pos: "Vector" = betterproto.message_field(8)
    buff_num: int = betterproto.uint32_field(7)
    group_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannelerSlabChallenge(betterproto.Message):
    active_camp_index: int = betterproto.uint32_field(5)
    camp_list: List["ChannelerSlabCamp"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ChannelerSlabOneoffDungeon(betterproto.Message):
    is_done: bool = betterproto.bool_field(8)
    dungeon_id: int = betterproto.uint32_field(12)
    reward_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ChannelerSlabChallengeStage(betterproto.Message):
    open_time: int = betterproto.uint32_field(3)
    challenge_list: List["ChannelerSlabChallenge"] = betterproto.message_field(14)
    is_open: bool = betterproto.bool_field(7)
    stage_id: int = betterproto.uint32_field(9)
    dungeon_info: "ChannelerSlabOneoffDungeon" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ChannellerSlabBuffSchemeInfo(betterproto.Message):
    slot_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    total_energy: int = betterproto.uint32_field(13)
    self_energy: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ChannellerSlabAssistInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(10)
    avatar_level: int = betterproto.uint32_field(12)
    avatar_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChannellerSlabBuffInfo(betterproto.Message):
    mp_buff_scheme_info: "ChannellerSlabBuffSchemeInfo" = betterproto.message_field(6)
    buff_id_list: List[int] = betterproto.uint32_field(8)
    single_buff_scheme_info: "ChannellerSlabBuffSchemeInfo" = betterproto.message_field(
        7
    )
    assist_info_list: List["ChannellerSlabAssistInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonInfo(betterproto.Message):
    score: int = betterproto.uint32_field(7)
    dungeon_index: int = betterproto.uint32_field(4)
    open_time: int = betterproto.uint32_field(12)
    is_first_pass_reward_taken: bool = betterproto.bool_field(9)
    last_condition_id_list: List[int] = betterproto.uint32_field(14)
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonStageInfo(betterproto.Message):
    dungeon_info_list: List[
        "ChannellerSlabLoopDungeonInfo"
    ] = betterproto.message_field(15)
    taken_reward_index_list: List[int] = betterproto.uint32_field(5)
    is_open: bool = betterproto.bool_field(11)
    last_difficulty_id: int = betterproto.uint32_field(6)
    open_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannelerSlabActivityDetailInfo(betterproto.Message):
    buff_info: "ChannellerSlabBuffInfo" = betterproto.message_field(1)
    loop_dungeon_stage_info: "ChannellerSlabLoopDungeonStageInfo" = (
        betterproto.message_field(7)
    )
    stage_list: List["ChannelerSlabChallengeStage"] = betterproto.message_field(15)
    play_end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannelerSlabStageActiveChallengeIndexNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(15)
    challenge_index: int = betterproto.uint32_field(12)
    active_camp_index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChannelerSlabStageOneoffDungeonNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(2)
    is_done: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabWearBuffReq(betterproto.Message):
    buff_id: int = betterproto.uint32_field(3)
    is_mp: bool = betterproto.bool_field(5)
    slot_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ChannellerSlabWearBuffRsp(betterproto.Message):
    buff_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(1)
    is_mp: bool = betterproto.bool_field(9)
    slot_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabTakeoffBuffReq(betterproto.Message):
    is_mp: bool = betterproto.bool_field(10)
    slot_id: int = betterproto.uint32_field(12)
    buff_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ChannellerSlabTakeoffBuffRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    is_mp: bool = betterproto.bool_field(13)
    buff_id: int = betterproto.uint32_field(14)
    slot_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabEnterLoopDungeonReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(9)
    dungeon_index: int = betterproto.uint32_field(10)
    condition_id_list: List[int] = betterproto.uint32_field(5)
    difficulty_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChannellerSlabEnterLoopDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    point_id: int = betterproto.uint32_field(12)
    condition_id_list: List[int] = betterproto.uint32_field(6)
    dungeon_index: int = betterproto.uint32_field(15)
    difficulty_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeFirstPassRewardReq(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeFirstPassRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    dungeon_index: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeScoreRewardReq(betterproto.Message):
    reward_index: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonTakeScoreRewardRsp(betterproto.Message):
    reward_index: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonChallengeInfoNotify(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(12)
    challenge_score: int = betterproto.uint32_field(4)
    difficulty_id: int = betterproto.uint32_field(2)
    condition_id_list: List[int] = betterproto.uint32_field(3)
    scheme_buff_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonSelectConditionReq(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(4)
    condition_id_list: List[int] = betterproto.uint32_field(3)
    difficulty_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonSelectConditionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    dungeon_index: int = betterproto.uint32_field(5)
    condition_id_list: List[int] = betterproto.uint32_field(13)
    difficulty_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonResultInfo(betterproto.Message):
    is_success: bool = betterproto.bool_field(11)
    challenge_max_score: int = betterproto.uint32_field(8)
    dungeon_index: int = betterproto.uint32_field(7)
    is_in_time_limit: bool = betterproto.bool_field(10)
    challenge_score: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChannellerSlabOneOffDungeonInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChannellerSlabOneOffDungeonInfoRsp(betterproto.Message):
    scheme_buff_id_list: List[int] = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ChannellerSlabOneOffDungeonInfoNotify(betterproto.Message):
    scheme_buff_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChannellerSlabSaveAssistInfoReq(betterproto.Message):
    assist_info_list: List["ChannellerSlabAssistInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ChannellerSlabSaveAssistInfoRsp(betterproto.Message):
    assist_info_list: List["ChannellerSlabAssistInfo"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class MistTrialLevelData(betterproto.Message):
    open_time: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(12)
    level_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MistTrialActivityDetailInfo(betterproto.Message):
    trial_level_data_list: List["MistTrialLevelData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MistTrialSelectAvatarAndEnterDungeonReq(betterproto.Message):
    trial_id: int = betterproto.uint32_field(4)
    select_trial_avatar_id_list: List[int] = betterproto.uint32_field(10)
    enter_point_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MistTrialSelectAvatarAndEnterDungeonRsp(betterproto.Message):
    trial_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class MistTrialMissionInfo(betterproto.Message):
    param: int = betterproto.uint32_field(9)
    watcher_list_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MistTrialGetChallengeMissionReq(betterproto.Message):
    trial_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MistTrialGetChallengeMissionRsp(betterproto.Message):
    trial_id: int = betterproto.uint32_field(1)
    mission_info_list: List["MistTrialMissionInfo"] = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class MistTrialDunegonFailNotify(betterproto.Message):
    dungeon_id: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ChannellerSlabCheckEnterLoopDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChannellerSlabCheckEnterLoopDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HideAndSeekMapInfo(betterproto.Message):
    match_lock_reason_list: List[int] = betterproto.uint32_field(11)
    id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HideAndSeekActivityDetailInfo(betterproto.Message):
    open_map_info_list: List["HideAndSeekMapInfo"] = betterproto.message_field(1)
    chosen_hunter_skill_list: List[int] = betterproto.uint32_field(4)
    unlock_map_list: List[int] = betterproto.uint32_field(13)
    chosen_hider_skill_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectSkillReq(betterproto.Message):
    skill_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HideAndSeekSelectSkillRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    skill_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ActivityTakeScoreRewardReq(betterproto.Message):
    reward_config_id: int = betterproto.uint32_field(12)
    activity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ActivityTakeScoreRewardRsp(betterproto.Message):
    activity_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(9)
    reward_config_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ActivityTakeAllScoreRewardReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ActivityTakeAllScoreRewardRsp(betterproto.Message):
    reward_config_list: List[int] = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(15)
    activity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FindHilichurlDayContentInfo(betterproto.Message):
    start_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FindHilichurlDetailInfo(betterproto.Message):
    day_content_info_list: List[
        "FindHilichurlDayContentInfo"
    ] = betterproto.message_field(1)
    min_open_player_level: int = betterproto.uint32_field(12)
    is_end_quest_accept: bool = betterproto.bool_field(7)
    content_close_time: int = betterproto.uint32_field(6)
    is_content_closed: bool = betterproto.bool_field(9)
    player_day_index: int = betterproto.uint32_field(4)
    day_index: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class CommonPlayerTipsNotify(betterproto.Message):
    notify_type: int = betterproto.uint32_field(3)
    text_map_id_list: List[str] = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class FindHilichurlFinishSecondQuestNotify(betterproto.Message):
    day_index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FindHilichurlAcceptQuestNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatRecord(betterproto.Message):
    best_score: int = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(13)
    is_touched: bool = betterproto.bool_field(7)
    watcher_id_list: List[int] = betterproto.uint32_field(10)
    group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatInfo(betterproto.Message):
    record_list: List["SummerTimeSprintBoatRecord"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SummerTimeDetailInfo(betterproto.Message):
    stage_map: Dict[int, "SummerTimeStageInfo"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    content_close_time: int = betterproto.uint32_field(11)
    is_content_closed: bool = betterproto.bool_field(13)
    sprint_boat_info: "SummerTimeSprintBoatInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SummerTimeStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(13)
    open_time: int = betterproto.uint32_field(10)
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SummerTimeFloatSignalPositionNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(1)
    is_transfer_anchor: bool = betterproto.bool_field(5)
    float_signal_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SummerTimeFloatSignalUpdateNotify(betterproto.Message):
    is_transfer_anchor: bool = betterproto.bool_field(4)
    float_signal_id: int = betterproto.uint32_field(8)
    position: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatSettleNotify(betterproto.Message):
    total_num: int = betterproto.uint32_field(13)
    group_id: int = betterproto.uint32_field(12)
    is_success: bool = betterproto.bool_field(15)
    collect_num: int = betterproto.uint32_field(6)
    left_time: int = betterproto.uint32_field(8)
    medal_level: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(10)
    is_new_record: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatRestartReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(10)
    schedule_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    schedule_id: int = betterproto.uint32_field(5)
    group_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BuoyantCombatDailyInfo(betterproto.Message):
    start_time: int = betterproto.uint32_field(2)
    best_score: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BuoyantCombatDetailInfo(betterproto.Message):
    daily_info_list: List["BuoyantCombatDailyInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class StartBuoyantCombatGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(15)
    gallery_level: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class StartBuoyantCombatGalleryRsp(betterproto.Message):
    gallery_level: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(5)
    gallery_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BuoyantCombatSettleInfo(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(1)
    settle_info: "BuoyantCombatGallerySettleInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BuoyantCombatSettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(8)
    settle_info: "BuoyantCombatSettleInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class SetLimitOptimizationNotify(betterproto.Message):
    is_active: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SummerTimeDungeonInfo(betterproto.Message):
    taken_chest_count: int = betterproto.uint32_field(15)
    total_chest_count: int = betterproto.uint32_field(12)
    taken_shell_count: int = betterproto.uint32_field(14)
    dungeon_id: int = betterproto.uint32_field(4)
    total_shell_count: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EchoShellDetailInfo(betterproto.Message):
    summer_time_dungeon_list: List["SummerTimeDungeonInfo"] = betterproto.message_field(
        8
    )
    shell_list: List[int] = betterproto.uint32_field(13)
    pass_dungeon_list: List[int] = betterproto.uint32_field(4)
    taken_reward_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class EchoShellUpdateNotify(betterproto.Message):
    shell_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EchoShellTakeRewardReq(betterproto.Message):
    reward_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EchoShellTakeRewardRsp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class BounceConjuringChapterInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(12)
    open_time: int = betterproto.uint32_field(9)
    chapter_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BounceConjuringActivityDetailInfo(betterproto.Message):
    chapter_info_list: List["BounceConjuringChapterInfo"] = betterproto.message_field(8)
    is_content_closed: bool = betterproto.bool_field(12)
    content_close_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class BounceConjuringSettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(14)
    settle_info_map: Dict[
        int, "BounceConjuringGallerySettleInfo"
    ] = betterproto.map_field(4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    total_score: int = betterproto.uint32_field(2)
    chapter_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BlitzRushStage(betterproto.Message):
    is_open: bool = betterproto.bool_field(13)
    open_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ParkourLevelInfo(betterproto.Message):
    best_record: int = betterproto.uint32_field(12)
    is_open: bool = betterproto.bool_field(9)
    open_time: int = betterproto.uint32_field(7)
    pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BlitzRushActivityDetailInfo(betterproto.Message):
    stage_list: List["BlitzRushStage"] = betterproto.message_field(10)
    content_close_time: int = betterproto.uint32_field(14)
    is_content_closed: bool = betterproto.bool_field(2)
    parkour_level_info_list: List["ParkourLevelInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class BlitzRushParkourRestartReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)
    group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BlitzRushParkourRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    group_id: int = betterproto.uint32_field(15)
    schedule_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChessActivityDetailInfo(betterproto.Message):
    level: int = betterproto.uint32_field(4)
    is_teach_dungeon_finished: bool = betterproto.bool_field(9)
    content_close_time: int = betterproto.uint32_field(14)
    obtained_exp: int = betterproto.uint32_field(8)
    is_content_closed: bool = betterproto.bool_field(5)
    available_exp: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(13)
    finished_map_id_list: List[int] = betterproto.uint32_field(1)
    punish_over_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EnterChessDungeonReq(betterproto.Message):
    map_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EnterChessDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    map_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TreasureMapHostInfoNotify(betterproto.Message):
    mp_challenge_region_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SumoActivityDetailInfo(betterproto.Message):
    difficulty_id: int = betterproto.uint32_field(11)
    sumo_stage_map: Dict[int, "SumoStageData"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    last_stage_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SumoAvatarInfo(betterproto.Message):
    is_trial: bool = betterproto.bool_field(2)
    avatar_id: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class SumoTeamData(betterproto.Message):
    skill_id_list: List[int] = betterproto.uint32_field(14)
    avatar_info_list: List["SumoAvatarInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SumoStageData(betterproto.Message):
    max_score: int = betterproto.uint32_field(1)
    open_time: int = betterproto.uint32_field(5)
    stage_id: int = betterproto.uint32_field(3)
    team_list: List["SumoTeamData"] = betterproto.message_field(7)
    is_open: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class SumoSaveTeamReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(11)
    stage_id: int = betterproto.uint32_field(13)
    difficulty_id: int = betterproto.uint32_field(7)
    team_list: List["SumoTeamData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SumoSaveTeamRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(2)
    activity_id: int = betterproto.uint32_field(11)
    team_list: List["SumoTeamData"] = betterproto.message_field(13)
    difficulty_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SumoSelectTeamAndEnterDungeonReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(7)
    difficulty_id: int = betterproto.uint32_field(4)
    team_list: List["SumoTeamData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class SumoSelectTeamAndEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    activity_id: int = betterproto.uint32_field(14)
    difficulty_id: int = betterproto.uint32_field(12)
    stage_id: int = betterproto.uint32_field(9)
    team_list: List["SumoTeamData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SumoDungeonSettleNotify(betterproto.Message):
    final_score: int = betterproto.uint32_field(7)
    difficulty_id: int = betterproto.uint32_field(14)
    kill_elite_monster_num: int = betterproto.uint32_field(15)
    stage_id: int = betterproto.uint32_field(12)
    kill_monster_num: int = betterproto.uint32_field(4)
    is_new_record: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SumoDungeonAvatar(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(11)
    is_avlive: bool = betterproto.bool_field(13)
    is_trial: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class SumoDungeonTeam(betterproto.Message):
    dungeon_avatar_list: List["SumoDungeonAvatar"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class SumoEnterDungeonNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(15)
    dungeon_team_list: List["SumoDungeonTeam"] = betterproto.message_field(11)
    no_switch_punish_time: int = betterproto.uint32_field(10)
    next_valid_switch_time: int = betterproto.uint32_field(13)
    stage_id: int = betterproto.uint32_field(7)
    cur_team_index: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SumoSwitchTeamReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(9)
    activity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SumoSwitchTeamRsp(betterproto.Message):
    next_valid_switch_time: int = betterproto.uint32_field(7)
    dungeon_team_list: List["SumoDungeonTeam"] = betterproto.message_field(10)
    activity_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(14)
    cur_team_index: int = betterproto.uint32_field(11)
    stage_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SumoLeaveDungeonNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SumoRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SumoRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    dungeon_id: int = betterproto.uint32_field(4)
    point_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ActivityDisableTransferPointInteractionNotify(betterproto.Message):
    is_disable: bool = betterproto.bool_field(10)
    scene_point_pair: "Uint32Pair" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SumoSetNoSwitchPunishTimeNotify(betterproto.Message):
    cur_team_index: int = betterproto.uint32_field(15)
    stage_id: int = betterproto.uint32_field(13)
    dungeon_team_list: List["SumoDungeonTeam"] = betterproto.message_field(11)
    no_switch_punish_time: int = betterproto.uint32_field(2)
    next_valid_switch_time: int = betterproto.uint32_field(14)
    activity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MoonfinTrialLevelInfo(betterproto.Message):
    best_record: int = betterproto.uint32_field(3)
    open_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MoonfinTrialActivityDetailInfo(betterproto.Message):
    level_info_map: Dict[int, "MoonfinTrialLevelInfo"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    special_fish_count: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FishingGallerySettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(6)
    level_id: int = betterproto.uint32_field(15)
    settle_info: "FishingGallerySettleInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class LunaRiteHintPoint(betterproto.Message):
    area_id: int = betterproto.uint32_field(11)
    index: int = betterproto.uint32_field(7)
    type: "LunaRiteHintPointType" = betterproto.enum_field(2)
    pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class LunaRiteAreaInfo(betterproto.Message):
    sacrifice_list: List[int] = betterproto.uint32_field(11)
    hint_status: "LunaRiteHintStatusType" = betterproto.enum_field(7)
    sacrifice_reward_list: List[int] = betterproto.uint32_field(4)
    area_id: int = betterproto.uint32_field(8)
    challenge_index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class LunaRiteDetailInfo(betterproto.Message):
    hint_point: List["LunaRiteHintPoint"] = betterproto.message_field(3)
    area_info_list: List["LunaRiteAreaInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class LunaRiteSacrificeReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(15)
    index: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LunaRiteSacrificeRsp(betterproto.Message):
    area_id: int = betterproto.uint32_field(13)
    sacrifice_list: List[int] = betterproto.uint32_field(14)
    index: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class LunaRiteTakeSacrificeRewardReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(11)
    index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LunaRiteTakeSacrificeRewardRsp(betterproto.Message):
    index: int = betterproto.uint32_field(11)
    sacrifice_reward_list: List[int] = betterproto.uint32_field(2)
    sacrifice_reward_index: int = betterproto.uint32_field(14)
    area_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class LunaRiteHintPointReq(betterproto.Message):
    area_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LunaRiteHintPointRsp(betterproto.Message):
    hint_status: "LunaRiteHintStatusType" = betterproto.enum_field(4)
    area_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(13)
    hint_point: List["LunaRiteHintPoint"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class LunaRiteHintPointRemoveNotify(betterproto.Message):
    hint_point_index: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LunaRiteGroupBundleRegisterNotify(betterproto.Message):
    group_link_bundle_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class LunaRiteAreaFinishNotify(betterproto.Message):
    area_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlantFlowerActivityDetailInfo(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(3)
    wish_flower_num_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    today_seed_reward_id: int = betterproto.uint32_field(11)
    day_index: int = betterproto.uint32_field(1)
    is_today_has_awarded: bool = betterproto.bool_field(13)
    used_flower_num_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerGetSeedInfoReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlantFlowerGetSeedInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    schedule_id: int = betterproto.uint32_field(12)
    seed_reward_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlantFlowerTakeSeedRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlantFlowerTakeSeedRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    schedule_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlantFlowerSetFlowerWishReq(betterproto.Message):
    flower_num_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlantFlowerSetFlowerWishRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class PlantFlowerGetFriendFlowerWishListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlantFlowerFriendFlowerWishData(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(3)
    uid: int = betterproto.uint32_field(5)
    nickname: str = betterproto.string_field(14)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerGetFriendFlowerWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    schedule_id: int = betterproto.uint32_field(2)
    friend_flower_wish_list: List[
        "PlantFlowerFriendFlowerWishData"
    ] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class PlantFlowerGiveFriendFlowerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(11)
    uid: int = betterproto.uint32_field(13)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerGiveFriendFlowerRsp(betterproto.Message):
    limit_flower_list: List[int] = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(3)
    schedule_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlantFlowerGetRecvFlowerListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlantFlowerRecvFlowerData(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(13)
    nickname: str = betterproto.string_field(5)
    uid: int = betterproto.uint32_field(9)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerGetRecvFlowerListRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(1)
    recv_flower_list: List["PlantFlowerRecvFlowerData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlantFlowerHaveRecvFlowerNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptGiveFlowerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(2)
    uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptFlowerResultInfo(betterproto.Message):
    unaccept_flower_num_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    uid: int = betterproto.uint32_field(7)
    accept_flower_num_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptGiveFlowerRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    accept_flower_result_info: "PlantFlowerAcceptFlowerResultInfo" = (
        betterproto.message_field(15)
    )
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptAllGiveFlowerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PlantFlowerAcceptAllGiveFlowerRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(11)
    accept_flower_result_info_list: List[
        "PlantFlowerAcceptFlowerResultInfo"
    ] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class PlantFlowerGetCanGiveFriendFlowerReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlantFlowerGetCanGiveFriendFlowerRsp(betterproto.Message):
    flower_num_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class PlantFlowerEditFlowerCombinationReq(betterproto.Message):
    flower_combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(10)
    entity_id: int = betterproto.uint32_field(14)
    schedule_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlantFlowerEditFlowerCombinationRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class MusicGameRecord(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(9)
    max_score: int = betterproto.uint32_field(11)
    max_combo: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MusicGameActivityDetailInfo(betterproto.Message):
    ugc_record_list: List["UgcMusicBriefInfo"] = betterproto.message_field(4)
    ugc_search_list: List["UgcMusicBriefInfo"] = betterproto.message_field(7)
    music_game_record_map: Dict[int, "MusicGameRecord"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class MusicGameSettleReq(betterproto.Message):
    button_list: List[int] = betterproto.uint32_field(384)
    delay: int = betterproto.uint32_field(795)
    note_list: List[int] = betterproto.uint32_field(4)
    score_rating: int = betterproto.uint32_field(15)
    score: int = betterproto.uint32_field(9)
    ugc_guid: int = betterproto.uint64_field(6)
    restart_times: int = betterproto.uint32_field(13)
    is_custom_delay: bool = betterproto.bool_field(422)
    max_combo: int = betterproto.uint32_field(5)
    is_full_combo: int = betterproto.uint32_field(1058)
    speed: float = betterproto.float_field(409)
    is_save_score: bool = betterproto.bool_field(3)
    combo: int = betterproto.uint32_field(1)
    music_basic_id: int = betterproto.uint32_field(7)
    star_rating: int = betterproto.uint32_field(2)
    volume: int = betterproto.uint32_field(1953)
    correct_hit: int = betterproto.uint32_field(14)
    is_custom_speed: bool = betterproto.bool_field(1285)


@dataclass(eq=False, repr=False)
class MusicGameSettleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    music_basic_id: int = betterproto.uint32_field(5)
    is_new_record: bool = betterproto.bool_field(6)
    is_unlock_next_level: bool = betterproto.bool_field(2)
    ugc_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class MusicGameStartReq(betterproto.Message):
    music_basic_id: int = betterproto.uint32_field(2)
    is_save_score: bool = betterproto.bool_field(11)
    ugc_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class MusicGameStartRsp(betterproto.Message):
    music_basic_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(1)
    ugc_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class RogueAvatarInfo(betterproto.Message):
    is_onstage: bool = betterproto.bool_field(5)
    is_alive: bool = betterproto.bool_field(3)
    avatar_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class RogueShowAvatarTeamInfo(betterproto.Message):
    avatar_list: List["RogueAvatarInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class RoguelikeShikigamiRecord(betterproto.Message):
    id: int = betterproto.uint32_field(6)
    level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RogueEffectRecord(betterproto.Message):
    source_id: int = betterproto.uint32_field(6)
    extra_param_list: List[int] = betterproto.uint32_field(9)
    count: int = betterproto.uint32_field(10)
    is_new: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class RoguelikeRuneRecord(betterproto.Message):
    left_count: int = betterproto.uint32_field(14)
    rune_id: int = betterproto.uint32_field(6)
    max_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RogueStageInfo(betterproto.Message):
    avatar_team: "RogueShowAvatarTeamInfo" = betterproto.message_field(2)
    is_passed: bool = betterproto.bool_field(5)
    stage_id: int = betterproto.uint32_field(7)
    revise_monster_level: int = betterproto.uint32_field(205)
    rune_record_list: List["RoguelikeRuneRecord"] = betterproto.message_field(6)
    is_open: bool = betterproto.bool_field(1)
    cur_level: int = betterproto.uint32_field(4)
    cached_coin_c_num: int = betterproto.uint32_field(1409)
    is_taken_reward: bool = betterproto.bool_field(11)
    is_in_combat: bool = betterproto.bool_field(12)
    cached_coin_b_num: int = betterproto.uint32_field(14)
    explore_cell_num: int = betterproto.uint32_field(15)
    coin_c_num: int = betterproto.uint32_field(8)
    is_explored: bool = betterproto.bool_field(9)
    max_passed_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonActivityDetailInfo(betterproto.Message):
    stage_list: List["RogueStageInfo"] = betterproto.message_field(8)
    shikigami_list: List["RoguelikeShikigamiRecord"] = betterproto.message_field(5)
    equipped_rune_list: List[int] = betterproto.uint32_field(14)
    content_close_time: int = betterproto.uint32_field(6)
    is_content_closed: bool = betterproto.bool_field(10)
    rune_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DoRoguelikeDungeonCardGachaReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(13)
    cell_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DoRoguelikeDungeonCardGachaRsp(betterproto.Message):
    is_can_refresh: bool = betterproto.bool_field(8)
    card_list: List[int] = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class RefreshRoguelikeDungeonCardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefreshRoguelikeDungeonCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    res_card_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SelectRoguelikeDungeonCardReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SelectRoguelikeDungeonCardRsp(betterproto.Message):
    card_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class EquipRoguelikeRuneReq(betterproto.Message):
    rune_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EquipRoguelikeRuneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    rune_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TriggerRoguelikeRuneReq(betterproto.Message):
    rune_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TriggerRoguelikeRuneRsp(betterproto.Message):
    available_count: int = betterproto.uint32_field(4)
    rune_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class TriggerRoguelikeCurseNotify(betterproto.Message):
    effect_param_list: List[int] = betterproto.uint32_field(14)
    curse_group_id: int = betterproto.uint32_field(9)
    is_trigger_curse: bool = betterproto.bool_field(13)
    curse_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UpgradeRoguelikeShikigamiReq(betterproto.Message):
    upgrade_level: int = betterproto.uint32_field(6)
    shikigami_group_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class UpgradeRoguelikeShikigamiRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    shikigami_group_id: int = betterproto.uint32_field(14)
    cur_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RoguelikeSelectAvatarAndEnterDungeonReq(betterproto.Message):
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(14)
    stage_id: int = betterproto.uint32_field(4)
    backstage_avatar_guid_list: List[int] = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class RoguelikeSelectAvatarAndEnterDungeonRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeGiveUpReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class RoguelikeGiveUpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    stage_id: int = betterproto.uint32_field(7)
    settle_info: "RoguelikeDungeonSettleInfo" = betterproto.message_field(
        8, group="info"
    )


@dataclass(eq=False, repr=False)
class RoguelikeTakeStageFirstPassRewardReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeTakeStageFirstPassRewardRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GiveUpRoguelikeDungeonCardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GiveUpRoguelikeDungeonCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class RogueCellInfo(betterproto.Message):
    cell_config_id: int = betterproto.uint32_field(14)
    dungeon_id: int = betterproto.uint32_field(4)
    cell_id: int = betterproto.uint32_field(9)
    cell_type: int = betterproto.uint32_field(13)
    state: "RogueCellState" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class EnterRoguelikeDungeonNotify(betterproto.Message):
    is_mist_clear: bool = betterproto.bool_field(14)
    dungeon_weight_config_id: int = betterproto.uint32_field(2)
    rune_record_list: List["RoguelikeRuneRecord"] = betterproto.message_field(6)
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(9)
    is_first_enter: bool = betterproto.bool_field(205)
    explored_cell_list: List[int] = betterproto.uint32_field(3)
    cell_info_map: Dict[int, "RogueCellInfo"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    dungeon_id: int = betterproto.uint32_field(1)
    refresh_cost_item_count: int = betterproto.uint32_field(1999)
    bonus_resource_prop: float = betterproto.float_field(13)
    revise_monster_level: int = betterproto.uint32_field(1541)
    stage_id: int = betterproto.uint32_field(15)
    backstage_avatar_guid_list: List[int] = betterproto.uint64_field(10)
    cur_cell_id: int = betterproto.uint32_field(12)
    refresh_cost_item_id: int = betterproto.uint32_field(7)
    cur_level: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class StartRogueEliteCellChallengeReq(betterproto.Message):
    difficulty: "RogueEliteCellDifficultyType" = betterproto.enum_field(1)
    dungeon_id: int = betterproto.uint32_field(11)
    cell_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class StartRogueEliteCellChallengeRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(12)
    cell_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class StartRogueNormalCellChallengeReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(3)
    cell_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class StartRogueNormalCellChallengeRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(10)
    cell_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class RogueCellUpdateNotify(betterproto.Message):
    cell_info: "RogueCellInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class RogueDungeonPlayerCellChangeNotify(betterproto.Message):
    old_cell_id: int = betterproto.uint32_field(10)
    cell_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class RogueHealAvatarsReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    cell_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RogueHealAvatarsRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(9)
    cell_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class RogueResumeDungeonReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class RogueResumeDungeonRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ClearRoguelikeCurseNotify(betterproto.Message):
    clear_curse_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_clear_all: bool = betterproto.bool_field(11)
    card_id: int = betterproto.uint32_field(8)
    is_curse_all_clear: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeCardGachaNotify(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(10)
    is_can_refresh: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class RogueSwitchAvatarReq(betterproto.Message):
    cell_id: int = betterproto.uint32_field(15)
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(3)
    cur_avatar_guid: int = betterproto.uint64_field(11)
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RogueSwitchAvatarRsp(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(4)
    backstage_avatar_guid_list: List[int] = betterproto.uint64_field(8)
    dungeon_id: int = betterproto.uint32_field(14)
    cell_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(12)
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class DisableRoguelikeTrapNotify(betterproto.Message):
    card_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class RoguelikeRuneRecordUpdateNotify(betterproto.Message):
    rune_record_list: List["RoguelikeRuneRecord"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class RoguelikeMistClearNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RoguelikeEffectDataNotify(betterproto.Message):
    curse_list: List["RogueEffectRecord"] = betterproto.message_field(7)
    card_list: List["RogueEffectRecord"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class RoguelikeEffectViewReq(betterproto.Message):
    view_curse_list: List[int] = betterproto.uint32_field(10)
    view_card_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RoguelikeEffectViewRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class RoguelikeResourceBonusPropUpdateNotify(betterproto.Message):
    bonus_resource_prop: float = betterproto.float_field(12)


@dataclass(eq=False, repr=False)
class RoguelikeSettleCoinInfo(betterproto.Message):
    coin_c: int = betterproto.uint32_field(8)
    coin_b: int = betterproto.uint32_field(10)
    cell_num: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonSettleInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(5)
    is_final_level: bool = betterproto.bool_field(15)
    finished_challenge_cell_num_map: Dict[
        int, "RoguelikeSettleCoinInfo"
    ] = betterproto.map_field(3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    is_coin_c_reach_limit: bool = betterproto.bool_field(13)
    cur_level: int = betterproto.uint32_field(9)
    total_coin_b_num: int = betterproto.uint32_field(6)
    total_coin_c_num: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class RoguelikeRefreshCardCostUpdateNotify(betterproto.Message):
    item_count: int = betterproto.uint32_field(5)
    item_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DigMarkPoint(betterproto.Message):
    pos: "Vector" = betterproto.message_field(1)
    bundle_id: int = betterproto.uint32_field(13)
    rot: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class DigActivityDetailInfo(betterproto.Message):
    stage_id_list: List[int] = betterproto.uint32_field(15)
    dig_mark_point_list: List["DigMarkPoint"] = betterproto.message_field(11)
    stage_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DigActivityMarkPointChangeNotify(betterproto.Message):
    dig_mark_point_list: List["DigMarkPoint"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class DigActivityChangeGadgetStateReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DigActivityChangeGadgetStateRsp(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class HachiActivityDetailInfo(betterproto.Message):
    stage_map: Dict[int, "HachiStageInfo"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class HachiStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(8)
    is_finished: bool = betterproto.bool_field(12)
    open_time: int = betterproto.uint32_field(5)
    stage_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class WinterCampStageInfo(betterproto.Message):
    cur_progress: int = betterproto.uint32_field(12)
    id: int = betterproto.uint32_field(6)
    open_time: int = betterproto.uint32_field(8)
    is_finished: bool = betterproto.bool_field(10)
    total_progress: int = betterproto.uint32_field(9)
    pos: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WinterCampRaceStageInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(5)
    id: int = betterproto.uint32_field(1)
    pos: "Vector" = betterproto.message_field(14)
    max_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WinterCampActivityDetailInfo(betterproto.Message):
    race_info_list: List["WinterCampRaceStageInfo"] = betterproto.message_field(9)
    battle_info: "WinterCampStageInfo" = betterproto.message_field(10)
    wish_id_list: List[int] = betterproto.uint32_field(8)
    battle_taken_reward_list: List[int] = betterproto.uint32_field(14)
    explore_taken_reward_list: List[int] = betterproto.uint32_field(6)
    is_content_closed: bool = betterproto.bool_field(15)
    explore_info: "WinterCampStageInfo" = betterproto.message_field(11)
    used_item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WinterCampStageInfoChangeNotify(betterproto.Message):
    explore_info: "WinterCampStageInfo" = betterproto.message_field(12)
    battle_info: "WinterCampStageInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WinterCampRaceScoreNotify(betterproto.Message):
    id: int = betterproto.uint32_field(5)
    max_score: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class WinterCampGiveFriendItemReq(betterproto.Message):
    uid: int = betterproto.uint32_field(12)
    item_list: List["ItemParam"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class WinterCampGiveFriendItemRsp(betterproto.Message):
    limit_item_id_list: List[int] = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class WinterCampSetWishListReq(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WinterCampSetWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    item_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WinterCampFriendWishData(betterproto.Message):
    nickname: str = betterproto.string_field(14)
    uid: int = betterproto.uint32_field(12)
    profile_picture: "ProfilePicture" = betterproto.message_field(5)
    item_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WinterCampGetFriendWishListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampGetFriendWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    wish_data_list: List["WinterCampFriendWishData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WinterCampRecvItemNotify(betterproto.Message):
    recv_item_data: "WinterCampRecvItemData" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class WinterCampAcceptItemResultInfo(betterproto.Message):
    accept_item_list: List["ItemParam"] = betterproto.message_field(2)
    uid: int = betterproto.uint32_field(6)
    unaccept_item_list: List["ItemParam"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class WinterCampAcceptGiveItemReq(betterproto.Message):
    uid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class WinterCampAcceptGiveItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    accept_item_result_info: "WinterCampAcceptItemResultInfo" = (
        betterproto.message_field(3)
    )


@dataclass(eq=False, repr=False)
class WinterCampAcceptAllGiveItemReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampAcceptAllGiveItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    accept_item_result_info: List[
        "WinterCampAcceptItemResultInfo"
    ] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class WinterCampGetCanGiveFriendItemReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampGetCanGiveFriendItemRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class WinterCampRecvItemData(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(2)
    uid: int = betterproto.uint32_field(8)
    profile_picture: "ProfilePicture" = betterproto.message_field(1)
    nickname: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class WinterCampGetRecvItemListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WinterCampGetRecvItemListRsp(betterproto.Message):
    recv_item_data_list: List["WinterCampRecvItemData"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class WinterCampEditSnowmanCombinationReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class WinterCampEditSnowmanCombinationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class WinterCampTriathlonSettleNotify(betterproto.Message):
    limited_coin: int = betterproto.uint32_field(9)
    normal_coin: int = betterproto.uint32_field(2)
    is_new_record: bool = betterproto.bool_field(7)
    is_success: bool = betterproto.bool_field(3)
    gallery_id: int = betterproto.uint32_field(13)
    remain_time: int = betterproto.uint32_field(4)
    score: int = betterproto.uint32_field(11)
    race_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WinterCampTakeExploreRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WinterCampTakeExploreRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WinterCampTakeBattleRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WinterCampTakeBattleRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WinterCampTriathlonRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class WinterCampTriathlonRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    gallery_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class MistTrialSettleNotify(betterproto.Message):
    exhibition_list_data_record_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    exhibition_list_data_result_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    dungeon_scene_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MistTrialGetDungeonExhibitionDataReq(betterproto.Message):
    trial_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MistTrialGetDungeonExhibitionDataRsp(betterproto.Message):
    trial_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class PotionLevelData(betterproto.Message):
    level_id: int = betterproto.uint32_field(10)
    score: int = betterproto.uint32_field(7)
    mode_id: int = betterproto.uint32_field(5)
    difficulty_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PotionStageData(betterproto.Message):
    stage_id: int = betterproto.uint32_field(11)
    cool_down_buff_id_list: List[int] = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(15)
    level_list: List["PotionLevelData"] = betterproto.message_field(14)
    cool_down_avatar_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PotionActivityDetailInfo(betterproto.Message):
    stage_list: List["PotionStageData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class PotionResetChallengeReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PotionResetChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    stage_data: "PotionStageData" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class PotionAvatarInfo(betterproto.Message):
    is_trial: bool = betterproto.bool_field(6)
    avatar_id: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class PotionEnterDungeonReq(betterproto.Message):
    buff_id_list: List[int] = betterproto.uint32_field(15)
    level_id: int = betterproto.uint32_field(5)
    avatar_info_list: List["PotionAvatarInfo"] = betterproto.message_field(14)
    mode_id: int = betterproto.uint32_field(2)
    stage_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PotionEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class PotionDungeonAvatar(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(8)
    is_trial: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PotionEnterDungeonNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(13)
    difficulty_level: int = betterproto.uint32_field(7)
    dungeon_avatar_list: List["PotionDungeonAvatar"] = betterproto.message_field(6)
    level_id: int = betterproto.uint32_field(8)
    mode_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PotionSaveDungeonResultReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(8)
    stage_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PotionSaveDungeonResultRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class PotionRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PotionRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class PotionDungeonResultInfo(betterproto.Message):
    final_score: int = betterproto.uint32_field(8)
    left_time: int = betterproto.uint32_field(9)
    difficulty_level: int = betterproto.uint32_field(14)
    mode_id: int = betterproto.uint32_field(11)
    level_id: int = betterproto.uint32_field(4)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TanukiTravelLevelData(betterproto.Message):
    is_open: bool = betterproto.bool_field(5)
    route_id: int = betterproto.uint32_field(9)
    is_finish: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class TanukiTravelActivityDetailInfo(betterproto.Message):
    tanuki_travel_level_data_list: List[
        "TanukiTravelLevelData"
    ] = betterproto.message_field(4)
    is_content_closed: bool = betterproto.bool_field(11)
    finished_level_index: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TanukiTravelFinishGuideQuestNotify(betterproto.Message):
    activity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LanternProjectionLevelInfo(betterproto.Message):
    min_finish_time: int = betterproto.uint32_field(1)
    id: int = betterproto.uint32_field(2)
    is_finished: bool = betterproto.bool_field(7)
    is_can_start: bool = betterproto.bool_field(9)
    is_show_tips: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class LanternProjectionInfo(betterproto.Message):
    view_switch_tips_list: List["ClientInputType"] = betterproto.enum_field(12)
    level_list: List["LanternProjectionLevelInfo"] = betterproto.message_field(6)
    open_stage_list: List[int] = betterproto.uint32_field(10)
    view_input_tips_list: List["ClientInputType"] = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class SalvageBundleChallengeInfo(betterproto.Message):
    finished_bundle_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SalvageScoreChallengeInfo(betterproto.Message):
    salvage_challenge_id: int = betterproto.uint32_field(13)
    max_score: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SalvageChallengeInfo(betterproto.Message):
    challenge_type: int = betterproto.uint32_field(5)
    is_unlock: bool = betterproto.bool_field(12)
    bundle_info: "SalvageBundleChallengeInfo" = betterproto.message_field(
        11, group="challenge_detail"
    )
    score_challenge_info: "SalvageScoreChallengeInfo" = betterproto.message_field(
        13, group="challenge_detail"
    )
    boss_challenge_id: int = betterproto.uint32_field(2, group="challenge_detail")


@dataclass(eq=False, repr=False)
class SalvageStageInfo(betterproto.Message):
    challenge_info_list: List["SalvageChallengeInfo"] = betterproto.message_field(9)
    is_open: bool = betterproto.bool_field(10)
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksChallengeInfo(betterproto.Message):
    is_full_score: bool = betterproto.bool_field(13)
    best_score: int = betterproto.uint32_field(7)
    challenge_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(8)
    challenge_info_list: List[
        "LanternRiteFireworksChallengeInfo"
    ] = betterproto.message_field(9)
    stage_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksInfo(betterproto.Message):
    stage_info_list: List["LanternRiteFireworksStageInfo"] = betterproto.message_field(
        6
    )


@dataclass(eq=False, repr=False)
class LanternRiteActivityDetailInfo(betterproto.Message):
    projection_info: "LanternProjectionInfo" = betterproto.message_field(13)
    stage_info_list: List["SalvageStageInfo"] = betterproto.message_field(5)
    fireworks_info: "LanternRiteFireworksInfo" = betterproto.message_field(8)
    is_mini_eldritch_dungeon_open: bool = betterproto.bool_field(2)
    is_content_closed: bool = betterproto.bool_field(14)
    is_taken_skin_reward: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class FinishLanternProjectionReq(betterproto.Message):
    finish_time: int = betterproto.uint32_field(3)
    level_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FinishLanternProjectionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionTipsReq(betterproto.Message):
    is_input_tips: bool = betterproto.bool_field(9)
    input_type: "ClientInputType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionLevelTipsReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ViewLanternProjectionLevelTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class SalvagePreventSettleInfo(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(8)
    settle_info: "SalvagePreventGallerySettleInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SalvagePreventSettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(13)
    settle_info: "SalvagePreventSettleInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class SalvageEscortSettleInfo(betterproto.Message):
    settle_info: "SalvageEscortGallerySettleInfo" = betterproto.message_field(3)
    is_new_record: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SalvageEscortSettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(14)
    settle_info: "SalvageEscortSettleInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class LanternRiteTakeSkinRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LanternRiteTakeSkinRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class SalvagePreventRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SalvagePreventRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    gallery_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SalvageEscortRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SalvageEscortRestartRsp(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class LanternRiteStartFireworksReformReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(2)
    challenge_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksReformFactorInfo(betterproto.Message):
    factor_value: int = betterproto.uint32_field(5)
    factor_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksReformSkillInfo(betterproto.Message):
    skill_id: int = betterproto.uint32_field(2)
    is_unlock: bool = betterproto.bool_field(11)
    unlock_challenge_time: int = betterproto.uint32_field(1)
    unlock_challenge_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LanternRiteStartFireworksReformRsp(betterproto.Message):
    factor_info_list: List[
        "LanternRiteFireworksReformFactorInfo"
    ] = betterproto.message_field(15)
    fire_element_addition_ratio: int = betterproto.uint32_field(13)
    stamina_value: int = betterproto.uint32_field(2)
    skill_info_list: List[
        "LanternRiteFireworksReformSkillInfo"
    ] = betterproto.message_field(8)
    reform_score: int = betterproto.uint32_field(6)
    stage_id: int = betterproto.uint32_field(12)
    challenge_id: int = betterproto.uint32_field(11)
    fire_element_value: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class LanternRiteDoFireworksReformReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(12)
    skill_id: int = betterproto.uint32_field(11)
    challenge_id: int = betterproto.uint32_field(10)
    factor_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LanternRiteDoFireworksReformRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(7)
    is_lucky: bool = betterproto.bool_field(13)
    challenge_id: int = betterproto.uint32_field(8)
    factor_info_list: List[
        "LanternRiteFireworksReformFactorInfo"
    ] = betterproto.message_field(2)
    stamina_value: int = betterproto.uint32_field(10)
    reform_score: int = betterproto.uint32_field(15)
    fire_element_value: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(3)
    fire_element_addition_ratio: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class LanternRiteEndFireworksReformReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(9)
    challenge_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LanternRiteEndFireworksReformRsp(betterproto.Message):
    is_full_score: bool = betterproto.bool_field(10)
    retcode: int = betterproto.int32_field(1)
    is_unlock_fireworks: bool = betterproto.bool_field(6)
    stage_id: int = betterproto.uint32_field(15)
    is_unlock_new_skill: bool = betterproto.bool_field(12)
    is_stamina_up: bool = betterproto.bool_field(4)
    final_score: int = betterproto.uint32_field(13)
    challenge_id: int = betterproto.uint32_field(5)
    is_new_record: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class UpdateSalvageBundleMarkReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(14)
    challenge_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class UpdateSalvageBundleMarkRsp(betterproto.Message):
    challenge_type: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(4)
    stage_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStage(betterproto.Message):
    is_open: bool = betterproto.bool_field(11)
    open_time: int = betterproto.uint32_field(5)
    stage_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriChestPositionInfo(betterproto.Message):
    pos: "Vector" = betterproto.message_field(10)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriChallengePositionInfo(betterproto.Message):
    group_id: int = betterproto.uint32_field(4)
    gadget_id: int = betterproto.uint32_field(7)
    pos: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriActivityDetailInfo(betterproto.Message):
    challenge_pos_list: List[
        "MichiaeMatsuriChallengePositionInfo"
    ] = betterproto.message_field(6)
    gain_crystal_exp: int = betterproto.uint32_field(13)
    unlocked_crystal_skill_list: List[int] = betterproto.uint32_field(2)
    chest_pos_list: List["MichiaeMatsuriChestPositionInfo"] = betterproto.message_field(
        10
    )
    stage_list: List["MichiaeMatsuriStage"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriDarkPressureLevelUpdateNotify(betterproto.Message):
    dark_pressure_level: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriInteractStatueReq(betterproto.Message):
    statue_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriInteractStatueRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriUnlockCrystalSkillReq(betterproto.Message):
    crystal_skill_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriUnlockCrystalSkillRsp(betterproto.Message):
    crystal_skill_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartBossChallengeReq(betterproto.Message):
    difficulty: int = betterproto.uint32_field(5)
    gadget_entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartBossChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartDarkChallengeReq(betterproto.Message):
    worktop_entity_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStartDarkChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriRemoveChestMarkNotify(betterproto.Message):
    config_id: int = betterproto.uint32_field(9)
    group_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriRemoveChallengeMarkNotify(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(9)
    group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriGainCrystalExpUpdateNotify(betterproto.Message):
    gain_crystal_exp: int = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BartenderTaskInfo(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_finish: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class BartenderLevelInfo(betterproto.Message):
    is_finish: bool = betterproto.bool_field(7)
    max_score: int = betterproto.uint32_field(9)
    id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BartenderActivityDetailInfo(betterproto.Message):
    unlock_item_list: List[int] = betterproto.uint32_field(3)
    is_develop_module_open: bool = betterproto.bool_field(13)
    is_content_closed: bool = betterproto.bool_field(6)
    unlock_level_list: List["BartenderLevelInfo"] = betterproto.message_field(5)
    unlock_formula_list: List[int] = betterproto.uint32_field(14)
    unlock_task_list: List["BartenderTaskInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BartenderCompleteOrderReq(betterproto.Message):
    cup_type: int = betterproto.uint32_field(14)
    qte_count: int = betterproto.uint32_field(7)
    quest_id: int = betterproto.uint32_field(11)
    item_list: List["ItemParam"] = betterproto.message_field(10)
    is_view_formula: bool = betterproto.bool_field(9)
    optional_order_list: List[int] = betterproto.uint32_field(6)
    retry_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BartenderCompleteOrderRsp(betterproto.Message):
    is_new: bool = betterproto.bool_field(10)
    finish_order_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(4)
    formula_id: int = betterproto.uint32_field(6)
    quest_id: int = betterproto.uint32_field(15)
    affix_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BartenderCancelOrderReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BartenderCancelOrderRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BartenderGetFormulaReq(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(7)
    quest_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BartenderGetFormulaRsp(betterproto.Message):
    is_new: bool = betterproto.bool_field(12)
    retcode: int = betterproto.int32_field(6)
    affix_list: List[int] = betterproto.uint32_field(8)
    formula_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class BartenderStartLevelReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BartenderStartLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    order_list: List[int] = betterproto.uint32_field(13)
    level_id: int = betterproto.uint32_field(10)
    time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BartenderCancelLevelReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BartenderCancelLevelRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class BartenderLevelProgressNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(9)
    is_finish: bool = betterproto.bool_field(3)
    level_id: int = betterproto.uint32_field(15)
    score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BartenderFinishLevelReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BartenderFinishLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    level_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OfficialCustomDungeon(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(11)
    win_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UgcActivityDetailInfo(betterproto.Message):
    is_ugc_feature_closed: bool = betterproto.bool_field(10)
    custom_dungeon_group_id: int = betterproto.uint32_field(12)
    official_custom_dungeon_list: List[
        "OfficialCustomDungeon"
    ] = betterproto.message_field(5)
    is_enable_ugc: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class CrystalLinkActivityDetailInfo(betterproto.Message):
    level_info_list: List["CrystalLinkLevelInfo"] = betterproto.message_field(3)
    difficulty_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CrystalLinkLevelInfo(betterproto.Message):
    team_info_list: List["CrystalLinkTeamInfo"] = betterproto.message_field(10)
    is_open: bool = betterproto.bool_field(9)
    level_id: int = betterproto.uint32_field(14)
    best_score: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CrystalLinkTeamInfo(betterproto.Message):
    buff_info_list: List["CrystalLinkBuffInfo"] = betterproto.message_field(2)
    avatar_info_list: List["CrystalLinkAvatarInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class CrystalLinkAvatarInfo(betterproto.Message):
    avatar_id: int = betterproto.uint64_field(3)
    is_trial: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class CrystalLinkBuffInfo(betterproto.Message):
    effect_buff_id: int = betterproto.uint32_field(1)
    cond_buff_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CrystalLinkEnterDungeonReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(7)
    team_info_list: List["CrystalLinkTeamInfo"] = betterproto.message_field(13)
    difficulty_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class CrystalLinkEnterDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    difficulty_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(6)
    team_info_list: List["CrystalLinkTeamInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class CrystalLinkDungeonAvatarInfo(betterproto.Message):
    is_trial: bool = betterproto.bool_field(8)
    avatar_guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class CrystalLinkDungeonInfoNotify(betterproto.Message):
    buff_info_list: List["CrystalLinkBuffInfo"] = betterproto.message_field(8)
    level_id: int = betterproto.uint32_field(1)
    is_upper_part: bool = betterproto.bool_field(15)
    difficulty_id: int = betterproto.uint32_field(11)
    dungeon_avatar_info_list: List[
        "CrystalLinkDungeonAvatarInfo"
    ] = betterproto.message_field(3)
    init_gallery_progress: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CrystalLinkRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CrystalLinkRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class QuickOpenActivityReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QuickOpenActivityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    activity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IrodoriChessMapData(betterproto.Message):
    map_id: int = betterproto.uint32_field(6)
    entrance_detail_info: "IrodoriChessEntranceDetailInfo" = betterproto.message_field(
        7
    )
    equiped_card_list: List[int] = betterproto.uint32_field(3)
    best_score: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class IrodoriChessLevelData(betterproto.Message):
    open_time: int = betterproto.uint32_field(8)
    level_id: int = betterproto.uint32_field(15)
    hard_map_data: "IrodoriChessMapData" = betterproto.message_field(7)
    normal_map_data: "IrodoriChessMapData" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class IrodoriChessData(betterproto.Message):
    is_open: bool = betterproto.bool_field(8)
    level_data_list: List["IrodoriChessLevelData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class IrodoriFlowerData(betterproto.Message):
    finished_theme_list: List[int] = betterproto.uint32_field(1)
    used_flower_list: List["ItemParam"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class IrodoriPoetryThemeData(betterproto.Message):
    scanned_index_list: List[int] = betterproto.uint32_field(1)
    line_id_list: List[int] = betterproto.uint32_field(4)
    max_progress: int = betterproto.uint32_field(2)
    theme_id: int = betterproto.uint32_field(13)
    progress: int = betterproto.uint32_field(5)
    min_progress: int = betterproto.uint32_field(12)
    selected_line_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class IrodoriPoetryData(betterproto.Message):
    theme_data_list: List["IrodoriPoetryThemeData"] = betterproto.message_field(3)
    cur_theme_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class IrodoriMasterLevelDetailInfo(betterproto.Message):
    is_finish: bool = betterproto.bool_field(1)
    diffculty: int = betterproto.uint32_field(2)
    min_finish_time: int = betterproto.uint32_field(8)
    is_have_try: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class IrodoriMasterLevelInfo(betterproto.Message):
    detail_info: List["IrodoriMasterLevelDetailInfo"] = betterproto.message_field(11)
    level_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class IrodoriActivityDetailInfo(betterproto.Message):
    master_level_list: List["IrodoriMasterLevelInfo"] = betterproto.message_field(11)
    flower_data: "IrodoriFlowerData" = betterproto.message_field(6)
    poetry_data: "IrodoriPoetryData" = betterproto.message_field(8)
    chess_data: "IrodoriChessData" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class IrodoriEditFlowerCombinationReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(13)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class IrodoriEditFlowerCombinationRsp(betterproto.Message):
    is_already_finished: bool = betterproto.bool_field(4)
    is_can_take_reward: bool = betterproto.bool_field(3)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class IrodoriScanEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class IrodoriScanEntityRsp(betterproto.Message):
    theme_data: "IrodoriPoetryThemeData" = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(5)
    is_get_inspiration: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class IrodoriFillPoetryReq(betterproto.Message):
    theme_id: int = betterproto.uint32_field(9)
    line_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class IrodoriFillPoetryRsp(betterproto.Message):
    theme_data: "IrodoriPoetryThemeData" = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class IrodoriChessEquipCardReq(betterproto.Message):
    is_hard_map: bool = betterproto.bool_field(2)
    level_id: int = betterproto.uint32_field(12)
    card_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class IrodoriChessEquipCardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    card_id: int = betterproto.uint32_field(8)
    level_id: int = betterproto.uint32_field(5)
    is_hard_map: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class IrodoriChessUnequipCardReq(betterproto.Message):
    card_id: int = betterproto.uint32_field(8)
    level_id: int = betterproto.uint32_field(5)
    is_hard_map: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class IrodoriChessUnequipCardRsp(betterproto.Message):
    is_hard_map: bool = betterproto.bool_field(10)
    card_id: int = betterproto.uint32_field(13)
    level_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class EnterIrodoriChessDungeonReq(betterproto.Message):
    is_hard_map: bool = betterproto.bool_field(1)
    level_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EnterIrodoriChessDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    is_hard_map: bool = betterproto.bool_field(7)
    level_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class IrodoriMasterStartGalleryReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(12)
    difficulty: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IrodoriMasterStartGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class IrodoriMasterGalleryCgEndNotify(betterproto.Message):
    level_id: int = betterproto.uint32_field(15)
    gallery_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IrodoriMasterGallerySettleNotify(betterproto.Message):
    settle_info: "IrodoriMasterGallerySettleInfo" = betterproto.message_field(13)
    gallery_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PhotoPosData(betterproto.Message):
    center: "Vector" = betterproto.message_field(15)
    open_time: int = betterproto.uint32_field(2)
    is_view: bool = betterproto.bool_field(4)
    pos_id: int = betterproto.uint32_field(9)
    is_open: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class PhotoActivityDetailInfo(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(4)
    photo_pos_data_list: List["PhotoPosData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class PhotoActivityFinishReq(betterproto.Message):
    pos_id: int = betterproto.uint32_field(15)
    check_root_id: int = betterproto.uint32_field(2)
    is_succ: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class PhotoActivityFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    pos_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PhotoActivityClientViewReq(betterproto.Message):
    pos_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PhotoActivityClientViewRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    pos_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SpiceStageData(betterproto.Message):
    is_open: bool = betterproto.bool_field(12)
    success_times: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SpiceActivityDetailInfo(betterproto.Message):
    current_increase_avatar_fetter_times: int = betterproto.uint32_field(15)
    spice_stage_data_list: List["SpiceStageData"] = betterproto.message_field(7)
    increase_avatar_fetter_limit_times: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SpiceActivityFinishMakeSpiceReq(betterproto.Message):
    left_turns: int = betterproto.uint32_field(4)
    is_success: bool = betterproto.bool_field(9)
    left_material_id_list: List[int] = betterproto.uint32_field(12)
    stage_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SpiceActivityFinishMakeSpiceRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(14)
    is_success: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SpiceActivityProcessFoodReq(betterproto.Message):
    normal_food_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SpiceActivityProcessFoodRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    special_food_list: List["ItemParam"] = betterproto.message_field(14)
    normal_food_list: List["ItemParam"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SpiceActivityGivingRecordNotify(betterproto.Message):
    current_increase_avatar_fetter_times: int = betterproto.uint32_field(3)
    increase_avatar_fetter_limit_times: int = betterproto.uint32_field(7)
    avatar_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GachaStageData(betterproto.Message):
    stage_id: int = betterproto.uint32_field(15)
    target_num_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_open: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class GachaActivityDetailInfo(betterproto.Message):
    have_get_robot_list: List[int] = betterproto.uint32_field(6)
    gacha_stage_data_list: List["GachaStageData"] = betterproto.message_field(4)
    have_reward_robot_num_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    tech_create_robot_id: int = betterproto.uint32_field(3)
    robot_num_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    robot_finish_num: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GachaActivityPercentNotify(betterproto.Message):
    item_stage: int = betterproto.uint32_field(14)
    target_num_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    sub_item_stage: int = betterproto.uint32_field(2)
    percent: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GachaActivityUpdateElemNotify(betterproto.Message):
    elem_type: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GachaActivityCreateRobotReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GachaActivityCreateRobotRsp(betterproto.Message):
    robot_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class GachaActivityTakeRewardReq(betterproto.Message):
    robot_num_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GachaActivityTakeRewardRsp(betterproto.Message):
    robot_num_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class GachaActivityResetReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GachaActivityResetRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    stage_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GachaActivityNextStageReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GachaActivityNextStageRsp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ActivityGiveFriendGiftReq(betterproto.Message):
    uid: int = betterproto.uint32_field(5)
    schedule_id: int = betterproto.uint32_field(1)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivityGiveFriendGiftRsp(betterproto.Message):
    limit_gift_list: List[int] = betterproto.uint32_field(3)
    schedule_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class ActivityRecvGiftData(betterproto.Message):
    uid: int = betterproto.uint32_field(15)
    nickname: str = betterproto.string_field(3)
    remark_name: str = betterproto.string_field(10)
    profile_picture: "ProfilePicture" = betterproto.message_field(14)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivityGetRecvGiftListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ActivityGetRecvGiftListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    recv_gift_list: List["ActivityRecvGiftData"] = betterproto.message_field(11)
    schedule_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ActivityHaveRecvGiftNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ActivityAcceptGiftResultInfo(betterproto.Message):
    unaccept_gift_num_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    uid: int = betterproto.uint32_field(6)
    accept_gift_num_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivityAcceptGiveGiftReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(3)
    uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ActivityAcceptGiveGiftRsp(betterproto.Message):
    accept_gift_result_info: "ActivityAcceptGiftResultInfo" = betterproto.message_field(
        4
    )
    retcode: int = betterproto.int32_field(11)
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ActivityAcceptAllGiveGiftReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityAcceptAllGiveGiftRsp(betterproto.Message):
    accept_gift_result_info_list: List[
        "ActivityAcceptGiftResultInfo"
    ] = betterproto.message_field(5)
    schedule_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ActivityGetCanGiveFriendGiftReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ActivityGetCanGiveFriendGiftRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(3)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivitySetGiftWishReq(betterproto.Message):
    gift_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ActivitySetGiftWishRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ActivityFriendGiftWishData(betterproto.Message):
    nickname: str = betterproto.string_field(7)
    remark_name: str = betterproto.string_field(3)
    profile_picture: "ProfilePicture" = betterproto.message_field(11)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ActivityGetFriendGiftWishListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ActivityGetFriendGiftWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    friend_gift_wish_list: List[
        "ActivityFriendGiftWishData"
    ] = betterproto.message_field(11)
    schedule_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeActivityDetailInfo(betterproto.Message):
    best_score: int = betterproto.uint32_field(11)
    is_content_closed: bool = betterproto.bool_field(6)
    is_final_gallery_complete: bool = betterproto.bool_field(12)
    current_stage_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeSettleInfo(betterproto.Message):
    settle_info: "LuminanceStoneChallengeGallerySettleInfo" = betterproto.message_field(
        13
    )
    is_new_record: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeSettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(10)
    settle_info: "LuminanceStoneChallengeSettleInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class RogueDiaryDungeonRecord(betterproto.Message):
    is_finish: bool = betterproto.bool_field(10)
    max_round: int = betterproto.uint32_field(5)
    finish_time: int = betterproto.uint32_field(15)
    difficulty: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class RogueDiaryStageInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    best_record: "RogueDiaryDungeonRecord" = betterproto.message_field(12)
    is_have_try: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class RogueDiaryProgress(betterproto.Message):
    difficulty: int = betterproto.uint32_field(7)
    optional_card_list: List[int] = betterproto.uint32_field(4)
    is_enter_dungeon: bool = betterproto.bool_field(9)
    stage_id: int = betterproto.uint32_field(12)
    cur_round: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RogueDiaryActivityDetailInfo(betterproto.Message):
    stage_list: List["RogueDiaryStageInfo"] = betterproto.message_field(11)
    is_have_progress: bool = betterproto.bool_field(10)
    is_content_closed: bool = betterproto.bool_field(2)
    cur_progress: "RogueDiaryProgress" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class RogueDiaryAvatar(betterproto.Message):
    avatar: "ActivityDungeonAvatar" = betterproto.message_field(2)
    level: int = betterproto.uint32_field(14)
    tired_round: int = betterproto.uint32_field(13)
    disable_status_list: List["RogueDiaryAvatarDisableStatus"] = betterproto.enum_field(
        9
    )


@dataclass(eq=False, repr=False)
class RogueDiaryRoomInfo(betterproto.Message):
    monster_list: List["Uint32Pair"] = betterproto.message_field(1)
    is_boss: bool = betterproto.bool_field(3)
    config_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StartRogueDiaryPlayReq(betterproto.Message):
    difficulty: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class StartRogueDiaryPlayRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    trial_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(13)
    rand_card_list: List[int] = betterproto.uint32_field(12)
    avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ResetRogueDiaryPlayReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ResetRogueDiaryPlayRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class EnterRogueDiaryDungeonReq(betterproto.Message):
    chosen_card_list: List[int] = betterproto.uint32_field(9)
    chosen_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class EnterRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ResumeRogueDiaryDungeonReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ResumeRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class RogueDiaryDungeonInfoNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(12)
    round_monster_list: List[int] = betterproto.uint32_field(15)
    time: int = betterproto.uint32_field(4)
    cur_room: int = betterproto.uint32_field(5)
    cur_round: int = betterproto.uint32_field(6)
    coin: int = betterproto.uint32_field(11)
    difficulty: int = betterproto.uint32_field(8)
    dungeon_id: int = betterproto.uint32_field(14)
    room_list: List["RogueDiaryRoomInfo"] = betterproto.message_field(7)
    round_card_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class RogueDiaryDungeonSettleNotify(betterproto.Message):
    explore_time: int = betterproto.uint32_field(1)
    is_finish: bool = betterproto.bool_field(3)
    cur_round: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class StartRogueDiaryRoomReq(betterproto.Message):
    room_difficulty: int = betterproto.uint32_field(13)
    is_select_hard: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class StartRogueDiaryRoomRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class RogueDiaryTiredAvatarNotify(betterproto.Message):
    optianal_tired_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(10)
    reserve_avatar_num: int = betterproto.uint32_field(6)
    tired_type: int = betterproto.uint32_field(8)
    is_need_show: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class ReserveRogueDiaryAvatarReq(betterproto.Message):
    reserve_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ReserveRogueDiaryAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class GetRogueDairyRepairInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetRogueDairyRepairInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class RefreshRogueDiaryCardReq(betterproto.Message):
    refresh_card_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RefreshRogueDiaryCardRsp(betterproto.Message):
    rand_card_list: List[int] = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class RogueFinishRepairReq(betterproto.Message):
    chosen_card_list: List[int] = betterproto.uint32_field(1)
    chosen_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class RogueFinishRepairRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class TryInterruptRogueDiaryDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TryInterruptRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class RogueDiaryRepairInfoNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(8)
    select_card_list: List[int] = betterproto.uint32_field(14)
    avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(13)
    room_list: List["RogueDiaryRoomInfo"] = betterproto.message_field(2)
    rand_card_list: List[int] = betterproto.uint32_field(10)
    select_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(9)
    chosen_card_list: List[int] = betterproto.uint32_field(15)
    trial_avatar_list: List["RogueDiaryAvatar"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class RetryCurRogueDiaryDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RetryCurRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class RogueDiaryReviveAvatarReq(betterproto.Message):
    revive_avatar: "RogueDiaryAvatar" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RogueDiaryReviveAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class TryEnterNextRogueDiaryDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TryEnterNextRogueDiaryDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class RogueDiaryCoinAddNotify(betterproto.Message):
    num: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SummerTimeV2DetailInfo(betterproto.Message):
    dungeon_stage_info_list: List[
        "SummerTimeV2DungeonStageInfo"
    ] = betterproto.message_field(13)
    cur_dungeon_reward_limit: int = betterproto.uint32_field(10)
    is_content_closed: bool = betterproto.bool_field(4)
    taken_reward_count: int = betterproto.uint32_field(5)
    boat_stage_info_list: List["SummerTimeV2BoatStageInfo"] = betterproto.message_field(
        15
    )


@dataclass(eq=False, repr=False)
class SummerTimeV2DungeonStageInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(10)
    is_open: bool = betterproto.bool_field(3)
    open_time: int = betterproto.uint32_field(12)
    is_prev_dungeon_succeed: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatStageInfo(betterproto.Message):
    open_time: int = betterproto.uint32_field(7)
    is_open: bool = betterproto.bool_field(14)
    stage_id: int = betterproto.uint32_field(10)
    best_score: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatSettleNotify(betterproto.Message):
    settle_info: "SummerTimeV2BoatGallerySettleInfo" = betterproto.message_field(11)
    stage_id: int = betterproto.uint32_field(7)
    is_new_record: bool = betterproto.bool_field(2)
    gallery_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivityPushTipsData(betterproto.Message):
    state: "ActivityPushTipsState" = betterproto.enum_field(10)
    activity_push_tips_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ActivityPushTipsInfoNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(14)
    activity_push_tips_data_list: List[
        "ActivityPushTipsData"
    ] = betterproto.message_field(3)
    activity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ActivityReadPushTipsReq(betterproto.Message):
    activity_push_tips_id_list: List[int] = betterproto.uint32_field(14)
    activity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ActivityReadPushTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartBoatGalleryReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartBoatGalleryRsp(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SummerTimeV2RestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class IslandPartyStageData(betterproto.Message):
    stage_id: int = betterproto.uint32_field(13)
    is_open: bool = betterproto.bool_field(14)
    best_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IslandPartyDetailInfo(betterproto.Message):
    stage_data_list: List["IslandPartyStageData"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class IslandPartySettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(13)
    reason: "GalleryStopReason" = betterproto.enum_field(1)
    settle_info_list: List["IslandPartyGallerySettleInfo"] = betterproto.message_field(
        8
    )
    score_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(6)
    time_remain: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GearLevelData(betterproto.Message):
    shortest_time: int = betterproto.uint32_field(8)
    open_time: int = betterproto.uint32_field(11)
    last_duration: int = betterproto.uint32_field(5)
    level_id: int = betterproto.uint32_field(12)
    is_finished: bool = betterproto.bool_field(9)
    is_open: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class JigsawPictureData(betterproto.Message):
    is_finished: bool = betterproto.bool_field(7)
    shortest_time: int = betterproto.uint32_field(10)
    is_open: bool = betterproto.bool_field(5)
    last_duration: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GearActivityDetailInfo(betterproto.Message):
    gear_level_data_list: List["GearLevelData"] = betterproto.message_field(14)
    jigsaw_picture_data: "JigsawPictureData" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GearActivityStartPlayGearReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GearActivityStartPlayGearRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GearColumnInfo(betterproto.Message):
    gear_column_index: int = betterproto.uint32_field(7)
    is_overturn: bool = betterproto.bool_field(3)
    has_gear: bool = betterproto.bool_field(2)
    gear_id: int = betterproto.uint32_field(11)
    placement_layer: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayGearReq(betterproto.Message):
    is_success: bool = betterproto.bool_field(4)
    use_clue: bool = betterproto.bool_field(12)
    gear_column_info_list: List["GearColumnInfo"] = betterproto.message_field(9)
    level_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayGearRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    is_success: bool = betterproto.bool_field(15)
    level_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GearActivityStartPlayPictureReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GearActivityStartPlayPictureRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayPictureReq(betterproto.Message):
    is_success: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class GearActivityFinishPlayPictureRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    is_success: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoStageInfo(betterproto.Message):
    is_finished: bool = betterproto.bool_field(11)
    stage_id: int = betterproto.uint32_field(6)
    is_open: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoObjectInfo(betterproto.Message):
    object_id: int = betterproto.uint32_field(1)
    finish_time: int = betterproto.uint32_field(4)
    param: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoInfo(betterproto.Message):
    stage_info_list: List["GravenInnocencePhotoStageInfo"] = betterproto.message_field(
        5
    )
    object_info_list: List[
        "GravenInnocencePhotoObjectInfo"
    ] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GravenInnocenceCampStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(15)
    level_id: int = betterproto.uint32_field(10)
    stage_id: int = betterproto.uint32_field(9)
    is_finished: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocenceCampInfo(betterproto.Message):
    stage_info_list: List["GravenInnocenceCampStageInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceLevelInfo(betterproto.Message):
    level_id: int = betterproto.uint32_field(13)
    max_score: int = betterproto.uint32_field(14)
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceInfo(betterproto.Message):
    level_info_list: List["GravenInnocenceRaceLevelInfo"] = betterproto.message_field(
        11
    )


@dataclass(eq=False, repr=False)
class GravenInnocenceCarveStageInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(9)
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class GravenInnocenceCarveInfo(betterproto.Message):
    stage_info_list: List["GravenInnocenceCarveStageInfo"] = betterproto.message_field(
        10
    )
    can_edit_count: int = betterproto.uint32_field(7)
    has_edit_config_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GravenInnocenceDetailInfo(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(8)
    race_info: "GravenInnocenceRaceInfo" = betterproto.message_field(10)
    photo_info: "GravenInnocencePhotoInfo" = betterproto.message_field(7)
    carve_info: "GravenInnocenceCarveInfo" = betterproto.message_field(13)
    camp_info: "GravenInnocenceCampInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceSettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(4)
    gallery_id: int = betterproto.uint32_field(6)
    score: int = betterproto.uint32_field(5)
    reason: "GalleryStopReason" = betterproto.enum_field(2)
    total_coint_count: int = betterproto.uint32_field(13)
    remain_time: int = betterproto.uint32_field(10)
    challenge_progress: int = betterproto.uint32_field(1)
    coin_count: int = betterproto.uint32_field(8)
    is_success: bool = betterproto.bool_field(7)
    level_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceRestartReq(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceRestartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    gallery_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GravenInnocenceEditCarveCombinationReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GravenInnocenceEditCarveCombinationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoFinishReq(betterproto.Message):
    param: int = betterproto.uint32_field(1)
    object_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoFinishRsp(betterproto.Message):
    object_id: int = betterproto.uint32_field(6)
    param: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoReminderNotify(betterproto.Message):
    group_bundle_id: int = betterproto.uint32_field(14)
    reminder_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class InstableSprayTeamInfo(betterproto.Message):
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class InstableSprayStageInfo(betterproto.Message):
    is_finished: bool = betterproto.bool_field(10)
    max_score: int = betterproto.uint32_field(3)
    stage_id: int = betterproto.uint32_field(4)
    team_info_list: List["InstableSprayTeamInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class InstableSprayDetailInfo(betterproto.Message):
    stage_info_list: List["InstableSprayStageInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class InstableSprayAvatarInfo(betterproto.Message):
    is_trial: bool = betterproto.bool_field(8)
    avatar_id: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class InstableSprayEnterDungeonReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(13)
    difficulty: int = betterproto.uint32_field(2)
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class InstableSprayEnterDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class InstableSpraySwitchTeamReq(betterproto.Message):
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class InstableSpraySwitchTeamRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class InstableSprayLevelFinishNotify(betterproto.Message):
    is_need_switch_team: bool = betterproto.bool_field(11)
    is_skip_black_screen: bool = betterproto.bool_field(7)
    round: int = betterproto.uint32_field(15)
    stage_id: int = betterproto.uint32_field(8)
    level_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class InstableSprayRestartDungeonReq(betterproto.Message):
    avatar_info_list: List["InstableSprayAvatarInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class InstableSprayRestartDungeonRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class MuqadasPotionLevelData(betterproto.Message):
    level_id: int = betterproto.uint32_field(15)
    max_score: int = betterproto.uint32_field(9)
    is_open: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class MuqadasPotionActivityDetailInfo(betterproto.Message):
    muqadas_potion_level_data_list: List[
        "MuqadasPotionLevelData"
    ] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class MuqadasPotionActivityEnterDungeonReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MuqadasPotionActivityEnterDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    level_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MuqadasPotionDungeonSettleNotify(betterproto.Message):
    final_score: int = betterproto.uint32_field(11)
    capture_weakness_count: int = betterproto.uint32_field(15)
    is_success: bool = betterproto.bool_field(6)
    level_id: int = betterproto.uint32_field(10)
    is_new_record: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MuqadasPotionRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MuqadasPotionRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class MuqadasPotionCaptureWeaknessReq(betterproto.Message):
    capture_weakness_count: int = betterproto.uint32_field(10)
    level_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class MuqadasPotionCaptureWeaknessRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class TreasureSeelieRegionData(betterproto.Message):
    is_done: bool = betterproto.bool_field(12)
    open_day: int = betterproto.uint32_field(6)
    opened_chest_num: int = betterproto.uint32_field(10)
    region_radius: float = betterproto.float_field(7)
    is_open: bool = betterproto.bool_field(9)
    open_time: int = betterproto.uint32_field(8)
    region_center_pos: "Vector" = betterproto.message_field(11)
    scene_id: int = betterproto.uint32_field(13)
    total_chest_num: int = betterproto.uint32_field(15)
    region_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TreasureSeelieActivityDetailInfo(betterproto.Message):
    treasure_close_time: int = betterproto.uint32_field(10)
    is_content_closed: bool = betterproto.bool_field(8)
    region_data_list: List["TreasureSeelieRegionData"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class TreasureSeelieCollectOrbsNotify(betterproto.Message):
    current_num: int = betterproto.uint32_field(11)
    total_num: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class RockBoardExploreStageData(betterproto.Message):
    is_finish: bool = betterproto.bool_field(6)
    open_time: int = betterproto.uint32_field(7)
    is_open: bool = betterproto.bool_field(5)
    stage_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RockBoardExploreDetailInfo(betterproto.Message):
    stage_data_list: List["RockBoardExploreStageData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class VintageHuntingStageData(betterproto.Message):
    open_time: int = betterproto.uint32_field(10)
    is_finish: bool = betterproto.bool_field(3)
    is_open: bool = betterproto.bool_field(9)
    record_value: int = betterproto.uint32_field(12)
    stage_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class VintagePresentLevelData(betterproto.Message):
    present_id: int = betterproto.uint32_field(10)
    is_open: bool = betterproto.bool_field(11)
    is_finish: bool = betterproto.bool_field(5)
    stage_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class VintagePresentStageData(betterproto.Message):
    open_time: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(15)
    is_finish: bool = betterproto.bool_field(13)
    is_open: bool = betterproto.bool_field(10)
    present_level_map: Dict[int, "VintagePresentLevelData"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class VintageBoothUsedItemData(betterproto.Message):
    is_open: bool = betterproto.bool_field(7)
    gadget_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class VintageCampChallengeLevelData(betterproto.Message):
    stage_id: int = betterproto.uint32_field(14)
    level_id: int = betterproto.uint32_field(11)
    is_finish: bool = betterproto.bool_field(8)
    is_open: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class VintageCampChallengeStageData(betterproto.Message):
    is_open: bool = betterproto.bool_field(5)
    max_finished_level: int = betterproto.uint32_field(11)
    open_time: int = betterproto.uint32_field(3)
    is_finish: bool = betterproto.bool_field(10)
    stage_id: int = betterproto.uint32_field(4)
    camp_level_map: Dict[int, "VintageCampChallengeLevelData"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class VintageMarketTraderInfo(betterproto.Message):
    trader_id: int = betterproto.uint32_field(7)
    available_item_list: List["ItemParam"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class VintageMarketDealInfo(betterproto.Message):
    trader_item_info_map: Dict[int, "VintageMarketTraderInfo"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class VintageMarketStoreInfo(betterproto.Message):
    cur_attr_list: List[int] = betterproto.uint32_field(5)
    next_aim_attr_list: List[int] = betterproto.uint32_field(14)
    strategy_list: List[int] = betterproto.uint32_field(2)
    slot_count: int = betterproto.uint32_field(3)
    store_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class VintageMarketStoreOpInfo(betterproto.Message):
    strategy_list: List[int] = betterproto.uint32_field(5)
    help_uid: int = betterproto.uint32_field(9)
    store_id: int = betterproto.uint32_field(2)
    help_skill_id: int = betterproto.uint32_field(7)
    add_attr_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class VintageMarketInfo(betterproto.Message):
    is_help_module_open: bool = betterproto.bool_field(1485)
    is_store_content_interrupt: bool = betterproto.bool_field(15)
    deal_info: "VintageMarketDealInfo" = betterproto.message_field(11)
    store_round: int = betterproto.uint32_field(7)
    store_round_income_list: List[int] = betterproto.uint32_field(207)
    is_store_content_finish: bool = betterproto.bool_field(5)
    cur_env_event_list: List[int] = betterproto.uint32_field(8)
    is_market_content_open: bool = betterproto.bool_field(10)
    next_can_use_help_round: int = betterproto.uint32_field(1800)
    is_market_content_finish: bool = betterproto.bool_field(2)
    viewed_strategy_list: List[int] = betterproto.uint32_field(14)
    prev_coin_c_num: int = betterproto.uint32_field(3)
    bargain_info_map: Dict[int, bool] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_BOOL
    )
    dividend_reward_count: int = betterproto.uint32_field(1798)
    cur_npc_event_list: List[int] = betterproto.uint32_field(4)
    is_help_in_cd: bool = betterproto.bool_field(366)
    prev_coin_b_num: int = betterproto.uint32_field(1)
    open_store_list: List["VintageMarketStoreInfo"] = betterproto.message_field(9)
    help_skill_id: int = betterproto.uint32_field(760)
    is_round_tips_view: bool = betterproto.bool_field(12)
    is_strategy_module_open: bool = betterproto.bool_field(876)
    unlock_strategy_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class VintageActivityDetailInfo(betterproto.Message):
    market_info: "VintageMarketInfo" = betterproto.message_field(2)
    hunting_stage_map: Dict[int, "VintageHuntingStageData"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    booth_data: "VintageBoothUsedItemData" = betterproto.message_field(5)
    camp_stage_map: Dict[int, "VintageCampChallengeStageData"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    present_stage_map: Dict[int, "VintagePresentStageData"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    is_content_closed: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class VintageMarketDeliverItemReq(betterproto.Message):
    deliver_item_list: List["ItemParam"] = betterproto.message_field(3)
    trader_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class VintageMarketDeliverItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    trader_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VintageHuntingFirstStageSettleInfo(betterproto.Message):
    elite_cnt: int = betterproto.uint32_field(10)
    timid_cnt: int = betterproto.uint32_field(2)
    brutal_cnt: int = betterproto.uint32_field(6)
    score: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class VintageHuntingSecondStageSettleInfo(betterproto.Message):
    animal_count_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    capture_animal_num: int = betterproto.uint32_field(7)
    total_num: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class VintageHuntingThirdStageSettleInfo(betterproto.Message):
    left_time: int = betterproto.uint32_field(13)
    is_success: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class SceneGalleryVintageHuntingSettleNotify(betterproto.Message):
    has_new_watcher: bool = betterproto.bool_field(11)
    stage_id: int = betterproto.uint32_field(9)
    total_watcher_num: int = betterproto.uint32_field(12)
    finished_watcher_num: int = betterproto.uint32_field(6)
    is_new_record: bool = betterproto.bool_field(1)
    first_stage_info: "VintageHuntingFirstStageSettleInfo" = betterproto.message_field(
        4, group="info"
    )
    second_stage_info: "VintageHuntingSecondStageSettleInfo" = (
        betterproto.message_field(10, group="info")
    )
    third_stage_info: "VintageHuntingThirdStageSettleInfo" = betterproto.message_field(
        8, group="info"
    )


@dataclass(eq=False, repr=False)
class VintagePresentFinishNoify(betterproto.Message):
    present_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class VintageDecorateBoothReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(6)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class VintageDecorateBoothRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class VintageHuntingStartGalleryReq(betterproto.Message):
    stage_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class VintageHuntingStartGalleryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class VintageCampGroupBundleRegisterNotify(betterproto.Message):
    group_bundle_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class VintageCampStageFinishNotify(betterproto.Message):
    stage_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class VintageMarketStartStorePlayReq(betterproto.Message):
    store_round: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class VintageMarketStartStorePlayRsp(betterproto.Message):
    prev_round_coin_b: int = betterproto.uint32_field(7)
    store_round: int = betterproto.uint32_field(2)
    prev_round_coin_c: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class VintageMarketFinishStorePlayReq(betterproto.Message):
    store_round: int = betterproto.uint32_field(9)
    store_op_list: List["VintageMarketStoreOpInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class VintageMarketFinishStorePlayRsp(betterproto.Message):
    trigger_env_event_list: List[int] = betterproto.uint32_field(8)
    store_round: int = betterproto.uint32_field(12)
    trigger_npc_event_list: List[int] = betterproto.uint32_field(10)
    low_attr_store_list: List[int] = betterproto.uint32_field(11)
    round_coin_b_income: int = betterproto.uint32_field(9)
    round_delta_coin_c: int = betterproto.uint32_field(1)
    store_income_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(7)
    round_total_income: int = betterproto.uint32_field(14)
    display_return_coin_b: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class VintagePresentFinishNotify(betterproto.Message):
    present_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class VintageMarketStoreUnlockSlotReq(betterproto.Message):
    store_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class VintageMarketStoreUnlockSlotRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    slot_count: int = betterproto.uint32_field(6)
    store_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class VintageMarketStoreChooseStrategyReq(betterproto.Message):
    store_id: int = betterproto.uint32_field(6)
    store_op_list: List["VintageMarketStoreOpInfo"] = betterproto.message_field(9)
    strategy_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class VintageMarketStoreChooseStrategyRsp(betterproto.Message):
    store_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(9)
    strategy_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class VintageMarketStoreViewStrategyReq(betterproto.Message):
    strategy_id: int = betterproto.uint32_field(1)
    strategy_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class VintageMarketStoreViewStrategyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    strategy_list: List[int] = betterproto.uint32_field(3)
    strategy_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class VintageMarketDividendFinishNotify(betterproto.Message):
    coin_a: int = betterproto.uint32_field(5)
    coin_c: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class VintageMarketNpcEventFinishNotify(betterproto.Message):
    unlock_strategy_list: List[int] = betterproto.uint32_field(15)
    coin_c: int = betterproto.uint32_field(12)
    coin_a: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WindFieldDetailInfo(betterproto.Message):
    stage_info_list: List["WindFieldStageInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class WindFieldStageInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(12)
    open_time: int = betterproto.uint32_field(14)
    stage_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WindFieldRestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WindFieldRestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class FungusDetail(betterproto.Message):
    is_cultivate: bool = betterproto.bool_field(5)
    capture_order: int = betterproto.uint32_field(6)
    name_id: int = betterproto.uint32_field(14)
    min_cultivate_step: int = betterproto.uint32_field(1)
    fungus_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FungusPlotStageDetail(betterproto.Message):
    is_open: bool = betterproto.bool_field(3)
    stage_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class FungusTrainingDungeonDetail(betterproto.Message):
    is_open: bool = betterproto.bool_field(13)
    dungeon_id: int = betterproto.uint32_field(12)
    best_score: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FungusFighterMonsterDetail(betterproto.Message):
    fungus_id: int = betterproto.uint32_field(2)
    cur_hp_percentage: float = betterproto.float_field(7)
    is_alive: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class FungusTrainingMonsterPreviewDetail(betterproto.Message):
    monster_id: int = betterproto.uint32_field(8)
    level: int = betterproto.uint32_field(10)
    affix_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FungusTrainingPoolPreviewDetail(betterproto.Message):
    pool_id: int = betterproto.uint32_field(8)
    monster_preview_detail_list: List[
        "FungusTrainingMonsterPreviewDetail"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class FungusTrainingProgressDetail(betterproto.Message):
    cur_round: int = betterproto.uint32_field(9)
    dungeon_id: int = betterproto.uint32_field(10)
    monster_pool_preview_list: List[
        "FungusTrainingPoolPreviewDetail"
    ] = betterproto.message_field(5)
    monster_detail_list: List["FungusFighterMonsterDetail"] = betterproto.message_field(
        6
    )
    total_used_time: int = betterproto.uint32_field(7)
    backup_monster_list: List[int] = betterproto.uint32_field(4)
    choosen_monster_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FungusFighterDetailInfo(betterproto.Message):
    plot_stage_detail_list: List["FungusPlotStageDetail"] = betterproto.message_field(6)
    fungus_detail_list: List["FungusDetail"] = betterproto.message_field(4)
    unlock_camp_id_list: List[int] = betterproto.uint32_field(12)
    training_dungeon_progress_detail_list: List[
        "FungusTrainingProgressDetail"
    ] = betterproto.message_field(3)
    training_dungeon_detail_list: List[
        "FungusTrainingDungeonDetail"
    ] = betterproto.message_field(15)
    finish_camp_id_list: List[int] = betterproto.uint32_field(1)
    unlock_cultivate_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EnterFungusFighterPlotDungeonReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(14)
    fungus_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class EnterFungusFighterPlotDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    dungeon_id: int = betterproto.uint32_field(15)
    fungus_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FungusFighterPlotInfoNotify(betterproto.Message):
    fungus_id_list: List[int] = betterproto.uint32_field(11)
    dungeon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FungusCultivateReq(betterproto.Message):
    cultivate_id: int = betterproto.uint32_field(8)
    copy_step: int = betterproto.uint32_field(7)
    exchange_step: int = betterproto.uint32_field(11)
    cultivate_step: int = betterproto.uint32_field(13)
    rotate_step: int = betterproto.uint32_field(15)
    undo_step: int = betterproto.uint32_field(6)
    time: int = betterproto.uint32_field(2)
    place_step: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class FungusCultivateRsp(betterproto.Message):
    cultivate_id: int = betterproto.uint32_field(4)
    is_new_record: bool = betterproto.bool_field(13)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class FungusRenameReq(betterproto.Message):
    name_id: int = betterproto.uint32_field(1)
    fungus_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FungusRenameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    fungus_id: int = betterproto.uint32_field(15)
    name_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EnterFungusFighterTrainingDungeonReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EnterFungusFighterTrainingDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    dungeon_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FungusFighterRuntimeDataNotify(betterproto.Message):
    progress_detail: "FungusTrainingProgressDetail" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingSelectFungusReq(betterproto.Message):
    backup_fungus_id_list: List[int] = betterproto.uint32_field(11)
    fight_fungus_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingSelectFungusRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class FungusFighterTrainingGallerySettleNotify(betterproto.Message):
    is_new_record: bool = betterproto.bool_field(14)
    total_used_time: int = betterproto.uint32_field(4)
    reason: "GalleryStopReason" = betterproto.enum_field(5)
    dead_fungus_num: int = betterproto.uint32_field(1)
    settle_round: int = betterproto.uint32_field(15)
    is_final_settle: bool = betterproto.bool_field(10)
    gadget_life_percentage: int = betterproto.uint32_field(11)
    final_score: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FungusFighterClearTrainingRuntimeDataReq(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FungusFighterClearTrainingRuntimeDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class FungusFighterUseBackupFungusReq(betterproto.Message):
    backup_fungus_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FungusFighterUseBackupFungusRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class FungusFighterRestartTraningDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FungusFighterRestartTraningDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class CharAmusementStageData(betterproto.Message):
    finish_time: int = betterproto.uint32_field(15)
    is_open: bool = betterproto.bool_field(12)
    stage_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CharAmusementDetailInfo(betterproto.Message):
    stage_data_list: List["CharAmusementStageData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CharAmusementSettleNotify(betterproto.Message):
    is_succ: bool = betterproto.bool_field(3)
    finish_time: int = betterproto.uint32_field(14)
    is_new_record: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2LevelData(betterproto.Message):
    challenge_mode_difficulty_pass: int = betterproto.uint32_field(1)
    level_id: int = betterproto.uint32_field(5)
    challenge_mode_last_choose_skill_no: int = betterproto.uint32_field(10)
    best_cost_time: int = betterproto.uint32_field(12)
    is_level_open: bool = betterproto.bool_field(7)
    challenge_mode_difficulty_open: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2DetailInfo(betterproto.Message):
    level_data_list: List["EffigyChallengeV2LevelData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2EnterDungeonReq(betterproto.Message):
    challenge_mode_difficulty: int = betterproto.uint32_field(7)
    level_id: int = betterproto.uint32_field(12)
    challenge_mode_skill_no: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2EnterDungeonRsp(betterproto.Message):
    challenge_mode_skill_no: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(10)
    challenge_mode_difficulty: int = betterproto.uint32_field(14)
    level_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2RestartDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class EffigyChallengeV2RestartDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2ChooseSkillReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(6)
    challenge_mode_skill_no: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2ChooseSkillRsp(betterproto.Message):
    level_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(9)
    challenge_mode_skill_no: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2DungeonInfoNotify(betterproto.Message):
    challenge_mode_difficulty: int = betterproto.uint32_field(2)
    skill_no: int = betterproto.uint32_field(4)
    level_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AranaraCollectionSuite(betterproto.Message):
    collection_id_state_map: Dict[
        int, "AranaraCollectionState"
    ] = betterproto.map_field(6, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM)
    collection_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AranaraCollectionDataNotify(betterproto.Message):
    collection_suite_list: List["AranaraCollectionSuite"] = betterproto.message_field(
        14
    )


@dataclass(eq=False, repr=False)
class AddAranaraCollectionNotify(betterproto.Message):
    collection_type: int = betterproto.uint32_field(7)
    target_state: "AranaraCollectionState" = betterproto.enum_field(12)
    from_state: "AranaraCollectionState" = betterproto.enum_field(15)
    collection_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CataLogGlobalWatcherFinishedData(betterproto.Message):
    finished_global_watcher_list: List[int] = betterproto.uint32_field(8)
    catalog_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CataLogFinishedGlobalWatcherAllDataNotify(betterproto.Message):
    finished_global_watcher_data_list: List[
        "CataLogGlobalWatcherFinishedData"
    ] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class CataLogNewFinishedGlobalWatcherNotify(betterproto.Message):
    new_finished_global_watcher_data_list: List[
        "CataLogGlobalWatcherFinishedData"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AvatarAddNotify(betterproto.Message):
    avatar: "AvatarInfo" = betterproto.message_field(13)
    is_in_team: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class AvatarDelNotify(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class AvatarTeam(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(7)
    team_name: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(3)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(7)
    cur_avatar_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class SetUpAvatarTeamRsp(betterproto.Message):
    avatar_team_guid_list: List[int] = betterproto.uint64_field(1)
    team_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(8)
    cur_avatar_guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamReq(betterproto.Message):
    team_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ChooseCurAvatarTeamRsp(betterproto.Message):
    cur_team_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class ChangeAvatarReq(betterproto.Message):
    move_pos: "Vector" = betterproto.message_field(15)
    skill_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(7)
    is_move: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class ChangeAvatarRsp(betterproto.Message):
    skill_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(10)
    cur_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class AvatarPromoteReq(betterproto.Message):
    guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class AvatarPromoteRsp(betterproto.Message):
    guid: int = betterproto.uint64_field(11)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class SpringUseReq(betterproto.Message):
    guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class SpringUseRsp(betterproto.Message):
    guid: int = betterproto.uint64_field(3)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class RefreshBackgroundAvatarReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RefreshBackgroundAvatarRsp(betterproto.Message):
    hp_full_time_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class AvatarTeamUpdateNotify(betterproto.Message):
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class AvatarDataNotify(betterproto.Message):
    owned_costume_list: List[int] = betterproto.uint32_field(11)
    choose_avatar_guid: int = betterproto.uint64_field(8)
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    backup_avatar_team_order_list: List[int] = betterproto.uint32_field(9)
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(12)
    owned_flycloak_list: List[int] = betterproto.uint32_field(1)
    avatar_list: List["AvatarInfo"] = betterproto.message_field(6)
    cur_avatar_team_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarUpgradeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(6)
    count: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AvatarUpgradeRsp(betterproto.Message):
    cur_level: int = betterproto.uint32_field(6)
    old_level: int = betterproto.uint32_field(13)
    old_fight_prop_map: Dict[int, float] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    retcode: int = betterproto.int32_field(1)
    cur_fight_prop_map: Dict[int, float] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    avatar_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndReq(betterproto.Message):
    reborn_pos: "Vector" = betterproto.message_field(3)
    die_guid: int = betterproto.uint64_field(7)
    skill_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AvatarDieAnimationEndRsp(betterproto.Message):
    skill_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(14)
    die_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class AvatarChangeElementTypeReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(7)
    area_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarChangeElementTypeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class AvatarFetterDataNotify(betterproto.Message):
    fetter_info_map: Dict[int, "AvatarFetterInfo"] = betterproto.map_field(
        15, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionDataNotify(betterproto.Message):
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        6, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionAllDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AvatarExpeditionAllDataRsp(betterproto.Message):
    open_expedition_list: List[int] = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(15)
    expedition_count_limit: int = betterproto.uint32_field(12)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        4, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartReq(betterproto.Message):
    exp_id: int = betterproto.uint32_field(9)
    avatar_guid: int = betterproto.uint64_field(10)
    hour_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarExpeditionStartRsp(betterproto.Message):
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackReq(betterproto.Message):
    avatar_guid: List[int] = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class AvatarExpeditionCallBackRsp(betterproto.Message):
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        9, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class AvatarExpeditionGetRewardRsp(betterproto.Message):
    extra_item_list: List["ItemParam"] = betterproto.message_field(9)
    item_list: List["ItemParam"] = betterproto.message_field(8)
    expedition_info_map: Dict[int, "AvatarExpeditionInfo"] = betterproto.map_field(
        12, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarReq(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(4)
    avatar_guid_list: List[int] = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class ChangeMpTeamAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    avatar_guid_list: List[int] = betterproto.uint64_field(3)
    cur_avatar_guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class ChangeTeamNameReq(betterproto.Message):
    team_id: int = betterproto.int32_field(8)
    team_name: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class ChangeTeamNameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    team_name: str = betterproto.string_field(2)
    team_id: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class SceneTeamAvatar(betterproto.Message):
    avatar_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(5)
    avatar_info: "AvatarInfo" = betterproto.message_field(8)
    is_on_scene: bool = betterproto.bool_field(152)
    entity_id: int = betterproto.uint32_field(9)
    avatar_guid: int = betterproto.uint64_field(15)
    scene_id: int = betterproto.uint32_field(1)
    weapon_entity_id: int = betterproto.uint32_field(7)
    scene_avatar_info: "SceneAvatarInfo" = betterproto.message_field(3)
    weapon_guid: int = betterproto.uint64_field(4)
    weapon_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(11)
    scene_entity_info: "SceneEntityInfo" = betterproto.message_field(12)
    player_uid: int = betterproto.uint32_field(14)
    is_reconnect: bool = betterproto.bool_field(6)
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(2)
    is_player_cur_avatar: bool = betterproto.bool_field(13)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class SceneTeamUpdateNotify(betterproto.Message):
    scene_team_avatar_list: List["SceneTeamAvatar"] = betterproto.message_field(11)
    is_in_mp: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class FocusAvatarReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    is_focus: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class FocusAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    is_focus: bool = betterproto.bool_field(11)
    avatar_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class AvatarSatiationData(betterproto.Message):
    finish_time: float = betterproto.float_field(14)
    avatar_guid: int = betterproto.uint64_field(13)
    penalty_finish_time: float = betterproto.float_field(12)


@dataclass(eq=False, repr=False)
class AvatarSatiationDataNotify(betterproto.Message):
    satiation_data_list: List["AvatarSatiationData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class AvatarWearFlycloakReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(11)
    flycloak_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AvatarWearFlycloakRsp(betterproto.Message):
    flycloak_id: int = betterproto.uint32_field(13)
    avatar_guid: int = betterproto.uint64_field(7)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class AvatarFlycloakChangeNotify(betterproto.Message):
    flycloak_id: int = betterproto.uint32_field(8)
    avatar_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class AvatarGainFlycloakNotify(betterproto.Message):
    flycloak_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarEquipAffixStartNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(4)
    equip_affix_info: "AvatarEquipAffixInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class AvatarFetterLevelRewardReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(1)
    fetter_level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AvatarFetterLevelRewardRsp(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(4)
    reward_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(13)
    fetter_level: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AddNoGachaAvatarCardTransferItem(betterproto.Message):
    count: int = betterproto.uint32_field(9)
    item_id: int = betterproto.uint32_field(6)
    is_new: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class AddNoGachaAvatarCardNotify(betterproto.Message):
    transfer_item_list: List[
        "AddNoGachaAvatarCardTransferItem"
    ] = betterproto.message_field(4)
    initial_promote_level: int = betterproto.uint32_field(2)
    avatar_id: int = betterproto.uint32_field(8)
    is_transfer_to_item: bool = betterproto.bool_field(6)
    reason: int = betterproto.uint32_field(9)
    initial_level: int = betterproto.uint32_field(10)
    item_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AvatarPromoteGetRewardReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(7)
    promote_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AvatarPromoteGetRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    reward_id: int = betterproto.uint32_field(15)
    avatar_guid: int = betterproto.uint64_field(11)
    promote_level: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeReq(betterproto.Message):
    costume_id: int = betterproto.uint32_field(4)
    avatar_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeRsp(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(12)
    retcode: int = betterproto.int32_field(7)
    costume_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AvatarChangeCostumeNotify(betterproto.Message):
    entity_info: "SceneEntityInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class AvatarGainCostumeNotify(betterproto.Message):
    costume_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class AvatarChangeAnimHashReq(betterproto.Message):
    anim_hash: int = betterproto.uint32_field(6)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class AvatarChangeAnimHashRsp(betterproto.Message):
    anim_hash: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(5)
    avatar_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class PersistentDungeonSwitchAvatarReq(betterproto.Message):
    cur_avatar_guid: int = betterproto.uint64_field(8)
    avatar_team_guid_list: List[int] = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class PersistentDungeonSwitchAvatarRsp(betterproto.Message):
    avatar_team_guid_list: List[int] = betterproto.uint64_field(14)
    retcode: int = betterproto.int32_field(7)
    cur_avatar_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class AddBackupAvatarTeamReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AddBackupAvatarTeamRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class DelBackupAvatarTeamReq(betterproto.Message):
    backup_avatar_team_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DelBackupAvatarTeamRsp(betterproto.Message):
    backup_avatar_team_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class AvatarTeamAllDataNotify(betterproto.Message):
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(6)
    avatar_team_map: Dict[int, "AvatarTeam"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    backup_avatar_team_order_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BattlePassCycle(betterproto.Message):
    cycle_idx: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(10)
    begin_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BattlePassMission(betterproto.Message):
    cur_progress: int = betterproto.uint32_field(13)
    mission_status: "BattlePassMissionMissionStatus" = betterproto.enum_field(15)
    mission_id: int = betterproto.uint32_field(11)
    reward_battle_pass_point: int = betterproto.uint32_field(3)
    mission_type: int = betterproto.uint32_field(12)
    total_progress: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BattlePassRewardTag(betterproto.Message):
    level: int = betterproto.uint32_field(4)
    unlock_status: "BattlePassUnlockStatus" = betterproto.enum_field(2)
    reward_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class BattlePassProduct(betterproto.Message):
    normal_product_id: str = betterproto.string_field(13)
    extra_product_id: str = betterproto.string_field(10)
    upgrade_product_id: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class BattlePassSchedule(betterproto.Message):
    level: int = betterproto.uint32_field(14)
    begin_time: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(15)
    point: int = betterproto.uint32_field(1)
    cur_cycle: "BattlePassCycle" = betterproto.message_field(4)
    unlock_status: "BattlePassUnlockStatus" = betterproto.enum_field(7)
    reward_taken_list: List["BattlePassRewardTag"] = betterproto.message_field(11)
    cur_cycle_points: int = betterproto.uint32_field(10)
    paid_platform_flags: int = betterproto.uint32_field(12)
    product_info: "BattlePassProduct" = betterproto.message_field(13)
    is_extra_paid_reward_taken: bool = betterproto.bool_field(6)
    is_viewed: bool = betterproto.bool_field(3)
    schedule_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class BattlePassAllDataNotify(betterproto.Message):
    have_cur_schedule: bool = betterproto.bool_field(2)
    mission_list: List["BattlePassMission"] = betterproto.message_field(4)
    cur_schedule: "BattlePassSchedule" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class BattlePassMissionUpdateNotify(betterproto.Message):
    mission_list: List["BattlePassMission"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class BattlePassMissionDelNotify(betterproto.Message):
    del_mission_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BattlePassCurScheduleUpdateNotify(betterproto.Message):
    have_cur_schedule: bool = betterproto.bool_field(11)
    cur_schedule: "BattlePassSchedule" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class BattlePassRewardTakeOption(betterproto.Message):
    tag: "BattlePassRewardTag" = betterproto.message_field(10)
    option_idx: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TakeBattlePassRewardReq(betterproto.Message):
    take_option_list: List["BattlePassRewardTakeOption"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class TakeBattlePassRewardRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(7)
    retcode: int = betterproto.int32_field(13)
    take_option_list: List["BattlePassRewardTakeOption"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class TakeBattlePassMissionPointReq(betterproto.Message):
    mission_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeBattlePassMissionPointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    mission_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GetBattlePassProductReq(betterproto.Message):
    battle_pass_product_play_type: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetBattlePassProductRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    price_tier: str = betterproto.string_field(6)
    battle_pass_product_play_type: int = betterproto.uint32_field(2)
    product_id: str = betterproto.string_field(1)
    cur_schedule_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SetBattlePassViewedReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SetBattlePassViewedRsp(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class BattlePassBuySuccNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(4)
    product_play_type: int = betterproto.uint32_field(11)
    add_point: int = betterproto.uint32_field(12)
    item_list: List["ItemParam"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class BuyBattlePassLevelReq(betterproto.Message):
    buy_level: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class BuyBattlePassLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    buy_level: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class BlossomBriefInfo(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(13)
    reward_id: int = betterproto.uint32_field(5)
    city_id: int = betterproto.uint32_field(10)
    resin: int = betterproto.uint32_field(11)
    state: int = betterproto.uint32_field(7)
    is_guide_opened: bool = betterproto.bool_field(1)
    monster_level: int = betterproto.uint32_field(8)
    circle_camp_id: int = betterproto.uint32_field(15)
    pos: "Vector" = betterproto.message_field(12)
    scene_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetBlossomBriefInfoListReq(betterproto.Message):
    city_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetBlossomBriefInfoListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    brief_info_list: List["BlossomBriefInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class BlossomBriefInfoNotify(betterproto.Message):
    brief_info_list: List["BlossomBriefInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WorldOwnerBlossomBriefInfoNotify(betterproto.Message):
    brief_info_list: List["BlossomBriefInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class BlossomScheduleInfo(betterproto.Message):
    progress: int = betterproto.uint32_field(13)
    state: int = betterproto.uint32_field(10)
    round: int = betterproto.uint32_field(4)
    circle_camp_id: int = betterproto.uint32_field(15)
    refresh_id: int = betterproto.uint32_field(6)
    finish_progress: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class WorldOwnerBlossomScheduleInfoNotify(betterproto.Message):
    schedule_info: "BlossomScheduleInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BlossomChestCreateNotify(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    circle_camp_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class OpenBlossomCircleCampGuideNotify(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(7)
    circle_camp_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class AnchorPointData(betterproto.Message):
    scene_id: int = betterproto.uint32_field(5)
    anchor_point_id: int = betterproto.uint32_field(9)
    end_time: int = betterproto.uint32_field(8)
    pos: "Vector" = betterproto.message_field(15)
    rot: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AnchorPointDataNotify(betterproto.Message):
    anchor_point_list: List["AnchorPointData"] = betterproto.message_field(10)
    next_usable_time: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class AnchorPointOpReq(betterproto.Message):
    anchor_point_id: int = betterproto.uint32_field(9)
    anchor_point_op_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AnchorPointOpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    anchor_point_id: int = betterproto.uint32_field(12)
    anchor_point_op_type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LunchBoxData(betterproto.Message):
    slot_material_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SetUpLunchBoxWidgetReq(betterproto.Message):
    lunch_box_data: "LunchBoxData" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class SetUpLunchBoxWidgetRsp(betterproto.Message):
    lunch_box_data: "LunchBoxData" = betterproto.message_field(3)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class OneoffGatherPointDetectorData(betterproto.Message):
    hint_center_pos: "Vector" = betterproto.message_field(7)
    hint_radius: int = betterproto.uint32_field(14)
    material_id: int = betterproto.uint32_field(10)
    config_id: int = betterproto.uint32_field(6)
    group_id: int = betterproto.uint32_field(13)
    is_all_collected: bool = betterproto.bool_field(4)
    is_hint_valid: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ClientCollectorData(betterproto.Message):
    material_id: int = betterproto.uint32_field(10)
    max_points: int = betterproto.uint32_field(8)
    curr_points: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TreasureMapDetectorData(betterproto.Message):
    region_id: int = betterproto.uint32_field(4)
    center_pos: "Vector" = betterproto.message_field(7)
    is_region_detected: bool = betterproto.bool_field(6)
    spot_list: List["Vector"] = betterproto.message_field(10)
    radius: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SkyCrystalDetectorData(betterproto.Message):
    is_hint_valid: bool = betterproto.bool_field(3)
    hint_center_pos: "Vector" = betterproto.message_field(8)
    group_id: int = betterproto.uint32_field(6)
    config_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SkyCrystalDetectorQuickUseResult(betterproto.Message):
    sky_crystal_detector_data: "SkyCrystalDetectorData" = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class WidgetCameraInfo(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WidgetThunderBirdFeatherInfo(betterproto.Message):
    entity_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class QuickUseWidgetReq(betterproto.Message):
    location_info: "WidgetCreateLocationInfo" = betterproto.message_field(
        676, group="param"
    )
    camera_info: "WidgetCameraInfo" = betterproto.message_field(478, group="param")
    creator_info: "WidgetCreatorInfo" = betterproto.message_field(812, group="param")
    thunder_bird_feather_info: "WidgetThunderBirdFeatherInfo" = (
        betterproto.message_field(1859, group="param")
    )


@dataclass(eq=False, repr=False)
class QuickUseWidgetRsp(betterproto.Message):
    material_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(5)
    detector_data: "OneoffGatherPointDetectorData" = betterproto.message_field(
        3, group="param"
    )
    client_collector_data: "ClientCollectorData" = betterproto.message_field(
        15, group="param"
    )
    sky_crystal_detector_quick_use_result: "SkyCrystalDetectorQuickUseResult" = (
        betterproto.message_field(168922, group="param")
    )


@dataclass(eq=False, repr=False)
class WidgetCoolDownData(betterproto.Message):
    is_success: bool = betterproto.bool_field(5)
    cool_down_time: int = betterproto.uint64_field(4)
    id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WidgetCoolDownNotify(betterproto.Message):
    normal_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        1
    )
    group_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class WidgetReportReq(betterproto.Message):
    is_clear_sky_crystal_hint: bool = betterproto.bool_field(5)
    is_client_collect: bool = betterproto.bool_field(14)
    is_clear_hint: bool = betterproto.bool_field(13)
    material_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WidgetReportRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    material_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ClientCollectorDataNotify(betterproto.Message):
    client_collector_data_list: List["ClientCollectorData"] = betterproto.message_field(
        13
    )


@dataclass(eq=False, repr=False)
class OneoffGatherPointDetectorDataNotify(betterproto.Message):
    oneoff_gather_point_detector_data_list: List[
        "OneoffGatherPointDetectorData"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SkyCrystalDetectorDataUpdateNotify(betterproto.Message):
    sky_crystal_detector_data: "SkyCrystalDetectorData" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class TreasureMapDetectorDataNotify(betterproto.Message):
    data: "TreasureMapDetectorData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WidgetSlotData(betterproto.Message):
    cd_over_time: int = betterproto.uint32_field(9)
    tag: "WidgetSlotTag" = betterproto.enum_field(14)
    material_id: int = betterproto.uint32_field(11)
    is_active: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class SetWidgetSlotReq(betterproto.Message):
    tag_list: List["WidgetSlotTag"] = betterproto.enum_field(15)
    material_id: int = betterproto.uint32_field(6)
    op: "WidgetSlotOp" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class SetWidgetSlotRsp(betterproto.Message):
    tag_list: List["WidgetSlotTag"] = betterproto.enum_field(15)
    retcode: int = betterproto.int32_field(6)
    material_id: int = betterproto.uint32_field(1)
    op: "WidgetSlotOp" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class WidgetSlotChangeNotify(betterproto.Message):
    op: "WidgetSlotOp" = betterproto.enum_field(11)
    slot: "WidgetSlotData" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GetWidgetSlotReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWidgetSlotRsp(betterproto.Message):
    slot_list: List["WidgetSlotData"] = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class AllWidgetDataNotify(betterproto.Message):
    background_active_widget_list: List[int] = betterproto.uint32_field(11)
    lunch_box_data: "LunchBoxData" = betterproto.message_field(1)
    cool_down_group_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        13
    )
    anchor_point_list: List["AnchorPointData"] = betterproto.message_field(3)
    slot_list: List["WidgetSlotData"] = betterproto.message_field(6)
    next_anchor_point_usable_time: int = betterproto.uint32_field(10)
    client_collector_data_list: List["ClientCollectorData"] = betterproto.message_field(
        4
    )
    oneoff_gather_point_detector_data_list: List[
        "OneoffGatherPointDetectorData"
    ] = betterproto.message_field(15)
    normal_cool_down_data_list: List["WidgetCoolDownData"] = betterproto.message_field(
        9
    )
    sky_crystal_detector_data: "SkyCrystalDetectorData" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class UseWidgetCreateGadgetReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(15)
    rot: "Vector" = betterproto.message_field(12)
    material_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class UseWidgetCreateGadgetRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    material_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class UseWidgetRetractGadgetReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UseWidgetRetractGadgetRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class WidgetGadgetData(betterproto.Message):
    gadget_entity_id_list: List[int] = betterproto.uint32_field(1)
    gadget_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WidgetGadgetAllDataNotify(betterproto.Message):
    widget_gadget_data: List["WidgetGadgetData"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class WidgetGadgetDataNotify(betterproto.Message):
    widget_gadget_data: "WidgetGadgetData" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class WidgetGadgetDestroyNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WidgetCreateLocationInfo(betterproto.Message):
    rot: "Vector" = betterproto.message_field(3)
    pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class WidgetCreatorInfo(betterproto.Message):
    op_type: "WidgetCreatorOpType" = betterproto.enum_field(10)
    entity_id: int = betterproto.uint32_field(1)
    location_info: "WidgetCreateLocationInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class WidgetDoBagReq(betterproto.Message):
    material_id: int = betterproto.uint32_field(9)
    location_info: "WidgetCreateLocationInfo" = betterproto.message_field(
        832, group="op_info"
    )
    widget_creator_info: "WidgetCreatorInfo" = betterproto.message_field(
        1497, group="op_info"
    )


@dataclass(eq=False, repr=False)
class WidgetDoBagRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    material_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WidgetActiveChangeNotify(betterproto.Message):
    widget_data_list: List["WidgetSlotData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WidgetUseAttachAbilityGroupChangeNotify(betterproto.Message):
    is_attach: bool = betterproto.bool_field(6)
    material_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class WidgetCaptureAnimalReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(10)
    entity_id: int = betterproto.uint32_field(15)
    material_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class WidgetCaptureAnimalRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    entity_id: int = betterproto.uint32_field(4)
    material_id: int = betterproto.uint32_field(8)
    pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class WidgetUpdateExtraCdReq(betterproto.Message):
    material_id: int = betterproto.uint32_field(14)
    extra_cd_type: "WidgetExtraCdType" = betterproto.enum_field(10)
    cd_group: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WidgetUpdateExtraCdRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    material_id: int = betterproto.uint32_field(11)
    extra_cd_type: "WidgetExtraCdType" = betterproto.enum_field(6)
    cool_data: "WidgetCoolDownData" = betterproto.message_field(10)
    cd_group: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class FireworksReformParam(betterproto.Message):
    type: "FireworksReformParamType" = betterproto.enum_field(8)
    value: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class FireworksReformData(betterproto.Message):
    id: int = betterproto.uint32_field(13)
    reform_param_list: List["FireworksReformParam"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class FireworksReformDataNotify(betterproto.Message):
    fireworks_reform_data_list: List["FireworksReformData"] = betterproto.message_field(
        6
    )


@dataclass(eq=False, repr=False)
class ReformFireworksReq(betterproto.Message):
    fireworks_reform_data: "FireworksReformData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReformFireworksRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class FireworksLaunchParam(betterproto.Message):
    value: int = betterproto.int32_field(5)
    type: "FireworksLaunchParamType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class FireworksLaunchSchemeData(betterproto.Message):
    scheme_id: int = betterproto.uint32_field(3)
    fireworks_id_list: List[int] = betterproto.uint32_field(2)
    launch_param_list: List["FireworksLaunchParam"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class LaunchFireworksReq(betterproto.Message):
    scheme_data: "FireworksLaunchSchemeData" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class LaunchFireworksRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class FireworksLaunchDataNotify(betterproto.Message):
    scheme_data_list: List["FireworksLaunchSchemeData"] = betterproto.message_field(12)
    last_use_scheme_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChangeWidgetBackgroundActiveStateReq(betterproto.Message):
    is_active: bool = betterproto.bool_field(15)
    material_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChangeWidgetBackgroundActiveStateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    material_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class AllWidgetBackgroundActiveStateNotify(betterproto.Message):
    background_active_widget_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerWidgetInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(14)
    slot_list: List["WidgetSlotData"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class RemotePlayerWidgetNotify(betterproto.Message):
    player_widget_info_list: List["PlayerWidgetInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneNotify(betterproto.Message):
    prev_scene_id: int = betterproto.uint32_field(6)
    dungeon_id: int = betterproto.uint32_field(12)
    is_skip_ui: bool = betterproto.bool_field(1732)
    scene_id: int = betterproto.uint32_field(15)
    type: "EnterType" = betterproto.enum_field(13)
    scene_begin_time: int = betterproto.uint64_field(14)
    world_level: int = betterproto.uint32_field(11)
    world_type: int = betterproto.uint32_field(1490)
    target_uid: int = betterproto.uint32_field(4)
    is_first_login_enter_scene: bool = betterproto.bool_field(3)
    scene_tag_id_list: List[int] = betterproto.uint32_field(5)
    scene_transaction: str = betterproto.string_field(1842)
    prev_pos: "Vector" = betterproto.message_field(8)
    enter_reason: int = betterproto.uint32_field(1828)
    pos: "Vector" = betterproto.message_field(7)
    enter_scene_token: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LeaveSceneReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LeaveSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class SceneInitFinishReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SceneInitFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    enter_scene_token: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SceneEntityAppearNotify(betterproto.Message):
    appear_type: "VisionType" = betterproto.enum_field(15)
    param: int = betterproto.uint32_field(9)
    entity_list: List["SceneEntityInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SceneEntityDisappearNotify(betterproto.Message):
    param: int = betterproto.uint32_field(6)
    entity_list: List[int] = betterproto.uint32_field(1)
    disappear_type: "VisionType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class SceneEntityMoveReq(betterproto.Message):
    motion_info: "MotionInfo" = betterproto.message_field(7)
    scene_time: int = betterproto.uint32_field(4)
    entity_id: int = betterproto.uint32_field(8)
    reliable_seq: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SceneEntityMoveRsp(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    fail_motion: "MotionInfo" = betterproto.message_field(1)
    scene_time: int = betterproto.uint32_field(10)
    reliable_seq: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class SceneAvatarStaminaStepReq(betterproto.Message):
    use_client_rot: bool = betterproto.bool_field(15)
    rot: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SceneAvatarStaminaStepRsp(betterproto.Message):
    use_client_rot: bool = betterproto.bool_field(9)
    retcode: int = betterproto.int32_field(7)
    rot: "Vector" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class SceneEntityMoveNotify(betterproto.Message):
    motion_info: "MotionInfo" = betterproto.message_field(6)
    entity_id: int = betterproto.uint32_field(8)
    scene_time: int = betterproto.uint32_field(15)
    reliable_seq: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class VehicleLocationInfo(betterproto.Message):
    rot: "Vector" = betterproto.message_field(14)
    entity_id: int = betterproto.uint32_field(15)
    cur_hp: float = betterproto.float_field(11)
    owner_uid: int = betterproto.uint32_field(5)
    pos: "Vector" = betterproto.message_field(1)
    uid_list: List[int] = betterproto.uint32_field(3)
    gadget_id: int = betterproto.uint32_field(13)
    max_hp: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayerLocationNotify(betterproto.Message):
    vehicle_loc_list: List["VehicleLocationInfo"] = betterproto.message_field(3)
    scene_id: int = betterproto.uint32_field(9)
    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GetScenePointReq(betterproto.Message):
    belong_uid: int = betterproto.uint32_field(10)
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CityInfo(betterproto.Message):
    city_id: int = betterproto.uint32_field(15)
    crystal_num: int = betterproto.uint32_field(3)
    level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetScenePointRsp(betterproto.Message):
    not_explored_dungeon_entry_list: List[int] = betterproto.uint32_field(11)
    to_be_explore_dungeon_entry_list: List[int] = betterproto.uint32_field(15)
    locked_point_list: List[int] = betterproto.uint32_field(2)
    unhide_point_list: List[int] = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(9)
    belong_uid: int = betterproto.uint32_field(12)
    unlocked_point_list: List[int] = betterproto.uint32_field(13)
    unlock_area_list: List[int] = betterproto.uint32_field(1)
    hide_point_list: List[int] = betterproto.uint32_field(4)
    scene_id: int = betterproto.uint32_field(14)
    not_interact_dungeon_entry_list: List[int] = betterproto.uint32_field(6)
    group_unlimit_point_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class EnterTransPointRegionNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(8)
    point_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ExitTransPointRegionNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ScenePointUnlockNotify(betterproto.Message):
    point_list: List[int] = betterproto.uint32_field(13)
    scene_id: int = betterproto.uint32_field(6)
    unhide_point_list: List[int] = betterproto.uint32_field(12)
    hide_point_list: List[int] = betterproto.uint32_field(1)
    locked_point_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SceneTransToPointReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(13)
    point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SceneTransToPointRsp(betterproto.Message):
    point_id: int = betterproto.uint32_field(14)
    scene_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class EntityJumpNotify(betterproto.Message):
    jump_type: "EntityJumpNotifyType" = betterproto.enum_field(9)
    rot: "Vector" = betterproto.message_field(8)
    pos: "Vector" = betterproto.message_field(10)
    entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetSceneAreaReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(4)
    belong_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetSceneAreaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    city_info_list: List["CityInfo"] = betterproto.message_field(13)
    scene_id: int = betterproto.uint32_field(15)
    area_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneAreaUnlockNotify(betterproto.Message):
    area_list: List[int] = betterproto.uint32_field(10)
    scene_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SceneEntityDrownReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneEntityDrownRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SceneCreateEntityReq(betterproto.Message):
    entity: "CreateEntityInfo" = betterproto.message_field(1)
    is_destroy_when_disconnect: bool = betterproto.bool_field(10)
    reason: "CreateReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class SceneCreateEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    entity_id: int = betterproto.uint32_field(1)
    entity: "CreateEntityInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class SceneDestroyEntityReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneDestroyEntityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SceneForceUnlockNotify(betterproto.Message):
    is_add: bool = betterproto.bool_field(10)
    force_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneForceLockNotify(betterproto.Message):
    force_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EnterWorldAreaReq(betterproto.Message):
    area_type: int = betterproto.uint32_field(8)
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EnterWorldAreaRsp(betterproto.Message):
    area_type: int = betterproto.uint32_field(1)
    area_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class EntityForceSyncReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(1)
    motion_info: "MotionInfo" = betterproto.message_field(11)
    entity_id: int = betterproto.uint32_field(13)
    scene_time: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class EntityForceSyncRsp(betterproto.Message):
    scene_time: int = betterproto.uint32_field(14)
    entity_id: int = betterproto.uint32_field(6)
    fail_motion: "MotionInfo" = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class GetAreaExplorePointReq(betterproto.Message):
    area_id_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetAreaExplorePointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    area_id_list: List[int] = betterproto.uint32_field(11)
    explore_point_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ClientTransmitReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(2)
    reason: "TransmitReason" = betterproto.enum_field(14)
    pos: "Vector" = betterproto.message_field(1)
    rot: "Vector" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ClientTransmitRsp(betterproto.Message):
    reason: "TransmitReason" = betterproto.enum_field(3)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class EnterSceneWeatherAreaNotify(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ExitSceneWeatherAreaNotify(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneAreaWeatherNotify(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(1)
    weather_gadget_id: int = betterproto.uint32_field(9)
    climate_type: int = betterproto.uint32_field(14)
    trans_duration: float = betterproto.float_field(15)
    weather_value_map: Dict[int, str] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )


@dataclass(eq=False, repr=False)
class ScenePlayerInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(10)
    peer_id: int = betterproto.uint32_field(6)
    online_player_info: "OnlinePlayerInfo" = betterproto.message_field(13)
    is_connected: bool = betterproto.bool_field(2)
    name: str = betterproto.string_field(15)
    uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ScenePlayerInfoNotify(betterproto.Message):
    player_info_list: List["ScenePlayerInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PlayerLocationInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(15)
    pos: "Vector" = betterproto.message_field(3)
    rot: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class PlayerWorldLocationInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    player_loc: "PlayerLocationInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class WorldPlayerLocationNotify(betterproto.Message):
    player_world_loc_list: List["PlayerWorldLocationInfo"] = betterproto.message_field(
        8
    )
    player_loc_list: List["PlayerLocationInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class BeginCameraSceneLookNotify(betterproto.Message):
    blend_type: int = betterproto.uint32_field(1154)
    custom_radius: float = betterproto.float_field(7)
    is_set_screen_xy: bool = betterproto.bool_field(5)
    look_pos: "Vector" = betterproto.message_field(4)
    is_recover_keep_current: bool = betterproto.bool_field(11)
    is_abs_follow_pos: bool = betterproto.bool_field(1375)
    keep_rot_type: "BeginCameraSceneLookNotifyKeepRotType" = betterproto.enum_field(6)
    is_change_play_mode: bool = betterproto.bool_field(9)
    disable_protect: int = betterproto.uint32_field(1103)
    screen_y: float = betterproto.float_field(15)
    is_set_follow_pos: bool = betterproto.bool_field(13)
    is_force: bool = betterproto.bool_field(12)
    blend_duration: float = betterproto.float_field(1758)
    entity_id: int = betterproto.uint32_field(1327)
    screen_x: float = betterproto.float_field(3)
    is_force_walk: bool = betterproto.bool_field(10)
    other_params: List[str] = betterproto.string_field(1)
    follow_pos: "Vector" = betterproto.message_field(8)
    is_allow_input: bool = betterproto.bool_field(2)
    duration: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class EndCameraSceneLookNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MarkEntityInMinMapNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(4)
    monster_id: int = betterproto.uint32_field(7)
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class UnmarkEntityInMinMapNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ExecuteGroupTriggerReq(betterproto.Message):
    source_name: str = betterproto.string_field(15)
    target_entity_id: int = betterproto.uint32_field(12)
    param2: int = betterproto.int32_field(8)
    source_entity_id: int = betterproto.uint32_field(4)
    param3: int = betterproto.int32_field(10)
    param1: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ExecuteGroupTriggerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class LevelupCityReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(5)
    area_id: int = betterproto.uint32_field(3)
    item_num: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LevelupCityRsp(betterproto.Message):
    area_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(3)
    scene_id: int = betterproto.uint32_field(4)
    city_info: "CityInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class RoutePointChangeInfo(betterproto.Message):
    wait_time: float = betterproto.float_field(6)
    target_velocity: float = betterproto.float_field(14)
    point_index: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SceneRouteChangeInfo(betterproto.Message):
    is_forward: bool = betterproto.bool_field(12)
    route_id: int = betterproto.uint32_field(15)
    type: int = betterproto.uint32_field(4)
    point_list: List["RoutePointChangeInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SceneRouteChangeNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(12)
    scene_time: int = betterproto.uint32_field(11)
    route_list: List["SceneRouteChangeInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlatformStartRouteNotify(betterproto.Message):
    platform: "PlatformInfo" = betterproto.message_field(15)
    scene_time: int = betterproto.uint32_field(12)
    entity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlatformStopRouteNotify(betterproto.Message):
    scene_time: int = betterproto.uint32_field(9)
    entity_id: int = betterproto.uint32_field(12)
    platform: "PlatformInfo" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class PlatformChangeRouteNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(2)
    platform: "PlatformInfo" = betterproto.message_field(1)
    scene_time: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ScenePlayerSoundNotify(betterproto.Message):
    sound_name: str = betterproto.string_field(4)
    play_type: "ScenePlayerSoundNotifyPlaySoundType" = betterproto.enum_field(8)
    play_pos: "Vector" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PersonalSceneJumpRsp(betterproto.Message):
    dest_scene_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(8)
    dest_pos: "Vector" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class SealBattleBeginNotify(betterproto.Message):
    seal_max_progress: int = betterproto.uint32_field(9)
    seal_entity_id: int = betterproto.uint32_field(1)
    seal_radius: int = betterproto.uint32_field(12)
    battle_type: "SealBattleType" = betterproto.enum_field(14)


@dataclass(eq=False, repr=False)
class SealBattleEndNotify(betterproto.Message):
    is_win: bool = betterproto.bool_field(4)
    seal_entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SealBattleProgressNotify(betterproto.Message):
    seal_entity_id: int = betterproto.uint32_field(9)
    max_progress: int = betterproto.uint32_field(10)
    seal_radius: int = betterproto.uint32_field(4)
    progress: int = betterproto.uint32_field(5)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ClientPauseNotify(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AvatarEnterSceneInfo(betterproto.Message):
    server_buff_list: List["ServerBuff"] = betterproto.message_field(14)
    avatar_entity_id: int = betterproto.uint32_field(7)
    weapon_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(12)
    weapon_entity_id: int = betterproto.uint32_field(10)
    avatar_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(2)
    avatar_guid: int = betterproto.uint64_field(13)
    weapon_guid: int = betterproto.uint64_field(9)
    buff_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TeamEnterSceneInfo(betterproto.Message):
    ability_control_block: "AbilityControlBlock" = betterproto.message_field(7)
    team_ability_info: "AbilitySyncStateInfo" = betterproto.message_field(10)
    team_entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class MpLevelEntityInfo(betterproto.Message):
    ability_info: "AbilitySyncStateInfo" = betterproto.message_field(2)
    entity_id: int = betterproto.uint32_field(11)
    authority_peer_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerEnterSceneInfoNotify(betterproto.Message):
    team_enter_info: "TeamEnterSceneInfo" = betterproto.message_field(8)
    enter_scene_token: int = betterproto.uint32_field(12)
    avatar_enter_info: List["AvatarEnterSceneInfo"] = betterproto.message_field(7)
    cur_avatar_entity_id: int = betterproto.uint32_field(6)
    mp_level_entity_info: "MpLevelEntityInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class JoinPlayerSceneReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class JoinPlayerSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class SceneKickPlayerReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SceneKickPlayerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    target_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneKickPlayerNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(8)
    kicker_uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HitClientTrivialNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(11)
    owner_entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class BackMyWorldReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BackMyWorldRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class SeeMonsterReq(betterproto.Message):
    monster_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SeeMonsterRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class AddSeenMonsterNotify(betterproto.Message):
    monster_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AllSeenMonsterNotify(betterproto.Message):
    monster_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneTimeNotify(betterproto.Message):
    scene_time: int = betterproto.uint64_field(14)
    is_paused: bool = betterproto.bool_field(1)
    scene_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EnterSceneReadyReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EnterSceneReadyRsp(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class EnterScenePeerNotify(betterproto.Message):
    dest_scene_id: int = betterproto.uint32_field(12)
    enter_scene_token: int = betterproto.uint32_field(11)
    host_peer_id: int = betterproto.uint32_field(14)
    peer_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EnterSceneDoneReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EnterSceneDoneRsp(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class WorldPlayerDieNotify(betterproto.Message):
    die_type: "PlayerDieType" = betterproto.enum_field(12)
    murderer_entity_id: int = betterproto.uint32_field(15)
    monster_id: int = betterproto.uint32_field(8, group="entity")
    gadget_id: int = betterproto.uint32_field(4, group="entity")


@dataclass(eq=False, repr=False)
class WorldPlayerReviveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class WorldPlayerReviveRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class JoinPlayerFailNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class SetSceneWeatherAreaReq(betterproto.Message):
    weather_gadget_id: int = betterproto.uint32_field(13)
    weather_value_map: Dict[int, str] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )


@dataclass(eq=False, repr=False)
class SetSceneWeatherAreaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ExecuteGadgetLuaReq(betterproto.Message):
    source_entity_id: int = betterproto.uint32_field(12)
    param3: int = betterproto.int32_field(1)
    param1: int = betterproto.int32_field(5)
    param2: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class ExecuteGadgetLuaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class CutSceneExtraParam(betterproto.Message):
    detail_param_list: List[float] = betterproto.double_field(1)


@dataclass(eq=False, repr=False)
class CutSceneBeginNotify(betterproto.Message):
    is_wait_others: bool = betterproto.bool_field(9)
    cutscene_id: int = betterproto.uint32_field(14)
    extra_param_list: List["CutSceneExtraParam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CutSceneFinishNotify(betterproto.Message):
    cutscene_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class CutSceneEndNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    cutscene_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ClientScriptEventNotify(betterproto.Message):
    param_list: List[int] = betterproto.int32_field(9)
    source_entity_id: int = betterproto.uint32_field(14)
    event_type: int = betterproto.uint32_field(10)
    target_entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SceneEntitiesMovesReq(betterproto.Message):
    entity_move_info_list: List["EntityMoveInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class EntityMoveFailInfo(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    scene_time: int = betterproto.uint32_field(9)
    fail_motion: "MotionInfo" = betterproto.message_field(14)
    reliable_seq: int = betterproto.uint32_field(4)
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SceneEntitiesMovesRsp(betterproto.Message):
    entity_move_fail_info_list: List["EntityMoveFailInfo"] = betterproto.message_field(
        11
    )


@dataclass(eq=False, repr=False)
class SceneEntitiesMoveCombineNotify(betterproto.Message):
    entity_move_info_list: List["EntityMoveInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class UnlockTransPointReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(12)
    scene_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class UnlockTransPointRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class SceneWeatherForcastReq(betterproto.Message):
    weather_area_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SceneWeatherForcastRsp(betterproto.Message):
    next_climate_time: int = betterproto.uint64_field(14)
    forcast_climate_list: List[int] = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class MarkMapReq(betterproto.Message):
    mark: "MapMarkPoint" = betterproto.message_field(8)
    old: "MapMarkPoint" = betterproto.message_field(6)
    op: "MarkMapReqOperation" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class MarkMapRsp(betterproto.Message):
    mark_list: List["MapMarkPoint"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class AllMarkPointNotify(betterproto.Message):
    mark_list: List["MapMarkPoint"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class WorldDataNotify(betterproto.Message):
    world_prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class EntityMoveRoomNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(11)
    dest_room_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WorldPlayerInfoNotify(betterproto.Message):
    player_widget_info_list: List["PlayerWidgetInfo"] = betterproto.message_field(8)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(14)
    player_uid_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PostEnterSceneReq(betterproto.Message):
    enter_scene_token: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PostEnterSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    enter_scene_token: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChatInfo(betterproto.Message):
    time: int = betterproto.uint32_field(13)
    sequence: int = betterproto.uint32_field(10)
    to_uid: int = betterproto.uint32_field(7)
    uid: int = betterproto.uint32_field(15)
    is_read: bool = betterproto.bool_field(5)
    text: str = betterproto.string_field(1946, group="content")
    icon: int = betterproto.uint32_field(914, group="content")
    system_hint: "ChatInfoSystemHint" = betterproto.message_field(1753, group="content")


@dataclass(eq=False, repr=False)
class ChatInfoSystemHint(betterproto.Message):
    type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerChatReq(betterproto.Message):
    channel_id: int = betterproto.uint32_field(13)
    chat_info: "ChatInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class PlayerChatRsp(betterproto.Message):
    chat_forbidden_endtime: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class PlayerChatNotify(betterproto.Message):
    chat_info: "ChatInfo" = betterproto.message_field(3)
    channel_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerChatCdNotify(betterproto.Message):
    over_time: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ChatHistoryNotify(betterproto.Message):
    chat_info: List["ChatInfo"] = betterproto.message_field(9)
    channel_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SceneDataNotify(betterproto.Message):
    level_config_name_list: List[str] = betterproto.string_field(15)
    scene_tag_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DungeonEntryToBeExploreNotify(betterproto.Message):
    dungeon_entry_scene_point_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(4)
    dungeon_entry_config_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetDungeonEntryExploreConditionReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(6)
    dungeon_entry_config_id: int = betterproto.uint32_field(2)
    dungeon_entry_scene_point_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DungeonEntryCond(betterproto.Message):
    cond_reason: "DungeonEntryBlockReason" = betterproto.enum_field(7)
    param1: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetDungeonEntryExploreConditionRsp(betterproto.Message):
    dungeon_entry_cond: "DungeonEntryCond" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class UnfreezeGroupLimitNotify(betterproto.Message):
    point_id: int = betterproto.uint32_field(9)
    scene_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SetEntityClientDataNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)
    entity_client_data: "EntityClientData" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GroupSuiteNotify(betterproto.Message):
    group_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GroupUnloadNotify(betterproto.Message):
    group_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MonsterAiConfigHashNotify(betterproto.Message):
    job_id: int = betterproto.uint32_field(10)
    entity_id: int = betterproto.uint32_field(15)
    hash_value: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class ShowTemplateReminderNotify(betterproto.Message):
    is_revoke: bool = betterproto.bool_field(1)
    template_reminder_id: int = betterproto.uint32_field(14)
    param_uid_list: List[int] = betterproto.uint32_field(3)
    param_list: List[int] = betterproto.int32_field(10)
    is_need_cache: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ShowCommonTipsNotify(betterproto.Message):
    content: str = betterproto.string_field(8)
    title: str = betterproto.string_field(13)
    close_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CloseCommonTipsNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChangeWorldToSingleModeNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SyncScenePlayTeamEntityNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(2)
    entity_info_list: List["PlayTeamEntityInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class DelScenePlayTeamEntityNotify(betterproto.Message):
    del_entity_id_list: List[int] = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CylinderRegionSize(betterproto.Message):
    radius: float = betterproto.float_field(8)
    height: float = betterproto.float_field(7)


@dataclass(eq=False, repr=False)
class PolygonRegionSize(betterproto.Message):
    point_list: List["VectorPlane"] = betterproto.message_field(5)
    height: float = betterproto.float_field(9)


@dataclass(eq=False, repr=False)
class PlayerEyePointStateNotify(betterproto.Message):
    region_entity_id: int = betterproto.uint32_field(15)
    eye_point_pos: "Vector" = betterproto.message_field(1)
    is_use_eye_point: bool = betterproto.bool_field(3)
    region_config_id: int = betterproto.uint32_field(7)
    region_shape: int = betterproto.uint32_field(12)
    is_filter_stream_pos: bool = betterproto.bool_field(2)
    fix_lod_level: int = betterproto.int32_field(5)
    region_group_id: int = betterproto.uint32_field(4)
    sphere_radius: float = betterproto.float_field(255, group="region_size")
    cubic_size: "Vector" = betterproto.message_field(1823, group="region_size")
    cylinder_size: "CylinderRegionSize" = betterproto.message_field(
        1862, group="region_size"
    )
    polygon_size: "PolygonRegionSize" = betterproto.message_field(
        877, group="region_size"
    )


@dataclass(eq=False, repr=False)
class GetMapMarkTipsReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMapMarkTipsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    mark_tips_list: List["MapMarkTipsInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class ChangeWorldToSingleModeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChangeWorldToSingleModeRsp(betterproto.Message):
    quit_mp_valid_time: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class GetWorldMpInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetWorldMpInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    is_in_mp_mode: bool = betterproto.bool_field(1)
    quit_mp_valid_time: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class EntityConfigHashEntry(betterproto.Message):
    job_id: int = betterproto.uint32_field(13)
    hash_value: int = betterproto.int32_field(6)
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class EntityConfigHashNotify(betterproto.Message):
    ability_entry_list: List["EntityConfigHashEntry"] = betterproto.message_field(3)
    avatar_entry_list: List["EntityConfigHashEntry"] = betterproto.message_field(15)
    combat_entry_list: List["EntityConfigHashEntry"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ForceDragAvatarNotify(betterproto.Message):
    scene_time: int = betterproto.uint32_field(3)
    delta_time_ms: int = betterproto.uint64_field(1)
    entity_id: int = betterproto.uint32_field(2)
    motion_info: "MotionInfo" = betterproto.message_field(10)
    is_first_valid: bool = betterproto.bool_field(8)
    last_move_time_ms: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class MonsterPointArrayRouteUpdateNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)
    monster_route: "MonsterRoute" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ForceDragBackTransferNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScenePerformanceReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetScenePerformanceRsp(betterproto.Message):
    monster_num: int = betterproto.uint32_field(9)
    gather_num_insight: int = betterproto.uint32_field(1)
    gadget_num: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(7)
    dynamic_group_num: int = betterproto.uint32_field(12)
    group_num: int = betterproto.uint32_field(2)
    pos: "Vector" = betterproto.message_field(4)
    entity_num: int = betterproto.uint32_field(8)
    gather_num: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SceneAudioNotify(betterproto.Message):
    param2: List[float] = betterproto.float_field(14)
    type: int = betterproto.int32_field(3)
    param3: List[str] = betterproto.string_field(11)
    source_uid: int = betterproto.uint32_field(6)
    param1: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HitTreeNotify(betterproto.Message):
    tree_type: int = betterproto.uint32_field(11)
    tree_pos: "Vector" = betterproto.message_field(2)
    drop_pos: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class EntityTagChangeNotify(betterproto.Message):
    tag: str = betterproto.string_field(2)
    entity_id: int = betterproto.uint32_field(8)
    is_add: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class AvatarFollowRouteNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    template_id: int = betterproto.uint32_field(6)
    start_scene_time_ms: int = betterproto.uint32_field(8)
    route: "Route" = betterproto.message_field(2)
    client_params: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class SceneEntityUpdateNotify(betterproto.Message):
    param: int = betterproto.uint32_field(10)
    appear_type: "VisionType" = betterproto.enum_field(13)
    entity_list: List["SceneEntityInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ClientHashDebugNotify(betterproto.Message):
    job_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerWorldSceneInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(11)
    scene_tag_id_list: List[int] = betterproto.uint32_field(8)
    is_locked: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class PlayerWorldSceneInfoListNotify(betterproto.Message):
    info_list: List["PlayerWorldSceneInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class LuaEnvironmentEffectNotify(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    int_param_list: List[int] = betterproto.int32_field(12)
    effect_alias: str = betterproto.string_field(3)
    float_param_list: List[float] = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class ClientLoadingCostumeVerificationNotify(betterproto.Message):
    costume_id: int = betterproto.uint32_field(9)
    prefab_hash: int = betterproto.uint64_field(2)
    guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class ShowClientGuideNotify(betterproto.Message):
    guide_name: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class ShowClientTutorialNotify(betterproto.Message):
    tutorial_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetMapAreaReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMapAreaRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    map_area_info_list: List["MapAreaInfo"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class MapAreaChangeNotify(betterproto.Message):
    map_area_info_list: List["MapAreaInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class LeaveWorldNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GuestBeginEnterSceneNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(8)
    uid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GuestPostEnterSceneNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LevelTagDataNotify(betterproto.Message):
    level_tag_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class StopReminderNotify(betterproto.Message):
    reminder_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class AreaPlayInfoNotify(betterproto.Message):
    detail_play_type: int = betterproto.uint32_field(14)
    area_play_type: "AreaPlayType" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class CheckGroupReplacedReq(betterproto.Message):
    group_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CheckGroupReplacedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    replaced_group_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DeathZoneObserveNotify(betterproto.Message):
    target_entity_id: int = betterproto.uint32_field(14)
    source_entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HitTreeInfo(betterproto.Message):
    tree_pos: "Vector" = betterproto.message_field(12)
    tree_type: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WorldChestOpenNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(6)
    scene_id: int = betterproto.uint32_field(9)
    config_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class WidgetQuickHitTreeReq(betterproto.Message):
    hit_tree_info_list: List["HitTreeInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WidgetQuickHitTreeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class BeginCameraSceneLookWithTemplateNotify(betterproto.Message):
    look_pos: "Vector" = betterproto.message_field(8)
    template_id: int = betterproto.uint32_field(5)
    follow_pos: "Vector" = betterproto.message_field(2)
    entity_id: int = betterproto.uint32_field(12)
    other_params: List[str] = betterproto.string_field(13)
    follow_type: "BeginCameraSceneLookWithTemplateNotifyFollowType" = (
        betterproto.enum_field(9)
    )


@dataclass(eq=False, repr=False)
class RefreshEntityAuthNotify(betterproto.Message):
    entity_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ScenePlayerBackgroundAvatarRefreshNotify(betterproto.Message):
    entity_list: List["SceneEntityInfo"] = betterproto.message_field(4)
    appear_type: "VisionType" = betterproto.enum_field(8)
    param: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PrivateChatReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(7)
    text: str = betterproto.string_field(3, group="content")
    icon: int = betterproto.uint32_field(4, group="content")


@dataclass(eq=False, repr=False)
class PrivateChatRsp(betterproto.Message):
    chat_forbidden_endtime: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class PrivateChatNotify(betterproto.Message):
    chat_info: "ChatInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class PullPrivateChatReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(5)
    pull_num: int = betterproto.uint32_field(7)
    from_sequence: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PullPrivateChatRsp(betterproto.Message):
    chat_info: List["ChatInfo"] = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class PullRecentChatReq(betterproto.Message):
    pull_num: int = betterproto.uint32_field(6)
    begin_sequence: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PullRecentChatRsp(betterproto.Message):
    chat_info: List["ChatInfo"] = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ReadPrivateChatReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ReadPrivateChatRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ChatChannelUpdateNotify(betterproto.Message):
    channel_id: int = betterproto.uint32_field(3)
    is_create: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ChatChannelDataNotify(betterproto.Message):
    channel_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CodexTypeData(betterproto.Message):
    codex_id_list: List[int] = betterproto.uint32_field(14)
    weapon_max_promote_level_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    type: "CodexType" = betterproto.enum_field(13)
    have_viewed_list: List[bool] = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class CodexDataFullNotify(betterproto.Message):
    last_read_pushtips_codex_id: int = betterproto.uint32_field(4)
    recent_viewed_pushtips_list: List[int] = betterproto.uint32_field(2)
    last_read_pushtips_type_id: int = betterproto.uint32_field(3)
    type_data_list: List["CodexTypeData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class CodexDataUpdateNotify(betterproto.Message):
    id: int = betterproto.uint32_field(8)
    weapon_max_promote_level: int = betterproto.uint32_field(15)
    type: "CodexType" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class QueryCodexMonsterBeKilledNumReq(betterproto.Message):
    codex_id_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class QueryCodexMonsterBeKilledNumRsp(betterproto.Message):
    codex_id_list: List[int] = betterproto.uint32_field(4)
    be_captured_num_list: List[int] = betterproto.uint32_field(6)
    be_killed_num_list: List[int] = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ViewCodexReq(betterproto.Message):
    type_data_list: List["CodexTypeData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class ViewCodexRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    push_tips_reward_list: List[int] = betterproto.uint32_field(10)
    recent_viewed_pushtips_list: List[int] = betterproto.uint32_field(3)
    type_data_list: List["CodexTypeData"] = betterproto.message_field(9)
    push_tips_read_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class SetCodexPushtipsReadReq(betterproto.Message):
    type_id: int = betterproto.uint32_field(2)
    codex_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SetCodexPushtipsReadRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    type_id: int = betterproto.uint32_field(5)
    codex_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class MainCoop(betterproto.Message):
    seen_ending_map: Dict[int, int] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    normal_var_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    self_confidence: int = betterproto.uint32_field(5)
    save_point_id_list: List[int] = betterproto.uint32_field(1)
    status: "MainCoopStatus" = betterproto.enum_field(6)
    temp_var_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class AllCoopInfoNotify(betterproto.Message):
    main_coop_list: List["MainCoop"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class MainCoopUpdateNotify(betterproto.Message):
    main_coop_list: List["MainCoop"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SaveMainCoopReq(betterproto.Message):
    normal_var_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    self_confidence: int = betterproto.uint32_field(2)
    save_point_id: int = betterproto.uint32_field(1)
    temp_var_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SaveMainCoopRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    save_point_id_list: List[int] = betterproto.uint32_field(15)
    id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class FinishMainCoopReq(betterproto.Message):
    id: int = betterproto.uint32_field(10)
    ending_save_point_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FinishMainCoopRsp(betterproto.Message):
    id: int = betterproto.uint32_field(2)
    ending_save_point_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class CoopPoint(betterproto.Message):
    self_confidence: int = betterproto.uint32_field(15)
    state: "CoopPointState" = betterproto.enum_field(10)
    id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CoopReward(betterproto.Message):
    id: int = betterproto.uint32_field(5)
    state: "CoopRewardState" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class CoopCg(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(14)
    id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CoopChapter(betterproto.Message):
    coop_cg_list: List["CoopCg"] = betterproto.message_field(1)
    id: int = betterproto.uint32_field(2)
    coop_point_list: List["CoopPoint"] = betterproto.message_field(11)
    finish_dialog_list: List[int] = betterproto.uint32_field(10)
    finished_end_count: int = betterproto.uint32_field(14)
    total_end_count: int = betterproto.uint32_field(7)
    coop_reward_list: List["CoopReward"] = betterproto.message_field(5)
    lock_reason_list: List[int] = betterproto.uint32_field(12)
    state: "CoopChapterState" = betterproto.enum_field(4)
    seen_ending_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class CoopDataNotify(betterproto.Message):
    chapter_list: List["CoopChapter"] = betterproto.message_field(15)
    viewed_chapter_list: List[int] = betterproto.uint32_field(7)
    is_have_progress: bool = betterproto.bool_field(10)
    cur_coop_point: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CoopChapterUpdateNotify(betterproto.Message):
    chapter_list: List["CoopChapter"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class CoopCgUpdateNotify(betterproto.Message):
    cg_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CoopRewardUpdateNotify(betterproto.Message):
    reward_list: List["CoopReward"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class UnlockCoopChapterReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class UnlockCoopChapterRsp(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class CoopPointUpdateNotify(betterproto.Message):
    coop_point: "CoopPoint" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class StartCoopPointReq(betterproto.Message):
    coop_point: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StartCoopPointRsp(betterproto.Message):
    is_start: bool = betterproto.bool_field(9)
    start_main_coop: "MainCoop" = betterproto.message_field(15)
    coop_point: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class CancelCoopTaskReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CancelCoopTaskRsp(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class TakeCoopRewardReq(betterproto.Message):
    reward_config_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TakeCoopRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    reward_config_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CoopProgressUpdateNotify(betterproto.Message):
    cur_coop_point: int = betterproto.uint32_field(11)
    is_have_progress: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class SaveCoopDialogReq(betterproto.Message):
    main_coop_id: int = betterproto.uint32_field(11)
    dialog_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class SaveCoopDialogRsp(betterproto.Message):
    dialog_id: int = betterproto.uint32_field(8)
    main_coop_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class CoopCgShowNotify(betterproto.Message):
    cg_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class SetCoopChapterViewedReq(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetCoopChapterViewedRsp(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class MainCoopFailNotify(betterproto.Message):
    textmap_id: str = betterproto.string_field(7)
    chapter_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class CustomDungeonBlock(betterproto.Message):
    block_id: int = betterproto.uint32_field(8)
    rot: "Vector" = betterproto.message_field(12)
    guid: int = betterproto.uint32_field(4)
    pos: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CustomDungeonRoom(betterproto.Message):
    room_id: int = betterproto.uint32_field(15)
    block_list: List["CustomDungeonBlock"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonSetting(betterproto.Message):
    open_room_list: List[int] = betterproto.uint32_field(1)
    is_arrive_finish: bool = betterproto.bool_field(14)
    life_num: int = betterproto.uint32_field(6)
    start_room_id: int = betterproto.uint32_field(4)
    is_forbid_skill: bool = betterproto.bool_field(3)
    coin_limit: int = betterproto.uint32_field(10)
    time_limit: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CustomDungeon(betterproto.Message):
    setting: "CustomDungeonSetting" = betterproto.message_field(1)
    room_list: List["CustomDungeonRoom"] = betterproto.message_field(15)
    dungeon_id: int = betterproto.uint32_field(3)
    dungeon_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class EnterCustomDungeonReq(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(11)
    dungeon_id: int = betterproto.uint32_field(12)
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class EnterCustomDungeonRsp(betterproto.Message):
    custom_dungeon: "CustomDungeon" = betterproto.message_field(14)
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(2)
    retcode: int = betterproto.int32_field(10)
    room_cost_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SaveCustomDungeonRoomReq(betterproto.Message):
    custom_dungeon_room: "CustomDungeonRoom" = betterproto.message_field(5)
    is_update_setting: bool = betterproto.bool_field(7)
    setting: "CustomDungeonSetting" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class SaveCustomDungeonRoomRsp(betterproto.Message):
    room_id: int = betterproto.uint32_field(14)
    error_block_list: List["CustomDungeonBlock"] = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class CustomDungeonAbstract(betterproto.Message):
    brick_statistics_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    first_publish_time: int = betterproto.uint32_field(3)
    total_coin_num: int = betterproto.uint32_field(15)
    last_publish_time: int = betterproto.uint32_field(6)
    finish_room_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CustomDungeonSocial(betterproto.Message):
    win_num: int = betterproto.uint32_field(4)
    like_num: int = betterproto.uint32_field(12)
    play_num: int = betterproto.uint32_field(7)
    store_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CustomDungeonBrief(betterproto.Message):
    setting: "CustomDungeonSetting" = betterproto.message_field(2)
    is_psn_platform: bool = betterproto.bool_field(13)
    social: "CustomDungeonSocial" = betterproto.message_field(7)
    dungeon_guid: int = betterproto.uint64_field(10)
    last_save_time: int = betterproto.uint32_field(14)
    tag_list: List[int] = betterproto.uint32_field(15)
    dungeon_id: int = betterproto.uint32_field(5)
    battle_min_cost_time: int = betterproto.uint32_field(12)
    state: "CustomDungeonState" = betterproto.enum_field(1)
    abstract: "CustomDungeonAbstract" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class OtherCustomDungeonBrief(betterproto.Message):
    creator_detail: "SocialDetail" = betterproto.message_field(4)
    battle_min_cost_time: int = betterproto.uint32_field(15)
    abstract: "CustomDungeonAbstract" = betterproto.message_field(2)
    dungeon_guid: int = betterproto.uint64_field(14)
    setting: "CustomDungeonSetting" = betterproto.message_field(10)
    dungeon_id: int = betterproto.uint32_field(6)
    tag_list: List[int] = betterproto.uint32_field(1)
    is_adventure_dungeon: bool = betterproto.bool_field(11)
    is_psn_platform: bool = betterproto.bool_field(9)
    is_stored: bool = betterproto.bool_field(3)
    social: "CustomDungeonSocial" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class CustomDungeonBanInfo(betterproto.Message):
    ban_type: "CustomDungeonBanType" = betterproto.enum_field(11)
    expire_time: int = betterproto.uint32_field(6)
    dungeon_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class ChangeCustomDungeonRoomReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChangeCustomDungeonRoomRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    room_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class RemoveCustomDungeonReq(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class RemoveCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    dungeon_guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class TryCustomDungeonReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TryCustomDungeonRsp(betterproto.Message):
    room_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PublishCustomDungeonReq(betterproto.Message):
    tag_list: List[int] = betterproto.uint32_field(1)
    dungeon_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class PublishCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class ExitCustomDungeonTryReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ExitCustomDungeonTryRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class CustomDungeonUpdateNotify(betterproto.Message):
    dungeon_brief: "CustomDungeonBrief" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GetRecommendCustomDungeonReq(betterproto.Message):
    is_refresh: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class GetRecommendCustomDungeonRsp(betterproto.Message):
    custom_dungeon_list: List["OtherCustomDungeonBrief"] = betterproto.message_field(8)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GetStoreCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetStoreCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    custom_dungeon_list: List["OtherCustomDungeonBrief"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SearchCustomDungeonReq(betterproto.Message):
    dungeon_code: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class SearchCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    custom_dungeon_brief: "OtherCustomDungeonBrief" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class StoreCustomDungeonReq(betterproto.Message):
    is_cancel_store: bool = betterproto.bool_field(9)
    dungeon_guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class StoreCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class LikeCustomDungeonReq(betterproto.Message):
    is_cancel_like: bool = betterproto.bool_field(5)
    dungeon_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class LikeCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class GetCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    ban_info: "CustomDungeonBanInfo" = betterproto.message_field(14)
    brief_list: List["CustomDungeonBrief"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CustomDungeonRecoverNotify(betterproto.Message):
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(14)
    try_type: "TryCustomDungeonType" = betterproto.enum_field(3)
    custom_dungeon: "CustomDungeon" = betterproto.message_field(10)
    official_black_coin_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class BackPlayCustomDungeonOfficialReq(betterproto.Message):
    room_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BackPlayCustomDungeonOfficialRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class CustomDungeonOfficialNotify(betterproto.Message):
    try_type: "TryCustomDungeonType" = betterproto.enum_field(9)
    official_black_coin_list: List[int] = betterproto.uint32_field(14)
    enter_type: "EnterCustomDungeonType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class CustomDungeonVerify(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(3)
    uid: int = betterproto.uint32_field(15)
    timestamp: int = betterproto.uint32_field(4)
    region: str = betterproto.string_field(11)
    lang: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ReplayCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReplayCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class CustomDungeonBattleRecordNotify(betterproto.Message):
    min_cost_time: int = betterproto.uint32_field(13)
    dungeon_guid: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class OutStuckCustomDungeonReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class OutStuckCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class DraftOwnerStartInviteReq(betterproto.Message):
    draft_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DraftInviteFailInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(8)
    reason: "DraftInviteFailReason" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class DraftOwnerStartInviteRsp(betterproto.Message):
    invite_fail_info_list: List["DraftInviteFailInfo"] = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(9)
    wrong_uid: int = betterproto.uint32_field(3)
    draft_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DraftOwnerInviteNotify(betterproto.Message):
    draft_id: int = betterproto.uint32_field(4)
    invite_deadline_time: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class DraftGuestReplyInviteReq(betterproto.Message):
    draft_id: int = betterproto.uint32_field(10)
    is_agree: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class DraftGuestReplyInviteRsp(betterproto.Message):
    draft_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(1)
    is_agree: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class DraftGuestReplyInviteNotify(betterproto.Message):
    draft_id: int = betterproto.uint32_field(5)
    is_agree: bool = betterproto.bool_field(9)
    guest_uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DraftInviteResultNotify(betterproto.Message):
    is_all_argee: bool = betterproto.bool_field(9)
    draft_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DraftOwnerTwiceConfirmNotify(betterproto.Message):
    twice_confirm_deadline_time: int = betterproto.uint32_field(15)
    draft_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DraftGuestReplyTwiceConfirmReq(betterproto.Message):
    is_agree: bool = betterproto.bool_field(15)
    draft_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DraftGuestReplyTwiceConfirmRsp(betterproto.Message):
    draft_id: int = betterproto.uint32_field(5)
    is_agree: bool = betterproto.bool_field(13)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class DraftTwiceConfirmResultNotify(betterproto.Message):
    is_all_argee: bool = betterproto.bool_field(7)
    draft_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DraftGuestReplyTwiceConfirmNotify(betterproto.Message):
    is_agree: bool = betterproto.bool_field(14)
    draft_id: int = betterproto.uint32_field(15)
    guest_uid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TowerTeam(betterproto.Message):
    tower_team_id: int = betterproto.uint32_field(3)
    avatar_guid_list: List[int] = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class TowerLevelRecord(betterproto.Message):
    satisfied_cond_list: List[int] = betterproto.uint32_field(13)
    level_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TowerFloorRecord(betterproto.Message):
    floor_star_reward_progress: int = betterproto.uint32_field(15)
    passed_level_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    floor_id: int = betterproto.uint32_field(12)
    passed_level_record_list: List["TowerLevelRecord"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecord(betterproto.Message):
    tower_team_list: List["TowerTeam"] = betterproto.message_field(8)
    is_empty: bool = betterproto.bool_field(6)
    buff_id_list: List[int] = betterproto.uint32_field(4)
    is_upper_part: bool = betterproto.bool_field(2)
    cur_level_index: int = betterproto.uint32_field(1)
    cur_floor_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TowerBriefDataNotify(betterproto.Message):
    total_star_num: int = betterproto.uint32_field(11)
    last_floor_index: int = betterproto.uint32_field(8)
    schedule_start_time: int = betterproto.uint32_field(15)
    next_schedule_change_time: int = betterproto.uint32_field(6)
    is_finished_entrance_floor: bool = betterproto.bool_field(14)
    last_level_index: int = betterproto.uint32_field(4)
    tower_schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TowerFloorRecordChangeNotify(betterproto.Message):
    is_finished_entrance_floor: bool = betterproto.bool_field(11)
    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class TowerCurLevelRecordChangeNotify(betterproto.Message):
    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class TowerDailyRewardProgressChangeNotify(betterproto.Message):
    daily_floor_id: int = betterproto.uint32_field(15)
    daily_level_index: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TowerTeamSelectReq(betterproto.Message):
    tower_team_list: List["TowerTeam"] = betterproto.message_field(11)
    floor_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TowerTeamSelectRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class TowerAllDataReq(betterproto.Message):
    is_interact: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class TowerMonthlyBrief(betterproto.Message):
    tower_schedule_id: int = betterproto.uint32_field(15)
    best_floor_index: int = betterproto.uint32_field(6)
    best_level_index: int = betterproto.uint32_field(3)
    total_star_count: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TowerAllDataRsp(betterproto.Message):
    tower_schedule_id: int = betterproto.uint32_field(10)
    daily_level_index: int = betterproto.uint32_field(9)
    skip_floor_granted_reward_item_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_first_interact: bool = betterproto.bool_field(3)
    is_finished_entrance_floor: bool = betterproto.bool_field(1)
    tower_floor_record_list: List["TowerFloorRecord"] = betterproto.message_field(5)
    daily_floor_id: int = betterproto.uint32_field(11)
    commemorative_reward_id: int = betterproto.uint32_field(13)
    last_schedule_monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(1222)
    next_schedule_change_time: int = betterproto.uint32_field(6)
    valid_tower_record_num: int = betterproto.uint32_field(7)
    skip_to_floor_index: int = betterproto.uint32_field(2)
    floor_open_time_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    cur_level_record: "TowerCurLevelRecord" = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(8)
    schedule_start_time: int = betterproto.uint32_field(914)
    monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class TowerEnterLevelReq(betterproto.Message):
    enter_point_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TowerEnterLevelRsp(betterproto.Message):
    tower_buff_id_list: List[int] = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(1)
    level_index: int = betterproto.uint32_field(14)
    floor_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TowerBuffSelectReq(betterproto.Message):
    tower_buff_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TowerBuffSelectRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    tower_buff_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TowerSurrenderReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerSurrenderRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class TowerGetFloorStarRewardReq(betterproto.Message):
    floor_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TowerGetFloorStarRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    floor_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TowerLevelEndNotify(betterproto.Message):
    next_floor_id: int = betterproto.uint32_field(4)
    reward_item_list: List["ItemParam"] = betterproto.message_field(12)
    continue_state: int = betterproto.uint32_field(15)
    is_success: bool = betterproto.bool_field(5)
    finished_star_cond_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondData(betterproto.Message):
    is_fail: bool = betterproto.bool_field(15)
    cond_value: int = betterproto.uint32_field(9)
    is_pause: bool = betterproto.bool_field(13)
    star_cond_index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TowerLevelStarCondNotify(betterproto.Message):
    level_index: int = betterproto.uint32_field(14)
    floor_id: int = betterproto.uint32_field(11)
    cond_data_list: List["TowerLevelStarCondData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class TowerMiddleLevelChangeTeamNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerFightRecordPair(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    data: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TowerMonthlyCombatRecord(betterproto.Message):
    most_kill_avatar_pair: "TowerFightRecordPair" = betterproto.message_field(14)
    most_cast_normal_skill_avatar_pair: "TowerFightRecordPair" = (
        betterproto.message_field(8)
    )
    most_reveal_avatar_list: List["TowerFightRecordPair"] = betterproto.message_field(6)
    most_cast_energy_skill_avatar_pair: "TowerFightRecordPair" = (
        betterproto.message_field(4)
    )
    highest_dps_avatr_pair: "TowerFightRecordPair" = betterproto.message_field(12)
    most_take_damage_avatar_pair: "TowerFightRecordPair" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class TowerMonthlyDetail(betterproto.Message):
    monthly_combat_record: "TowerMonthlyCombatRecord" = betterproto.message_field(2)
    monthly_brief: "TowerMonthlyBrief" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class TowerRecordHandbookReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TowerRecordHandbookRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    monthly_detail_list: List["TowerMonthlyDetail"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class DungeonEntryInfoReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(9)
    scene_point_id_list: List["Uint32Pair"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DungeonEntryInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(6)
    dungeon_id: int = betterproto.uint32_field(5)
    boss_chest_num: int = betterproto.uint32_field(12)
    max_boss_chest_num: int = betterproto.uint32_field(13)
    next_refresh_time: int = betterproto.uint32_field(11)
    weekly_boss_resin_discount_info: "WeeklyBossResinDiscountInfo" = (
        betterproto.message_field(9)
    )
    start_time: int = betterproto.uint32_field(15)
    is_passed: bool = betterproto.bool_field(4)
    left_times: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DungeonEntryPointInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(12)
    point_id: int = betterproto.uint32_field(6)
    dungeon_entry_list: List["DungeonEntryInfo"] = betterproto.message_field(1)
    recommend_dungeon_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DungeonEntryInfoRsp(betterproto.Message):
    dungeon_entry_list: List["DungeonEntryInfo"] = betterproto.message_field(12)
    point_id: int = betterproto.uint32_field(15)
    dungeon_entry_point_list: List["DungeonEntryPointInfo"] = betterproto.message_field(
        4
    )
    recommend_dungeon_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class DungeonEnterPosInfo(betterproto.Message):
    quest_id: int = betterproto.uint32_field(13)
    point_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonReq(betterproto.Message):
    enter_pos_info: "DungeonEnterPosInfo" = betterproto.message_field(2)
    point_id: int = betterproto.uint32_field(13)
    dungeon_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerEnterDungeonRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(2)
    point_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonReq(betterproto.Message):
    is_quit_immediately: bool = betterproto.bool_field(10)
    point_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerQuitDungeonRsp(betterproto.Message):
    point_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class DungeonWayPointNotify(betterproto.Message):
    is_add: bool = betterproto.bool_field(9)
    active_way_point_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class DungeonWayPointActivateReq(betterproto.Message):
    way_point_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonWayPointActivateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    way_point_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class StrengthenPointData(betterproto.Message):
    base_point: int = betterproto.uint32_field(10)
    cur_point: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class DungeonSettleExhibitionInfo(betterproto.Message):
    player_info: "OnlinePlayerInfo" = betterproto.message_field(3)
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class CrystalLinkDungeonSettleInfo(betterproto.Message):
    kill_elite_monster_num: int = betterproto.uint32_field(2)
    final_score: int = betterproto.uint32_field(6)
    level_id: int = betterproto.uint32_field(12)
    is_new_record: bool = betterproto.bool_field(13)
    difficulty_id: int = betterproto.uint32_field(9)
    kill_normal_mosnter_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SummerTimeV2DungeonSettleInfo(betterproto.Message):
    is_success: bool = betterproto.bool_field(5)
    taken_reward_count: int = betterproto.uint32_field(2)
    cur_dungeon_reward_limit: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class InstableSprayDungeonSettleInfo(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    score_list: List[int] = betterproto.uint32_field(4)
    is_new_record: bool = betterproto.bool_field(13)
    difficulty: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WindFieldDungeonSettleInfo(betterproto.Message):
    after_watcher_id_list: List[int] = betterproto.uint32_field(11)
    before_watcher_id_list: List[int] = betterproto.uint32_field(7)
    fail_reason: "WindFieldDungeonFailReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2SettleInfo(betterproto.Message):
    is_challenge_highest_difficulty: bool = betterproto.bool_field(7)
    create_dungeon_player_uid: int = betterproto.uint32_field(4)
    challenge_mode_difficulty: int = betterproto.uint32_field(6)
    is_new_record_time: bool = betterproto.bool_field(1)
    record_time: int = betterproto.uint32_field(12)
    first_time_finish_difficulty: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DungeonSettleNotify(betterproto.Message):
    result: int = betterproto.uint32_field(10)
    dungeon_id: int = betterproto.uint32_field(13)
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    exhibition_info_list: List[
        "DungeonSettleExhibitionInfo"
    ] = betterproto.message_field(8)
    create_player_uid: int = betterproto.uint32_field(12)
    fail_cond_list: List[int] = betterproto.uint32_field(11)
    use_time: int = betterproto.uint32_field(1)
    close_time: int = betterproto.uint32_field(4)
    is_success: bool = betterproto.bool_field(7)
    settle_show: Dict[int, "ParamList"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    tower_level_end_notify: "TowerLevelEndNotify" = betterproto.message_field(
        351, group="detail"
    )
    trial_avatar_first_pass_dungeon_notify: "TrialAvatarFirstPassDungeonNotify" = (
        betterproto.message_field(635, group="detail")
    )
    channeller_slab_loop_dungeon_result_info: "ChannellerSlabLoopDungeonResultInfo" = (
        betterproto.message_field(686, group="detail")
    )
    effigy_challenge_dungeon_result_info: "EffigyChallengeDungeonResultInfo" = (
        betterproto.message_field(328, group="detail")
    )
    roguelike_dungeon_settle_info: "RoguelikeDungeonSettleInfo" = (
        betterproto.message_field(1482, group="detail")
    )
    crystal_link_settle_info: "CrystalLinkDungeonSettleInfo" = (
        betterproto.message_field(112, group="detail")
    )
    summer_time_v2_dungeon_settle_info: "SummerTimeV2DungeonSettleInfo" = (
        betterproto.message_field(1882, group="detail")
    )
    instable_spray_settle_info: "InstableSprayDungeonSettleInfo" = (
        betterproto.message_field(193, group="detail")
    )
    wind_field_dungeon_settle_info: "WindFieldDungeonSettleInfo" = (
        betterproto.message_field(1825, group="detail")
    )
    effigy_challenge_v2_settle_info: "EffigyChallengeV2SettleInfo" = (
        betterproto.message_field(1802, group="detail")
    )


@dataclass(eq=False, repr=False)
class DungeonPlayerDieNotify(betterproto.Message):
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    wait_time: int = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(9)
    murderer_entity_id: int = betterproto.uint32_field(13)
    die_type: "PlayerDieType" = betterproto.enum_field(3)
    revive_count: int = betterproto.uint32_field(6)
    monster_id: int = betterproto.uint32_field(4, group="entity")
    gadget_id: int = betterproto.uint32_field(8, group="entity")


@dataclass(eq=False, repr=False)
class DungeonDieOptionReq(betterproto.Message):
    die_option: "PlayerDieOption" = betterproto.enum_field(11)
    is_quit_immediately: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class DungeonDieOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    revive_count: int = betterproto.uint32_field(10)
    die_option: "PlayerDieOption" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class DungeonShowReminderNotify(betterproto.Message):
    reminder_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieReq(betterproto.Message):
    die_type: "PlayerDieType" = betterproto.enum_field(6)
    dungeon_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DungeonPlayerDieRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class DungeonDataNotify(betterproto.Message):
    dungeon_data_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class DungeonChallengeBeginNotify(betterproto.Message):
    father_index: int = betterproto.uint32_field(5)
    param_list: List[int] = betterproto.uint32_field(14)
    challenge_index: int = betterproto.uint32_field(6)
    challenge_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(4)
    uid_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChallengeBrief(betterproto.Message):
    cur_progress: int = betterproto.uint32_field(9)
    challenge_index: int = betterproto.uint32_field(10)
    is_success: bool = betterproto.bool_field(4)
    challenge_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CustomDungeonResultInfo(betterproto.Message):
    is_liked: bool = betterproto.bool_field(12)
    got_coin_num: int = betterproto.uint32_field(9)
    child_challenge_list: List["ChallengeBrief"] = betterproto.message_field(6)
    dungeon_guid: int = betterproto.uint64_field(3)
    finish_type: "CustomDungeonFinishType" = betterproto.enum_field(7)
    time_cost: int = betterproto.uint32_field(11)
    is_arrive_finish: bool = betterproto.bool_field(2)
    is_stored: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class DungeonChallengeFinishNotify(betterproto.Message):
    strengthen_point_data_map: Dict[int, "StrengthenPointData"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    finish_type: "ChallengeFinishType" = betterproto.enum_field(9)
    is_new_record: bool = betterproto.bool_field(10)
    challenge_record_type: int = betterproto.uint32_field(7)
    time_cost: int = betterproto.uint32_field(4)
    current_value: int = betterproto.uint32_field(15)
    is_success: bool = betterproto.bool_field(3)
    challenge_index: int = betterproto.uint32_field(5)
    channeller_slab_loop_dungeon_result_info: "ChannellerSlabLoopDungeonResultInfo" = (
        betterproto.message_field(1521, group="detail")
    )
    effigy_challenge_dungeon_result_info: "EffigyChallengeDungeonResultInfo" = (
        betterproto.message_field(1627, group="detail")
    )
    potion_dungeon_result_info: "PotionDungeonResultInfo" = betterproto.message_field(
        1824, group="detail"
    )
    custom_dungeon_result_info: "CustomDungeonResultInfo" = betterproto.message_field(
        1664, group="detail"
    )


@dataclass(eq=False, repr=False)
class ChallengeDataNotify(betterproto.Message):
    value: int = betterproto.uint32_field(8)
    challenge_index: int = betterproto.uint32_field(2)
    param_index: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DungeonFollowNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DungeonGetStatueDropReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonGetStatueDropRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class ChallengeRecord(betterproto.Message):
    challenge_record_type: int = betterproto.uint32_field(14)
    challenge_index: int = betterproto.uint32_field(15)
    challenge_id: int = betterproto.uint32_field(1)
    best_value: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ChallengeRecordNotify(betterproto.Message):
    group_id: int = betterproto.uint32_field(2)
    challenge_record_list: List["ChallengeRecord"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamAvatar(betterproto.Message):
    player_uid: int = betterproto.uint32_field(2)
    avatar_info: "AvatarInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInfoNotify(betterproto.Message):
    player_state_map: Dict[
        int, "DungeonCandidateTeamPlayerState"
    ] = betterproto.map_field(10, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM)
    dungeon_id: int = betterproto.uint32_field(9)
    ready_player_uid: List[int] = betterproto.uint32_field(13)
    match_type: int = betterproto.uint32_field(2)
    avatar_list: List["DungeonCandidateTeamAvatar"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(5)
    vaild_deadline_time_sec: int = betterproto.uint32_field(9)
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamRefuseNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamPlayerLeaveNotify(betterproto.Message):
    reason: "DungeonCandidateTeamPlayerLeaveReason" = betterproto.enum_field(3)
    player_uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamDismissNotify(betterproto.Message):
    reason: "DungeonCandidateTeamDismissReason" = betterproto.enum_field(9)
    player_uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamCreateReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(7)
    dungeon_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamCreateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteReq(betterproto.Message):
    player_uids: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    invalid_player_uids: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamKickReq(betterproto.Message):
    player_uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamKickRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamLeaveReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamLeaveRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamReplyInviteReq(betterproto.Message):
    is_accept: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamReplyInviteRsp(betterproto.Message):
    is_trans_point: bool = betterproto.bool_field(4)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetReadyReq(betterproto.Message):
    is_ready: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetReadyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamChangeAvatarReq(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamChangeAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class DailyDungeonEntryInfo(betterproto.Message):
    dungeon_entry_config_id: int = betterproto.uint32_field(12)
    dungeon_entry_id: int = betterproto.uint32_field(15)
    recommend_dungeon_entry_info: "DungeonEntryInfo" = betterproto.message_field(1)
    recommend_dungeon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetDailyDungeonEntryInfoReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetDailyDungeonEntryInfoRsp(betterproto.Message):
    daily_dungeon_info_list: List["DailyDungeonEntryInfo"] = betterproto.message_field(
        2
    )
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class DungeonSlipRevivePointActivateReq(betterproto.Message):
    slip_revive_point_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DungeonSlipRevivePointActivateRsp(betterproto.Message):
    slip_revive_point_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class DungeonInterruptChallengeReq(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(14)
    group_id: int = betterproto.uint32_field(13)
    challenge_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class DungeonInterruptChallengeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    challenge_index: int = betterproto.uint32_field(2)
    group_id: int = betterproto.uint32_field(15)
    challenge_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class InteractDailyDungeonInfoNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonRestartReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class DungeonRestartRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(9)
    point_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteNotify(betterproto.Message):
    player_uid: int = betterproto.uint32_field(3)
    cd: int = betterproto.uint32_field(15)
    point_id: int = betterproto.uint32_field(13)
    dungeon_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteReplyReq(betterproto.Message):
    is_accept: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteReplyRsp(betterproto.Message):
    is_accept: bool = betterproto.bool_field(10)
    is_trans_point: bool = betterproto.bool_field(1)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class DungeonRestartInviteReplyNotify(betterproto.Message):
    is_accept: bool = betterproto.bool_field(6)
    player_uid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DungeonRestartResultNotify(betterproto.Message):
    is_add_accpet: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetChangingAvatarReq(betterproto.Message):
    is_changing_avatar: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class DungeonCandidateTeamSetChangingAvatarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class MistTrialFloorLevelNotify(betterproto.Message):
    floor_level: int = betterproto.uint32_field(7)
    dungeon_scene_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DungeonReviseLevelNotify(betterproto.Message):
    scene_level: int = betterproto.uint32_field(5)
    revise_level: int = betterproto.uint32_field(10)
    dungeon_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EnterFishingReq(betterproto.Message):
    fish_pool_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EnterFishingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    fish_pool_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class StartFishingReq(betterproto.Message):
    rod_entity_id: int = betterproto.uint32_field(5)
    fish_pool_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class StartFishingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    fish_pool_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class FishCastRodReq(betterproto.Message):
    bait_id: int = betterproto.uint32_field(14)
    rod_id: int = betterproto.uint32_field(4)
    rod_entity_id: int = betterproto.uint32_field(7)
    pos: "Vector" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class FishCastRodRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class FishChosenNotify(betterproto.Message):
    fish_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class FishEscapeNotify(betterproto.Message):
    reason: "FishEscapeReason" = betterproto.enum_field(4)
    pos: "Vector" = betterproto.message_field(7)
    uid: int = betterproto.uint32_field(14)
    fish_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class FishBiteReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FishBiteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class FishBattleBeginReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FishBattleBeginRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class FishBattleEndReq(betterproto.Message):
    max_bonus_time: int = betterproto.uint32_field(3)
    battle_result: "FishBattleResult" = betterproto.enum_field(10)
    is_always_bonus: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class FishBattleEndRsp(betterproto.Message):
    is_got_reward: bool = betterproto.bool_field(10)
    reward_item_list: List["ItemParam"] = betterproto.message_field(11)
    talent_item_list: List["ItemParam"] = betterproto.message_field(13)
    drop_item_list: List["ItemParam"] = betterproto.message_field(9)
    retcode: int = betterproto.int32_field(7)
    no_reward_reason: "FishBattleEndRspFishNoRewardReason" = betterproto.enum_field(14)
    battle_result: "FishBattleResult" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class ExitFishingReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ExitFishingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class FishAttractNotify(betterproto.Message):
    fish_id_list: List[int] = betterproto.uint32_field(3)
    pos: "Vector" = betterproto.message_field(9)
    uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FishBaitGoneNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlayerFishingDataNotify(betterproto.Message):
    last_fish_rod_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FishPoolDataNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(6)
    today_fish_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetGachaInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GachaUpInfo(betterproto.Message):
    item_parent_type: int = betterproto.uint32_field(7)
    item_id_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GachaInfo(betterproto.Message):
    ten_cost_item_id: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(14)
    display_up4_item_list: List[int] = betterproto.uint32_field(1875)
    cur_schedule_daily_gacha_times: int = betterproto.uint32_field(469)
    gacha_up_info_list: List["GachaUpInfo"] = betterproto.message_field(1233)
    gacha_prob_url: str = betterproto.string_field(8)
    gacha_prefab_path: str = betterproto.string_field(15)
    wish_item_id: int = betterproto.uint32_field(1637)
    begin_time: int = betterproto.uint32_field(1)
    wish_max_progress: int = betterproto.uint32_field(1222)
    schedule_id: int = betterproto.uint32_field(10)
    gacha_prob_url_oversea: str = betterproto.string_field(1481)
    gacha_type: int = betterproto.uint32_field(13)
    left_gacha_times: int = betterproto.uint32_field(5)
    display_up5_item_list: List[int] = betterproto.uint32_field(2006)
    gacha_times_limit: int = betterproto.uint32_field(11)
    cost_item_num: int = betterproto.uint32_field(3)
    is_new_wish: bool = betterproto.bool_field(733)
    cost_item_id: int = betterproto.uint32_field(9)
    ten_cost_item_num: int = betterproto.uint32_field(6)
    gacha_preview_prefab_path: str = betterproto.string_field(4)
    wish_progress: int = betterproto.uint32_field(1819)
    title_textmap: str = betterproto.string_field(736)
    gacha_record_url_oversea: str = betterproto.string_field(1854)
    gacha_sort_id: int = betterproto.uint32_field(7)
    gacha_record_url: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class GetGachaInfoRsp(betterproto.Message):
    is_under_general_restrict: bool = betterproto.bool_field(6)
    gacha_random: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(10)
    is_under_minors_restrict: bool = betterproto.bool_field(2)
    daily_gacha_times: int = betterproto.uint32_field(5)
    gacha_info_list: List["GachaInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class DoGachaReq(betterproto.Message):
    gacha_times: int = betterproto.uint32_field(10)
    gacha_schedule_id: int = betterproto.uint32_field(7)
    gacha_type: int = betterproto.uint32_field(14)
    gacha_random: int = betterproto.uint32_field(13)
    gacha_tag: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class GachaTransferItem(betterproto.Message):
    item: "ItemParam" = betterproto.message_field(3)
    is_transfer_item_new: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class GachaItem(betterproto.Message):
    gacha_item: "ItemParam" = betterproto.message_field(7)
    is_gacha_item_new: bool = betterproto.bool_field(6)
    is_flash_card: bool = betterproto.bool_field(8)
    token_item_list: List["ItemParam"] = betterproto.message_field(9)
    transfer_items: List["GachaTransferItem"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class DoGachaRsp(betterproto.Message):
    cur_schedule_daily_gacha_times: int = betterproto.uint32_field(155)
    cost_item_num: int = betterproto.uint32_field(10)
    wish_max_progress: int = betterproto.uint32_field(9)
    wish_item_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(13)
    ten_cost_item_num: int = betterproto.uint32_field(3)
    wish_progress: int = betterproto.uint32_field(2)
    gacha_item_list: List["GachaItem"] = betterproto.message_field(15)
    ten_cost_item_id: int = betterproto.uint32_field(7)
    gacha_times: int = betterproto.uint32_field(4)
    is_under_minors_restrict: bool = betterproto.bool_field(1435)
    is_under_general_restrict: bool = betterproto.bool_field(1868)
    gacha_type: int = betterproto.uint32_field(12)
    gacha_times_limit: int = betterproto.uint32_field(1)
    cost_item_id: int = betterproto.uint32_field(14)
    daily_gacha_times: int = betterproto.uint32_field(1240)
    left_gacha_times: int = betterproto.uint32_field(6)
    new_gacha_random: int = betterproto.uint32_field(11)
    gacha_schedule_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GachaWishReq(betterproto.Message):
    gacha_schedule_id: int = betterproto.uint32_field(14)
    gacha_type: int = betterproto.uint32_field(13)
    item_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GachaWishRsp(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(8)
    gacha_schedule_id: int = betterproto.uint32_field(7)
    wish_max_progress: int = betterproto.uint32_field(2)
    wish_progress: int = betterproto.uint32_field(5)
    wish_item_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GachaOpenWishNotify(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(2)
    gacha_schedule_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GachaSimpleInfoNotify(betterproto.Message):
    is_new: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GadgetInteractReq(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(8)
    is_use_condense_resin: bool = betterproto.bool_field(15)
    op_type: "InterOpType" = betterproto.enum_field(5)
    resin_cost_type: "ResinCostType" = betterproto.enum_field(1)
    ui_interact_id: int = betterproto.uint32_field(2)
    gadget_entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GadgetInteractRsp(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(10)
    interact_type: "InteractType" = betterproto.enum_field(2)
    op_type: "InterOpType" = betterproto.enum_field(3)
    retcode: int = betterproto.int32_field(7)
    gadget_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GadgetStateNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(5)
    gadget_state: int = betterproto.uint32_field(3)
    is_enable_interact: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class WorktopOptionNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(11)
    option_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(12)
    option_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class SelectWorktopOptionRsp(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(13)
    option_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class BossChestActivateNotify(betterproto.Message):
    qualify_uid_list: List[int] = betterproto.uint32_field(1)
    entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class BlossomChestInfoNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(9)
    blossom_chest_info: "BlossomChestInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GadgetPlayStartNotify(betterproto.Message):
    start_time: int = betterproto.uint32_field(14)
    entity_id: int = betterproto.uint32_field(15)
    play_type: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GadgetPlayUidInfo(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(2)
    battle_watcher_id: int = betterproto.uint32_field(6)
    uid: int = betterproto.uint32_field(7)
    icon: int = betterproto.uint32_field(14)
    score: int = betterproto.uint32_field(4)
    nickname: str = betterproto.string_field(3)
    online_id: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class GadgetPlayStopNotify(betterproto.Message):
    is_win: bool = betterproto.bool_field(14)
    entity_id: int = betterproto.uint32_field(7)
    play_type: int = betterproto.uint32_field(4)
    uid_info_list: List["GadgetPlayUidInfo"] = betterproto.message_field(8)
    score: int = betterproto.uint32_field(5)
    cost_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GadgetPlayDataNotify(betterproto.Message):
    play_type: int = betterproto.uint32_field(12)
    progress: int = betterproto.uint32_field(9)
    entity_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GadgetPlayUidOpNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(11)
    uid_list: List[int] = betterproto.uint32_field(2)
    play_type: int = betterproto.uint32_field(6)
    param_str: str = betterproto.string_field(1)
    op: int = betterproto.uint32_field(7)
    param_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GadgetGeneralRewardInfoNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(13)
    general_reward_info: "GadgetGeneralRewardInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GadgetAutoPickDropInfoNotify(betterproto.Message):
    item_list: List["Item"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class UpdateAbilityCreatedMovingPlatformNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    op_type: "UpdateAbilityCreatedMovingPlatformNotifyOpType" = betterproto.enum_field(
        3
    )


@dataclass(eq=False, repr=False)
class FoundationReq(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(14)
    point_config_id: int = betterproto.uint32_field(12)
    building_id: int = betterproto.uint32_field(13)
    op_type: "FoundationOpType" = betterproto.enum_field(10)


@dataclass(eq=False, repr=False)
class FoundationRsp(betterproto.Message):
    op_type: "FoundationOpType" = betterproto.enum_field(13)
    gadget_entity_id: int = betterproto.uint32_field(10)
    building_id: int = betterproto.uint32_field(11)
    point_config_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class FoundationNotify(betterproto.Message):
    info: "FoundationInfo" = betterproto.message_field(7)
    gadget_entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GadgetTalkChangeNotify(betterproto.Message):
    gadget_entity_id: int = betterproto.uint32_field(5)
    cur_gadget_talk_state: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GadgetChainLevelUpdateNotify(betterproto.Message):
    gadget_chain_level_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GadgetChainLevelChangeNotify(betterproto.Message):
    gadget_chain_level_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class VehicleInteractReq(betterproto.Message):
    interact_type: "VehicleInteractType" = betterproto.enum_field(8)
    pos: int = betterproto.uint32_field(12)
    entity_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class VehicleInteractRsp(betterproto.Message):
    interact_type: "VehicleInteractType" = betterproto.enum_field(15)
    member: "VehicleMember" = betterproto.message_field(3)
    entity_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class CreateVehicleReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(11)
    vehicle_id: int = betterproto.uint32_field(2)
    scene_point_id: int = betterproto.uint32_field(7)
    rot: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CreateVehicleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    vehicle_id: int = betterproto.uint32_field(9)
    entity_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class RequestLiveInfoReq(betterproto.Message):
    live_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RequestLiveInfoRsp(betterproto.Message):
    spare_live_url: str = betterproto.string_field(14)
    retcode: int = betterproto.int32_field(9)
    live_url: str = betterproto.string_field(12)
    live_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LiveStartNotify(betterproto.Message):
    live_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ProjectorOptionReq(betterproto.Message):
    op_type: int = betterproto.uint32_field(7)
    entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ProjectorOptionRsp(betterproto.Message):
    entity_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(12)
    op_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class LiveEndNotify(betterproto.Message):
    live_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class VehicleStaminaNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(6)
    cur_stamina: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class GadgetCustomTreeInfoNotify(betterproto.Message):
    custom_gadget_tree_info: "CustomGadgetTreeInfo" = betterproto.message_field(5)
    gadget_entity_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GadgetChangeLevelTagReq(betterproto.Message):
    level_tag_id: int = betterproto.uint32_field(14)
    combination_info: "CustomGadgetTreeInfo" = betterproto.message_field(11)
    gadget_entity_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GadgetChangeLevelTagRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class NightCrowGadgetObservationMatchReq(betterproto.Message):
    target_gadget_state: int = betterproto.uint32_field(3)
    gadget_entity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class NightCrowGadgetObservationMatchRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class DeshretObeliskChestInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(5)
    pos: "Vector" = betterproto.message_field(9)
    group_id: int = betterproto.uint32_field(7)
    config_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DeshretObeliskChestInfoNotify(betterproto.Message):
    chest_info_list: List["DeshretObeliskChestInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GcgAttackCostInfo(betterproto.Message):
    skill_id: int = betterproto.uint32_field(8)
    cost_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GcgPlayCardCostInfo(betterproto.Message):
    cost_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    card_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgSelectOnStageCostInfo(betterproto.Message):
    cost_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    card_guid: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgCostReviseInfo(betterproto.Message):
    is_can_attack: bool = betterproto.bool_field(4)
    can_use_hand_card_id_list: List[int] = betterproto.uint32_field(11)
    play_card_cost_list: List["GcgPlayCardCostInfo"] = betterproto.message_field(5)
    select_on_stage_cost_list: List[
        "GcgSelectOnStageCostInfo"
    ] = betterproto.message_field(10)
    attack_cost_list: List["GcgAttackCostInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GcgMsgTokenChange(betterproto.Message):
    before: int = betterproto.uint32_field(13)
    token_type: int = betterproto.uint32_field(4)
    card_guid: int = betterproto.uint32_field(2)
    after: int = betterproto.uint32_field(11)
    reason: "GcgReason" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class GcgMsgPhaseChange(betterproto.Message):
    allow_controller_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    before_phase: "GcgPhaseType" = betterproto.enum_field(12)
    after_phase: "GcgPhaseType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class GcgMsgAddCards(betterproto.Message):
    pos: int = betterproto.uint32_field(11)
    zone: "GcgZoneType" = betterproto.enum_field(2)
    reason: "GcgReason" = betterproto.enum_field(15)
    controller_id: int = betterproto.uint32_field(13)
    card_guid_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgMsgRemoveCards(betterproto.Message):
    controller_id: int = betterproto.uint32_field(15)
    zone: "GcgZoneType" = betterproto.enum_field(10)
    reason: "GcgReason" = betterproto.enum_field(5)
    card_guid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgMsgMoveCard(betterproto.Message):
    controller_id: int = betterproto.uint32_field(14)
    to: "GcgZoneType" = betterproto.enum_field(5)
    from_: "GcgZoneType" = betterproto.enum_field(12)
    is_fail: bool = betterproto.bool_field(10)
    card_guid: int = betterproto.uint32_field(7)
    reason: "GcgReason" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class GcgMsgSelectOnStage(betterproto.Message):
    controller_id: int = betterproto.uint32_field(6)
    reason: "GcgReason" = betterproto.enum_field(10)
    card_guid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgMsgSelectOnStageByEffect(betterproto.Message):
    skill_id: int = betterproto.uint32_field(12)
    controller_id: int = betterproto.uint32_field(15)
    card_guid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgMsgDiceRoll(betterproto.Message):
    dice_side_list: List["GcgDiceSideType"] = betterproto.enum_field(10)
    dice_num: int = betterproto.uint32_field(15)
    controller_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgMsgDiceReroll(betterproto.Message):
    controller_id: int = betterproto.uint32_field(2)
    select_dice_index_list: List[int] = betterproto.uint32_field(1)
    dice_side_list: List["GcgDiceSideType"] = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class GcgMsgPass(betterproto.Message):
    controller_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgMsgCharDie(betterproto.Message):
    controller_id: int = betterproto.uint32_field(5)
    card_guid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgMsgUseSkill(betterproto.Message):
    skill_id: int = betterproto.uint32_field(9)
    card_guid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgMsgUseSkillEnd(betterproto.Message):
    card_guid: int = betterproto.uint32_field(11)
    skill_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgDamageDetail(betterproto.Message):
    skill_id: int = betterproto.uint32_field(10)
    card_guid: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgMsgSkillResult(betterproto.Message):
    skill_id: int = betterproto.uint32_field(12)
    last_hp: int = betterproto.uint32_field(14)
    detail_list: List["GcgDamageDetail"] = betterproto.message_field(2)
    target_card_guid: int = betterproto.uint32_field(7)
    effect_element: int = betterproto.uint32_field(5)
    from_result_seq: int = betterproto.uint32_field(15)
    damage: int = betterproto.uint32_field(6)
    result_seq: int = betterproto.uint32_field(4)
    src_card_guid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgMsgCostDice(betterproto.Message):
    controller_id: int = betterproto.uint32_field(6)
    select_dice_index_list: List[int] = betterproto.uint32_field(13)
    reason: "GcgReason" = betterproto.enum_field(9)


@dataclass(eq=False, repr=False)
class GcgMsgAddDice(betterproto.Message):
    reason: "GcgReason" = betterproto.enum_field(4)
    controller_id: int = betterproto.uint32_field(10)
    change_count: int = betterproto.int32_field(1)
    dice_map: Dict[int, "GcgDiceSideType"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_ENUM
    )


@dataclass(eq=False, repr=False)
class GcgMsgNewCard(betterproto.Message):
    card: "GcgCard" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GcgMsgUpdateController(betterproto.Message):
    allow_controller_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GcgMsgModifyAdd(betterproto.Message):
    pos: int = betterproto.uint32_field(9)
    owner_card_guid: int = betterproto.uint32_field(10)
    card_guid_list: List[int] = betterproto.uint32_field(15)
    controller_id: int = betterproto.uint32_field(14)
    reason: "GcgReason" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class GcgMsgModifyRemove(betterproto.Message):
    controller_id: int = betterproto.uint32_field(14)
    reason: "GcgReason" = betterproto.enum_field(12)
    owner_card_guid: int = betterproto.uint32_field(5)
    card_guid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgMsgPveGenCardOp(betterproto.Message):
    skill_id_list: List[int] = betterproto.uint32_field(1)
    card_guid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgMsgPveDoOp(betterproto.Message):
    skill_id: int = betterproto.uint32_field(4)
    card_guid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgMsgDuelDataChange(betterproto.Message):
    round: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgMsgClientPerform(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(2)
    perform_type: "GcgClientPerformType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class GcgMsgGameOver(betterproto.Message):
    end_reason: "GcgEndReason" = betterproto.enum_field(13)
    win_controller_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgMsgOpTimer(betterproto.Message):
    begin_time: int = betterproto.fixed64_field(9)
    phase: "GcgPhaseType" = betterproto.enum_field(3)
    time_stamp: int = betterproto.fixed64_field(13)
    controller_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgMsgWaitingListChange(betterproto.Message):
    cur_index: int = betterproto.uint32_field(6)
    controller_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgMsgCardUpdate(betterproto.Message):
    card: "GcgCard" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class GcgMsgCostRevise(betterproto.Message):
    controller_id: int = betterproto.uint32_field(5)
    cost_revise: "GcgCostReviseInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GcgMessage(betterproto.Message):
    token_change: "GcgMsgTokenChange" = betterproto.message_field(12, group="message")
    phase_change: "GcgMsgPhaseChange" = betterproto.message_field(13, group="message")
    add_cards: "GcgMsgAddCards" = betterproto.message_field(10, group="message")
    remove_cards: "GcgMsgRemoveCards" = betterproto.message_field(14, group="message")
    select_on_stage: "GcgMsgSelectOnStage" = betterproto.message_field(
        6, group="message"
    )
    dice_roll: "GcgMsgDiceRoll" = betterproto.message_field(9, group="message")
    dice_reroll: "GcgMsgDiceReroll" = betterproto.message_field(11, group="message")
    pass_: "GcgMsgPass" = betterproto.message_field(5, group="message")
    char_die: "GcgMsgCharDie" = betterproto.message_field(2, group="message")
    skill_result: "GcgMsgSkillResult" = betterproto.message_field(1, group="message")
    cost_dice: "GcgMsgCostDice" = betterproto.message_field(7, group="message")
    add_dice: "GcgMsgAddDice" = betterproto.message_field(3, group="message")
    move_card: "GcgMsgMoveCard" = betterproto.message_field(15, group="message")
    use_skill: "GcgMsgUseSkill" = betterproto.message_field(4, group="message")
    new_card: "GcgMsgNewCard" = betterproto.message_field(1848, group="message")
    update_controller: "GcgMsgUpdateController" = betterproto.message_field(
        429, group="message"
    )
    modify_add: "GcgMsgModifyAdd" = betterproto.message_field(1851, group="message")
    modify_remove: "GcgMsgModifyRemove" = betterproto.message_field(
        471, group="message"
    )
    use_skill_end: "GcgMsgUseSkillEnd" = betterproto.message_field(
        1411, group="message"
    )
    pve_gen_card_op: "GcgMsgPveGenCardOp" = betterproto.message_field(
        1741, group="message"
    )
    pve_do_op: "GcgMsgPveDoOp" = betterproto.message_field(614, group="message")
    duel_data_change: "GcgMsgDuelDataChange" = betterproto.message_field(
        1008, group="message"
    )
    client_perform: "GcgMsgClientPerform" = betterproto.message_field(
        1035, group="message"
    )
    game_over: "GcgMsgGameOver" = betterproto.message_field(714, group="message")
    op_timer: "GcgMsgOpTimer" = betterproto.message_field(1862, group="message")
    waiting_list_change: "GcgMsgWaitingListChange" = betterproto.message_field(
        1678, group="message"
    )
    card_update: "GcgMsgCardUpdate" = betterproto.message_field(1879, group="message")
    select_on_stage_by_effect: "GcgMsgSelectOnStageByEffect" = (
        betterproto.message_field(2042, group="message")
    )
    cost_revise: "GcgMsgCostRevise" = betterproto.message_field(1350, group="message")


@dataclass(eq=False, repr=False)
class GcgMessagePack(betterproto.Message):
    msg_seq: int = betterproto.uint32_field(10)
    msg_list: List["GcgMessage"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GcgOperationRedraw(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgOperationOnStageSelect(betterproto.Message):
    card_guid: int = betterproto.uint32_field(5)
    cost_dice_index_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgOperationReroll(betterproto.Message):
    dice_index_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgOperationAttack(betterproto.Message):
    cost_dice_index_list: List[int] = betterproto.uint32_field(8)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgOperationPass(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgOperationPlayCard(betterproto.Message):
    card_guid: int = betterproto.uint32_field(12)
    cost_dice_index_list: List[int] = betterproto.uint32_field(4)
    target_card_guid_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgOperationReboot(betterproto.Message):
    cost_card_guid_list: List[int] = betterproto.uint32_field(7)
    dice_index_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgOperationSurrender(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgOperation(betterproto.Message):
    op_redraw: "GcgOperationRedraw" = betterproto.message_field(10, group="op")
    op_select_on_stage: "GcgOperationOnStageSelect" = betterproto.message_field(
        4, group="op"
    )
    op_reroll: "GcgOperationReroll" = betterproto.message_field(9, group="op")
    op_attack: "GcgOperationAttack" = betterproto.message_field(11, group="op")
    op_pass: "GcgOperationPass" = betterproto.message_field(15, group="op")
    op_play_card: "GcgOperationPlayCard" = betterproto.message_field(2, group="op")
    op_reboot: "GcgOperationReboot" = betterproto.message_field(5, group="op")
    op_surrender: "GcgOperationSurrender" = betterproto.message_field(1, group="op")


@dataclass(eq=False, repr=False)
class GcgOperationData(betterproto.Message):
    controller_id: int = betterproto.uint32_field(2)
    op: "GcgOperation" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GcgOperationReplay(betterproto.Message):
    game_id: int = betterproto.uint32_field(1)
    seed: int = betterproto.uint32_field(11)
    operation_data_list: List["GcgOperationData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GcgToken(betterproto.Message):
    value: int = betterproto.uint32_field(11)
    key: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgCard(betterproto.Message):
    guid: int = betterproto.uint32_field(15)
    token_list: List["GcgToken"] = betterproto.message_field(2)
    is_show: bool = betterproto.bool_field(14)
    controller_id: int = betterproto.uint32_field(7)
    id: int = betterproto.uint32_field(6)
    tag_list: List[int] = betterproto.uint32_field(3)
    face_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgZone(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgWaitingCharacter(betterproto.Message):
    card_id: int = betterproto.uint32_field(2)
    cond_count: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgPlayerField(betterproto.Message):
    modify_zone_map: Dict[int, "GcgZone"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    cur_waiting_index: int = betterproto.uint32_field(383)
    summon_zone: "GcgZone" = betterproto.message_field(1)
    field_show_id: int = betterproto.uint32_field(8)
    card_back_show_id: int = betterproto.uint32_field(12)
    dice_count: int = betterproto.uint32_field(3)
    controller_id: int = betterproto.uint32_field(10)
    on_stage_zone: "GcgZone" = betterproto.message_field(14)
    is_passed: bool = betterproto.bool_field(7)
    character_zone: "GcgZone" = betterproto.message_field(5)
    on_stage_character_guid: int = betterproto.uint32_field(6)
    assist_zone: "GcgZone" = betterproto.message_field(15)
    deck_card_num: int = betterproto.uint32_field(13)
    dice_side_list: List["GcgDiceSideType"] = betterproto.enum_field(11)
    hand_zone: "GcgZone" = betterproto.message_field(9)
    intention_list: List["GcgpveIntention"] = betterproto.message_field(1192)
    waiting_list: List["GcgWaitingCharacter"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GcgPhase(betterproto.Message):
    phase_type: "GcgPhaseType" = betterproto.enum_field(5)
    allow_controller_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GcgControllerShowInfo(betterproto.Message):
    profile_picture: "ProfilePicture" = betterproto.message_field(11)
    nick_name: str = betterproto.string_field(14)
    controller_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgpveIntention(betterproto.Message):
    card_guid: int = betterproto.uint32_field(9)
    skill_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgDuelChallenge(betterproto.Message):
    total_progress: int = betterproto.uint32_field(7)
    challenge_id: int = betterproto.uint32_field(10)
    cur_progress: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgDuel(betterproto.Message):
    server_seq: int = betterproto.uint32_field(3)
    field_list: List["GcgPlayerField"] = betterproto.message_field(7)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(14)
    challenge_list: List["GcgDuelChallenge"] = betterproto.message_field(5)
    game_id: int = betterproto.uint32_field(11)
    controller_id: int = betterproto.uint32_field(13)
    round: int = betterproto.uint32_field(15)
    cur_controller_id: int = betterproto.uint32_field(12)
    intetion_list: List["GcgpveIntention"] = betterproto.message_field(1)
    cost_revise: "GcgCostReviseInfo" = betterproto.message_field(10)
    card_id_list: List[int] = betterproto.uint32_field(4)
    card_list: List["GcgCard"] = betterproto.message_field(9)
    show_info_list: List["GcgControllerShowInfo"] = betterproto.message_field(6)
    game_type: int = betterproto.uint32_field(2)
    phase: "GcgPhase" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GcgNewCardInfoNotify(betterproto.Message):
    card: "GcgCard" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GcgOperationReq(betterproto.Message):
    op_seq: int = betterproto.uint32_field(2)
    redirect_uid: int = betterproto.uint32_field(7)
    op: "GcgOperation" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GcgOperationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    op_seq: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgMessagePackNotify(betterproto.Message):
    server_seq: int = betterproto.uint32_field(5)
    message_pack: "GcgMessagePack" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GcgAskDuelReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgAskDuelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    duel: "GcgDuel" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GcgPlayerBriefData(betterproto.Message):
    card_face_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    nick_name: str = betterproto.string_field(9)
    profile_picture: "ProfilePicture" = betterproto.message_field(12)
    card_id_list: List[int] = betterproto.uint32_field(3)
    controller_id: int = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgGameBriefData(betterproto.Message):
    game_id: int = betterproto.uint32_field(14)
    game_uid: int = betterproto.uint32_field(9)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(13)
    verify_code: int = betterproto.uint32_field(5)
    player_brief_list: List["GcgPlayerBriefData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class GcgGameBriefDataNotify(betterproto.Message):
    gcg_brief_data: "GcgGameBriefData" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GcgInitFinishReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgInitFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GcgHeartBeatNotify(betterproto.Message):
    server_seq: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewHpInfo(betterproto.Message):
    change_type: "GcgSkillHpChangeType" = betterproto.enum_field(4)
    hp_change_value: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewReactionInfo(betterproto.Message):
    source_element: int = betterproto.uint32_field(13)
    target_element: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewElementReactionInfo(betterproto.Message):
    fresh_list: List[int] = betterproto.uint32_field(8)
    source_list: List[int] = betterproto.uint32_field(2)
    reaction_list: List["GcgSkillPreviewReactionInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewCardInfo(betterproto.Message):
    controller_id: int = betterproto.uint32_field(3)
    owner_card_guid: int = betterproto.uint32_field(11)
    zone_type: "GcgZoneType" = betterproto.enum_field(14)
    card_id: int = betterproto.uint32_field(13)
    card_guid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewOnstageChangeInfo(betterproto.Message):
    target_onstage_card_guid: int = betterproto.uint32_field(6)
    source_onstage_card_guid: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewTokenInfo(betterproto.Message):
    token_type: int = betterproto.uint32_field(3)
    after_value: int = betterproto.uint32_field(12)
    before_value: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewTokenChangeInfo(betterproto.Message):
    token_change_list: List["GcgSkillPreviewTokenInfo"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewInfo(betterproto.Message):
    rm_card_list: List["GcgSkillPreviewCardInfo"] = betterproto.message_field(12)
    hp_info_map: Dict[int, "GcgSkillPreviewHpInfo"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    reaction_info_map: Dict[
        int, "GcgSkillPreviewElementReactionInfo"
    ] = betterproto.map_field(5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    change_onstage_character_list: List[
        "GcgSkillPreviewOnstageChangeInfo"
    ] = betterproto.message_field(9)
    skill_id: int = betterproto.uint32_field(6)
    card_token_change_map: Dict[
        int, "GcgSkillPreviewTokenChangeInfo"
    ] = betterproto.map_field(3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    add_card_list: List["GcgSkillPreviewCardInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewNotify(betterproto.Message):
    skill_preview_list: List["GcgSkillPreviewInfo"] = betterproto.message_field(9)
    onstage_card_guid: int = betterproto.uint32_field(5)
    controller_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GcgSkillPreviewAskReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgSkillPreviewAskRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GcgChallengeUpdateNotify(betterproto.Message):
    server_seq: int = betterproto.uint32_field(12)
    challenge: "GcgDuelChallenge" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GcgdsDeckData(betterproto.Message):
    card_list: List[int] = betterproto.uint32_field(1)
    card_back_id: int = betterproto.uint32_field(15)
    character_card_list: List[int] = betterproto.uint32_field(10)
    name: str = betterproto.string_field(5)
    id: int = betterproto.uint32_field(3)
    create_time: int = betterproto.fixed32_field(13)
    is_valid: bool = betterproto.bool_field(4)
    field_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgdsCardData(betterproto.Message):
    card_id: int = betterproto.uint32_field(14)
    unlock_face_type_list: List[int] = betterproto.uint32_field(9)
    num: int = betterproto.uint32_field(12)
    proficiency: int = betterproto.uint32_field(8)
    face_type: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgdsDataNotify(betterproto.Message):
    deck_list: List["GcgdsDeckData"] = betterproto.message_field(4)
    unlock_card_back_id_list: List[int] = betterproto.uint32_field(5)
    unlock_field_id_list: List[int] = betterproto.uint32_field(6)
    cur_deck_id: int = betterproto.uint32_field(10)
    card_list: List["GcgdsCardData"] = betterproto.message_field(3)
    unlock_deck_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgdsCardBackUnlockNotify(betterproto.Message):
    card_back_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgdsFieldUnlockNotify(betterproto.Message):
    field_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgdsCardFaceUnlockNotify(betterproto.Message):
    card_id: int = betterproto.uint32_field(13)
    face_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgdsCardNumChangeNotify(betterproto.Message):
    card_id: int = betterproto.uint32_field(4)
    num: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardFaceReq(betterproto.Message):
    face_type: int = betterproto.uint32_field(6)
    card_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardFaceRsp(betterproto.Message):
    face_type: int = betterproto.uint32_field(8)
    card_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardBackReq(betterproto.Message):
    deck_id: int = betterproto.uint32_field(10)
    card_back_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgdsChangeCardBackRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    card_back_id: int = betterproto.uint32_field(6)
    deck_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgdsChangeFieldReq(betterproto.Message):
    field_id: int = betterproto.uint32_field(6)
    deck_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgdsChangeFieldRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    field_id: int = betterproto.uint32_field(3)
    deck_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgdsChangeDeckNameReq(betterproto.Message):
    deck_id: int = betterproto.uint32_field(13)
    name: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class GcgdsChangeDeckNameRsp(betterproto.Message):
    deck_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(14)
    name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class GcgdsDeckSaveReq(betterproto.Message):
    deck_id: int = betterproto.uint32_field(1)
    card_list: List[int] = betterproto.uint32_field(4)
    character_card_list: List[int] = betterproto.uint32_field(9)
    name: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class GcgdsDeckSaveRsp(betterproto.Message):
    create_time: int = betterproto.fixed32_field(14)
    deck_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(8)
    is_valid: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GcgdsChangeCurDeckReq(betterproto.Message):
    deck_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgdsChangeCurDeckRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    deck_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgdsCurDeckChangeNotify(betterproto.Message):
    deck_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgdsDeleteDeckReq(betterproto.Message):
    deck_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GcgdsDeleteDeckRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    deck_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgdsDeckUnlockNotify(betterproto.Message):
    deck_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GcgdsCardProficiencyNotify(betterproto.Message):
    proficiency: int = betterproto.uint32_field(2)
    card_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgtcTavernInfoNotify(betterproto.Message):
    is_last_duel_win: bool = betterproto.bool_field(14)
    level_id: int = betterproto.uint32_field(11)
    is_owner_in_duel: bool = betterproto.bool_field(5)
    point_id: int = betterproto.uint32_field(3)
    avatar_id: int = betterproto.uint32_field(12)
    character_id: int = betterproto.uint32_field(7)
    element_type: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GcgtcInviteReq(betterproto.Message):
    level_id: int = betterproto.uint32_field(3)
    character_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgtcInviteRsp(betterproto.Message):
    character_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GcgtcTavernChallengeData(betterproto.Message):
    unlock_level_id_list: List[int] = betterproto.uint32_field(1)
    character_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgtcTavernChallengeDataNotify(betterproto.Message):
    tavern_challenge_list: List["GcgtcTavernChallengeData"] = betterproto.message_field(
        13
    )


@dataclass(eq=False, repr=False)
class GcgtcTavernChallengeUpdateNotify(betterproto.Message):
    tavern_challenge: "GcgtcTavernChallengeData" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GcgGrowthLevelNotify(betterproto.Message):
    exp: int = betterproto.uint32_field(7)
    level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgGrowthLevelRewardNotify(betterproto.Message):
    level_reward_taken_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgGrowthLevelTakeRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GcgGrowthLevelTakeRewardRsp(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class GcgInviteGuestBattleReq(betterproto.Message):
    uid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgInviteGuestBattleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    uid: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GcgInviteBattleNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgApplyInviteBattleReq(betterproto.Message):
    is_agree: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class GcgApplyInviteBattleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GcgApplyInviteBattleNotify(betterproto.Message):
    is_agree: bool = betterproto.bool_field(14)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class GcgSettleNotify(betterproto.Message):
    game_id: int = betterproto.uint32_field(7)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(2)
    is_win: bool = betterproto.bool_field(13)
    reward_item_list: List["ItemParam"] = betterproto.message_field(9)
    finished_challenge_id_list: List[int] = betterproto.uint32_field(6)
    reason: "GcgEndReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class GcgResourceStateNotify(betterproto.Message):
    is_complete: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GcgClientSettleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GcgClientSettleRsp(betterproto.Message):
    close_time: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GcgSettleOptionReq(betterproto.Message):
    option: "GcgSettleOption" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class GcgSettleOptionRsp(betterproto.Message):
    option: "GcgSettleOption" = betterproto.enum_field(13)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class GcgBasicDataNotify(betterproto.Message):
    level: int = betterproto.uint32_field(9)
    exp: int = betterproto.uint32_field(4)
    level_reward_taken_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgTavernNpcInfo(betterproto.Message):
    id: int = betterproto.uint32_field(6)
    level_id: int = betterproto.uint32_field(10)
    scene_point_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgTavernNpcInfoNotify(betterproto.Message):
    week_npc_list: List["GcgTavernNpcInfo"] = betterproto.message_field(1)
    character_npc: "GcgTavernNpcInfo" = betterproto.message_field(5)
    const_npc_list: List["GcgTavernNpcInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GcgStartChallengeReq(betterproto.Message):
    level_type: "GcgLevelType" = betterproto.enum_field(5)
    config_id: int = betterproto.uint32_field(13)
    level_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GcgStartChallengeRsp(betterproto.Message):
    level_type: "GcgLevelType" = betterproto.enum_field(12)
    retcode: int = betterproto.int32_field(15)
    config_id: int = betterproto.uint32_field(6)
    level_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgWeekChallengeInfo(betterproto.Message):
    npc_id: int = betterproto.uint32_field(4)
    is_finished: bool = betterproto.bool_field(7)
    unlock_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GcgWeekChallengeInfoNotify(betterproto.Message):
    challenge_info_list: List["GcgWeekChallengeInfo"] = betterproto.message_field(15)
    next_refresh_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GcgLevelData(betterproto.Message):
    finished_challenge_id_list: List[int] = betterproto.uint32_field(10)
    level_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GcgBossChallengeData(betterproto.Message):
    id: int = betterproto.uint32_field(9)
    unlock_level_id_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GcgLevelChallengeNotify(betterproto.Message):
    unlock_boss_challenge_list: List[
        "GcgBossChallengeData"
    ] = betterproto.message_field(3)
    unlock_world_challenge_list: List[int] = betterproto.uint32_field(8)
    level_list: List["GcgLevelData"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GcgLevelChallengeFinishNotify(betterproto.Message):
    finished_challenge_id_list: List[int] = betterproto.uint32_field(10)
    level_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GcgWorldChallengeUnlockNotify(betterproto.Message):
    unlock_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GcgBossChallengeUpdateNotify(betterproto.Message):
    boss_challenge: "GcgBossChallengeData" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class GroupLinkBundle(betterproto.Message):
    center: "Vector" = betterproto.message_field(4)
    is_activated: bool = betterproto.bool_field(12)
    bundle_id: int = betterproto.uint32_field(3)
    is_show_mark: bool = betterproto.bool_field(14)
    scene_id: int = betterproto.uint32_field(5)
    radius: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GroupLinkAllNotify(betterproto.Message):
    bundle_list: List["GroupLinkBundle"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GroupLinkChangeNotify(betterproto.Message):
    bundle: "GroupLinkBundle" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GroupLinkDeleteNotify(betterproto.Message):
    bundle_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GroupLinkMarkUpdateNotify(betterproto.Message):
    bundle: "GroupLinkBundle" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class H5ActivityInfo(betterproto.Message):
    h5_activity_id: int = betterproto.uint32_field(3)
    url: str = betterproto.string_field(4)
    is_entrance_open: bool = betterproto.bool_field(7)
    h5_schedule_id: int = betterproto.uint32_field(8)
    end_time: int = betterproto.uint32_field(10)
    prefab_path: str = betterproto.string_field(11)
    content_close_time: int = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetAllH5ActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllH5ActivityInfoRsp(betterproto.Message):
    h5_activity_info_list: List["H5ActivityInfo"] = betterproto.message_field(15)
    retcode: int = betterproto.int32_field(5)
    client_red_dot_timestamp: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class H5ActivityIdsNotify(betterproto.Message):
    client_red_dot_timestamp: int = betterproto.uint32_field(1)
    h5_activity_map: Dict[int, int] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SetH5ActivityRedDotTimestampReq(betterproto.Message):
    client_red_dot_timestamp: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SetH5ActivityRedDotTimestampRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class HomeVerifyFurnitureData(betterproto.Message):
    type: List[int] = betterproto.uint32_field(7)
    id: int = betterproto.uint32_field(5)
    num: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HomeVerifyBlockData(betterproto.Message):
    block_id: int = betterproto.uint32_field(10)
    furniture_count: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HomeVerifySceneData(betterproto.Message):
    blocks: List["HomeVerifyBlockData"] = betterproto.message_field(6)
    module_id: int = betterproto.uint32_field(11)
    scene_id: int = betterproto.uint32_field(4)
    version: int = betterproto.uint32_field(14)
    is_room: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeVerifyData(betterproto.Message):
    aid: str = betterproto.string_field(7)
    timestamp: int = betterproto.fixed32_field(15)
    uid: int = betterproto.uint32_field(5)
    arrangement_data: "HomeSceneArrangementMuipData" = betterproto.message_field(9)
    region: str = betterproto.string_field(3)
    token: str = betterproto.string_field(1)
    home_info: "HomeVerifySceneData" = betterproto.message_field(6)
    lang: "LanguageType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class TryEnterHomeReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(3)
    is_transfer_to_safe_point: bool = betterproto.bool_field(10)
    target_point: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TryEnterHomeRsp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(4)
    param_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class JoinHomeWorldFailNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class HomeBlockNotify(betterproto.Message):
    end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeBasicInfo(betterproto.Message):
    level: int = betterproto.uint32_field(10)
    cur_room_scene_id: int = betterproto.uint32_field(13)
    cur_module_id: int = betterproto.uint32_field(9)
    is_in_edit_mode: bool = betterproto.bool_field(5)
    home_owner_uid: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint64_field(14)
    limited_shop_info: "HomeLimitedShopInfo" = betterproto.message_field(15)
    owner_nick_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class HomeGetBasicInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeBasicInfoNotify(betterproto.Message):
    basic_info: "HomeBasicInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeChangeEditModeReq(betterproto.Message):
    is_enter_edit_mode: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class HomeChangeEditModeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    is_enter_edit_mode: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class HomeChangeModuleReq(betterproto.Message):
    target_module_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HomeChangeModuleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    target_module_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeFurnitureData(betterproto.Message):
    version: int = betterproto.uint32_field(6)
    parent_furniture_index: int = betterproto.int32_field(3)
    furniture_id: int = betterproto.uint32_field(4)
    guid: int = betterproto.uint32_field(9)
    spawn_rot: "Vector" = betterproto.message_field(10)
    spawn_pos: "Vector" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomeFurnitureSuiteData(betterproto.Message):
    is_allow_summon: bool = betterproto.bool_field(10)
    suite_id: int = betterproto.uint32_field(6)
    spawn_pos: "Vector" = betterproto.message_field(8)
    guid: int = betterproto.uint32_field(13)
    included_furniture_index_list: List[int] = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class HomeNpcData(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(14)
    spawn_pos: "Vector" = betterproto.message_field(15)
    costume_id: int = betterproto.uint32_field(3)
    spawn_rot: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HomeAnimalData(betterproto.Message):
    spawn_rot: "Vector" = betterproto.message_field(10)
    furniture_id: int = betterproto.uint32_field(5)
    spawn_pos: "Vector" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class WeekendDjinnInfo(betterproto.Message):
    rot: "Vector" = betterproto.message_field(14)
    pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class HomeBlockDotPattern(betterproto.Message):
    width: int = betterproto.uint32_field(8)
    height: int = betterproto.uint32_field(11)
    data: bytes = betterproto.bytes_field(9)


@dataclass(eq=False, repr=False)
class HomeBlockSubFieldData(betterproto.Message):
    rot: "Vector" = betterproto.message_field(3)
    pos: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeBlockFieldData(betterproto.Message):
    rot: "Vector" = betterproto.message_field(15)
    pos: "Vector" = betterproto.message_field(4)
    guid: int = betterproto.uint32_field(9)
    furniture_id: int = betterproto.uint32_field(1)
    sub_field_list: List["HomeBlockSubFieldData"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeTransferData(betterproto.Message):
    guid: int = betterproto.uint32_field(15)
    spawn_pos: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeFurnitureGroupData(betterproto.Message):
    group_furniture_index: int = betterproto.uint32_field(8)
    virtual_furniure_list: List["HomeFurnitureData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeFurnitureCustomSuiteData(betterproto.Message):
    guid: int = betterproto.uint32_field(11)
    spawn_pos: "Vector" = betterproto.message_field(14)
    included_furniture_index_list: List[int] = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class HomeBlockArrangementInfo(betterproto.Message):
    is_unlocked: bool = betterproto.bool_field(1)
    comfort_value: int = betterproto.uint32_field(2)
    deploy_animal_list: List["HomeAnimalData"] = betterproto.message_field(4)
    furniture_group_list: List["HomeFurnitureGroupData"] = betterproto.message_field(5)
    weekend_djinn_info_list: List["WeekendDjinnInfo"] = betterproto.message_field(13)
    furniture_suite_list: List["HomeFurnitureSuiteData"] = betterproto.message_field(15)
    field_list: List["HomeBlockFieldData"] = betterproto.message_field(3)
    deploy_npc_list: List["HomeNpcData"] = betterproto.message_field(11)
    dot_pattern_list: List["HomeBlockDotPattern"] = betterproto.message_field(7)
    persistent_furniture_list: List["HomeFurnitureData"] = betterproto.message_field(9)
    deploy_furniure_list: List["HomeFurnitureData"] = betterproto.message_field(12)
    block_id: int = betterproto.uint32_field(6)
    furniture_custom_suite_list: List[
        "HomeFurnitureCustomSuiteData"
    ] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class HomeSceneArrangementInfo(betterproto.Message):
    born_rot: "Vector" = betterproto.message_field(4)
    born_pos: "Vector" = betterproto.message_field(1)
    stair_list: List["HomeFurnitureData"] = betterproto.message_field(11)
    door_list: List["HomeFurnitureData"] = betterproto.message_field(13)
    is_set_born_pos: bool = betterproto.bool_field(10)
    block_arrangement_info_list: List[
        "HomeBlockArrangementInfo"
    ] = betterproto.message_field(8)
    scene_id: int = betterproto.uint32_field(2)
    bgm_id: int = betterproto.uint32_field(12)
    djinn_pos: "Vector" = betterproto.message_field(9)
    main_house: "HomeFurnitureData" = betterproto.message_field(14)
    comfort_value: int = betterproto.uint32_field(7)
    tmp_version: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HomeGetArrangementInfoReq(betterproto.Message):
    scene_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeGetArrangementInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    scene_arrangement_info_list: List[
        "HomeSceneArrangementInfo"
    ] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class HomeUpdateArrangementInfoReq(betterproto.Message):
    scene_arrangement_info: "HomeSceneArrangementInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class HomeUpdateArrangementInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class PlayerHomeCompInfo(betterproto.Message):
    unlocked_module_id_list: List[int] = betterproto.uint32_field(4)
    seen_module_id_list: List[int] = betterproto.uint32_field(2)
    levelup_reward_got_level_list: List[int] = betterproto.uint32_field(7)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class GetPlayerHomeCompInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerHomeCompInfoNotify(betterproto.Message):
    comp_info: "PlayerHomeCompInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SetFriendEnterHomeOptionReq(betterproto.Message):
    option: "FriendEnterHomeOption" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class SetFriendEnterHomeOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeNotify(betterproto.Message):
    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(9)
    src_app_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeResultReq(betterproto.Message):
    apply_uid: int = betterproto.uint32_field(14)
    is_agreed: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeResultRsp(betterproto.Message):
    is_agreed: bool = betterproto.bool_field(2)
    apply_uid: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(3)
    param: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterHomeResultNotify(betterproto.Message):
    target_nickname: str = betterproto.string_field(7)
    reason: "PlayerApplyEnterHomeResultNotifyReason" = betterproto.enum_field(5)
    target_uid: int = betterproto.uint32_field(12)
    is_agreed: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class HomeSceneJumpReq(betterproto.Message):
    is_enter_room_scene: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class HomeSceneJumpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    is_enter_room_scene: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class HomeChooseModuleReq(betterproto.Message):
    module_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HomeChooseModuleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(2)
    module_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HomeModuleUnlockNotify(betterproto.Message):
    module_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HomeGetOnlineStatusReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeGetOnlineStatusRsp(betterproto.Message):
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class HomeKickPlayerReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(12)
    is_kick_all: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class HomeKickPlayerRsp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(8)
    is_kick_all: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class HomeModuleSeenReq(betterproto.Message):
    seen_module_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HomeModuleSeenRsp(betterproto.Message):
    seen_module_id_list: List[int] = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class UnlockedFurnitureFormulaDataNotify(betterproto.Message):
    furniture_id_list: List[int] = betterproto.uint32_field(15)
    is_all: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class UnlockedFurnitureSuiteDataNotify(betterproto.Message):
    is_all: bool = betterproto.bool_field(10)
    furniture_suite_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetHomeLevelUpRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetHomeLevelUpRewardRsp(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class GetFurnitureCurModuleArrangeCountReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FurnitureCurModuleArrangeCountNotify(betterproto.Message):
    furniture_arrange_count_list: List["Uint32Pair"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HomeModuleComfortInfo(betterproto.Message):
    module_id: int = betterproto.uint32_field(13)
    room_scene_comfort_value: int = betterproto.uint32_field(9)
    world_scene_block_comfort_value_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeComfortInfoNotify(betterproto.Message):
    module_info_list: List["HomeModuleComfortInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class PlayerQuitFromHomeNotify(betterproto.Message):
    reason: "PlayerQuitFromHomeNotifyQuitReason" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class OtherPlayerEnterHomeNotify(betterproto.Message):
    nickname: str = betterproto.string_field(7)
    reason: "OtherPlayerEnterHomeNotifyReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class HomePriorCheckNotify(betterproto.Message):
    end_time: int = betterproto.fixed32_field(7)


@dataclass(eq=False, repr=False)
class HomeMarkPointSceneData(betterproto.Message):
    furniture_list: List["HomeMarkPointFurnitureData"] = betterproto.message_field(6)
    teapot_spirit_pos: "Vector" = betterproto.message_field(4)
    scene_id: int = betterproto.uint32_field(2)
    module_id: int = betterproto.uint32_field(5)
    safe_point_pos: "Vector" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeMarkPointNotify(betterproto.Message):
    mark_point_data_list: List["HomeMarkPointSceneData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class HomeAllUnlockedBgmIdListNotify(betterproto.Message):
    all_unlocked_bgm_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class HomeNewUnlockedBgmIdListNotify(betterproto.Message):
    new_unlocked_bgm_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class HomeChangeBgmReq(betterproto.Message):
    bgm_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HomeChangeBgmRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class HomeChangeBgmNotify(betterproto.Message):
    bgm_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomePreChangeEditModeNotify(betterproto.Message):
    is_enter_edit_mode: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class HomeEnterEditModeFinishReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeEnterEditModeFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class FurnitureMakeData(betterproto.Message):
    index: int = betterproto.uint32_field(15)
    dur_time: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.fixed32_field(11)
    accelerate_time: int = betterproto.fixed32_field(6)
    avatar_id: int = betterproto.uint32_field(2)
    make_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FurnitureMakeSlot(betterproto.Message):
    furniture_make_data_list: List["FurnitureMakeData"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class FurnitureMakeBeHelpedData(betterproto.Message):
    time: int = betterproto.fixed32_field(12)
    icon: int = betterproto.uint32_field(11)
    uid: int = betterproto.uint32_field(7)
    player_name: str = betterproto.string_field(10)
    profile_picture: "ProfilePicture" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class FurnitureMakeHelpData(betterproto.Message):
    times: int = betterproto.uint32_field(2)
    uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FurnitureMakeMakeInfo(betterproto.Message):
    furniture_id: int = betterproto.uint32_field(13)
    make_count: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class FurnitureMakeReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FurnitureMakeRsp(betterproto.Message):
    helped_data_list: List["FurnitureMakeBeHelpedData"] = betterproto.message_field(13)
    make_info_list: List["FurnitureMakeMakeInfo"] = betterproto.message_field(4)
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(3)
    help_data_list: List["FurnitureMakeHelpData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TakeFurnitureMakeReq(betterproto.Message):
    index: int = betterproto.uint32_field(8)
    is_fast_finish: bool = betterproto.bool_field(12)
    make_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class TakeFurnitureMakeRsp(betterproto.Message):
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(8)
    return_item_list: List["ItemParam"] = betterproto.message_field(2)
    make_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(9)
    output_item_list: List["ItemParam"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class FurnitureMakeFinishNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FurnitureMakeStartReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(9)
    make_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FurnitureMakeStartRsp(betterproto.Message):
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class FurnitureMakeCancelReq(betterproto.Message):
    index: int = betterproto.uint32_field(4)
    make_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class FurnitureMakeCancelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    make_id: int = betterproto.uint32_field(2)
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class FurnitureMakeBeHelpedNotify(betterproto.Message):
    furniture_make_slot: "FurnitureMakeSlot" = betterproto.message_field(7)
    furniture_make_helped_data: "FurnitureMakeBeHelpedData" = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class FurnitureMakeHelpReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FurnitureMakeHelpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    help_data_list: List["FurnitureMakeHelpData"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class FunitureMakeMakeInfoChangeNotify(betterproto.Message):
    make_info: "FurnitureMakeMakeInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfo(betterproto.Message):
    next_close_time: int = betterproto.fixed32_field(9)
    next_guest_open_time: int = betterproto.fixed32_field(11)
    djinn_rot: "Vector" = betterproto.message_field(7)
    uid: int = betterproto.uint32_field(4)
    next_open_time: int = betterproto.fixed32_field(6)
    djinn_pos: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoRsp(betterproto.Message):
    shop_info: "HomeLimitedShopInfo" = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoNotify(betterproto.Message):
    shop_info: "HomeLimitedShopInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeLimitedShopGoods(betterproto.Message):
    buy_limit: int = betterproto.uint32_field(8)
    cost_item_list: List["ItemParam"] = betterproto.message_field(15)
    bought_num: int = betterproto.uint32_field(1)
    goods_item: "ItemParam" = betterproto.message_field(6)
    goods_id: int = betterproto.uint32_field(13)
    disable_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeLimitedShop(betterproto.Message):
    goods_list: List["HomeLimitedShopGoods"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomeLimitedShopGoodsListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeLimitedShopGoodsListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    shop: "HomeLimitedShop" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class HomeLimitedShopBuyGoodsReq(betterproto.Message):
    goods: "HomeLimitedShopGoods" = betterproto.message_field(3)
    buy_count: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomeLimitedShopBuyGoodsRsp(betterproto.Message):
    goods_list: List["HomeLimitedShopGoods"] = betterproto.message_field(13)
    retcode: int = betterproto.int32_field(14)
    goods: "HomeLimitedShopGoods" = betterproto.message_field(5)
    buy_count: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HomeLimitedShopInfoChangeNotify(betterproto.Message):
    goods_list: List["HomeLimitedShopGoods"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeResource(betterproto.Message):
    next_refresh_time: int = betterproto.fixed32_field(15)
    store_limit: int = betterproto.uint32_field(3)
    store_value: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeResourceNotify(betterproto.Message):
    home_coin: "HomeResource" = betterproto.message_field(9)
    fetter_exp: "HomeResource" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomeResourceTakeHomeCoinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeResourceTakeHomeCoinRsp(betterproto.Message):
    home_coin: "HomeResource" = betterproto.message_field(7)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomeResourceTakeFetterExpReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeResourceTakeFetterExpRsp(betterproto.Message):
    fetter_exp: "HomeResource" = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class HomeAvatarTalkFinishInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(9)
    finish_talk_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeAvatarTalkFinishInfoNotify(betterproto.Message):
    avatar_talk_info_list: List["HomeAvatarTalkFinishInfo"] = betterproto.message_field(
        9
    )


@dataclass(eq=False, repr=False)
class HomeAvatarTalkReq(betterproto.Message):
    talk_id: int = betterproto.uint32_field(12)
    avatar_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class HomeAvatarTalkRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    avatar_talk_info: "HomeAvatarTalkFinishInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint32_field(12)
    event_id: int = betterproto.uint32_field(2)
    suite_id: int = betterproto.uint32_field(14)
    random_position: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventNotify(betterproto.Message):
    is_event_trigger: bool = betterproto.bool_field(4)
    reward_event: "HomeAvatarRewardEventInfo" = betterproto.message_field(2)
    pending_list: List["HomeAvatarRewardEventInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventGetReq(betterproto.Message):
    event_id: int = betterproto.uint32_field(9)
    avatar_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventGetRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(14)
    event_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonEventInfo(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(3)
    guid: int = betterproto.uint32_field(8)
    event_id: int = betterproto.uint32_field(9)
    suit_id: int = betterproto.uint32_field(12)
    event_over_time: int = betterproto.uint32_field(2)
    random_position: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonAllEventNotify(betterproto.Message):
    summon_event_list: List["HomeAvatarSummonEventInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonEventReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(7)
    suit_id: int = betterproto.uint32_field(9)
    guid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonEventRsp(betterproto.Message):
    event_id: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class HomeAvatarCostumeChangeNotify(betterproto.Message):
    costume_id: int = betterproto.uint32_field(4)
    avatar_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonFinishReq(betterproto.Message):
    event_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeAvatarSummonFinishRsp(betterproto.Message):
    event_id: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class HomeAvtarAllFinishRewardNotify(betterproto.Message):
    event_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomeAvatarAllFinishRewardNotify(betterproto.Message):
    event_id_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeSceneInitFinishReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeSceneInitFinishRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class HomePlantSeedReq(betterproto.Message):
    index: int = betterproto.uint32_field(4)
    field_guid: int = betterproto.uint32_field(14)
    seed_id_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class HomePlantSeedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class HomePlantWeedReq(betterproto.Message):
    field_guid: int = betterproto.uint32_field(9)
    index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomePlantWeedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomePlantSubFieldData(betterproto.Message):
    entity_id_list: List[int] = betterproto.uint32_field(15)
    field_status: "HomePlantFieldStatus" = betterproto.enum_field(14)
    home_gather_id: int = betterproto.uint32_field(9)
    seed_id: int = betterproto.uint32_field(8)
    end_time: int = betterproto.fixed32_field(4)


@dataclass(eq=False, repr=False)
class HomePlantFieldData(betterproto.Message):
    sub_field_list: List["HomePlantSubFieldData"] = betterproto.message_field(13)
    furniture_id: int = betterproto.uint32_field(9)
    scene_id: int = betterproto.uint32_field(1)
    field_guid: int = betterproto.uint32_field(10)
    spawn_pos: "Vector" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class HomePlantInfoNotify(betterproto.Message):
    field_list: List["HomePlantFieldData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HomePlantFieldNotify(betterproto.Message):
    field: "HomePlantFieldData" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HomePlantInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomePlantInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    field_list: List["HomePlantFieldData"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeTransferReq(betterproto.Message):
    guid: int = betterproto.uint32_field(1)
    is_transfer_to_safe_point: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class HomeTransferRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomeFishFarmingInfo(betterproto.Message):
    fish_id_list: List[int] = betterproto.uint32_field(11)
    fishpond_guid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HomeGetFishFarmingInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeGetFishFarmingInfoRsp(betterproto.Message):
    fish_farming_info_list: List["HomeFishFarmingInfo"] = betterproto.message_field(7)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class HomeFishFarmingInfoNotify(betterproto.Message):
    fish_farming_info_list: List["HomeFishFarmingInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeUpdateFishFarmingInfoReq(betterproto.Message):
    fish_farming_info: "HomeFishFarmingInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeUpdateFishFarmingInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class HomeScenePointFishFarmingInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(13)
    fish_id_list: List[int] = betterproto.uint32_field(1)
    local_entity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeUpdateScenePointFishFarmingInfoReq(betterproto.Message):
    fish_farming_info: "HomeScenePointFishFarmingInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeUpdateScenePointFishFarmingInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class HomeScenePointFishFarmingInfoNotify(betterproto.Message):
    fish_farming_info_list: List[
        "HomeScenePointFishFarmingInfo"
    ] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeCustomFurnitureInfo(betterproto.Message):
    sub_furniture_list: List["CustomCommonNodeInfo"] = betterproto.message_field(12)
    guid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeCustomFurnitureInfoNotify(betterproto.Message):
    delete_custom_furniture_list: List[int] = betterproto.uint32_field(4)
    used_sub_furniture_count_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    custom_furniture_info_list: List[
        "HomeCustomFurnitureInfo"
    ] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeEditCustomFurnitureReq(betterproto.Message):
    custom_furniture_info: "HomeCustomFurnitureInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeEditCustomFurnitureRsp(betterproto.Message):
    custom_furniture_info: "HomeCustomFurnitureInfo" = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class HomePictureFrameInfo(betterproto.Message):
    guid: int = betterproto.uint32_field(11)
    picture_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomePictureFrameInfoNotify(betterproto.Message):
    picture_frame_info_list: List["HomePictureFrameInfo"] = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class HomeUpdatePictureFrameInfoReq(betterproto.Message):
    picture_frame_info: "HomePictureFrameInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeUpdatePictureFrameInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    picture_frame_info: "HomePictureFrameInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class HomeRacingGallerySettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(11)
    settle_info: "RacingGallerySettleInfo" = betterproto.message_field(12)
    rank: int = betterproto.uint32_field(7)
    is_new_record: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class HomeGroupPlayerInfo(betterproto.Message):
    online_id: str = betterproto.string_field(14)
    psn_id: str = betterproto.string_field(6)
    nickname: str = betterproto.string_field(15)
    player_level: int = betterproto.uint32_field(4)
    uid: int = betterproto.uint32_field(2)
    profile_picture: "ProfilePicture" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeRacingGalleryRecord(betterproto.Message):
    use_time: int = betterproto.uint32_field(1)
    timestamp: int = betterproto.uint32_field(8)
    player_info: "HomeGroupPlayerInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class HomeRacingRecord(betterproto.Message):
    record_list: List["HomeRacingGalleryRecord"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class HomeBalloonGalleryRecord(betterproto.Message):
    hit_count: int = betterproto.uint32_field(12)
    score: int = betterproto.uint32_field(11)
    player_info: "HomeGroupPlayerInfo" = betterproto.message_field(5)
    timestamp: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeBalloonRecord(betterproto.Message):
    record_list: List["HomeBalloonGalleryRecord"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class HomeStakePlayRecord(betterproto.Message):
    engaged_player_info_list: List["HomeGroupPlayerInfo"] = betterproto.message_field(
        14
    )
    timestamp: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HomeStakeRecord(betterproto.Message):
    record_list: List["HomeStakePlayRecord"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class HomeSeekFurniturePlayerScore(betterproto.Message):
    score: int = betterproto.uint32_field(12)
    player_info: "HomeGroupPlayerInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureOneRecord(betterproto.Message):
    engaged_player_score_list: List[
        "HomeSeekFurniturePlayerScore"
    ] = betterproto.message_field(8)
    timestamp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureAllRecord(betterproto.Message):
    record_list: List["HomeSeekFurnitureOneRecord"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeGroupRecord(betterproto.Message):
    group_id: int = betterproto.uint32_field(5)
    racing_gallery_info: "HomeRacingRecord" = betterproto.message_field(
        467, group="detail"
    )
    balloon_gallery_info: "HomeBalloonRecord" = betterproto.message_field(
        1410, group="detail"
    )
    stake_play_info: "HomeStakeRecord" = betterproto.message_field(347, group="detail")
    seek_furniture_gallery_info: "HomeSeekFurnitureAllRecord" = (
        betterproto.message_field(1822, group="detail")
    )


@dataclass(eq=False, repr=False)
class HomeGetGroupRecordReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HomeGetGroupRecordRsp(betterproto.Message):
    group_record: "HomeGroupRecord" = betterproto.message_field(7)
    retcode: int = betterproto.int32_field(11)
    record_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeClearGroupRecordReq(betterproto.Message):
    group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeClearGroupRecordRsp(betterproto.Message):
    group_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class HomeBalloonGallerySettleNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(1)
    settle_info: "BalloonGallerySettleInfo" = betterproto.message_field(5)
    rank: int = betterproto.uint32_field(6)
    is_new_record: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class HomeBalloonGalleryScoreNotify(betterproto.Message):
    trigger_entity_id: int = betterproto.uint32_field(10)
    cur_score: int = betterproto.uint32_field(9)
    add_score: int = betterproto.uint32_field(7)
    gallery_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureGalleryScoreNotify(betterproto.Message):
    gallery_id: int = betterproto.uint32_field(15)
    record: "HomeSeekFurnitureOneRecord" = betterproto.message_field(5)
    reason: "GalleryStopReason" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class GetHomeExchangeWoodInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetHomeExchangeWoodInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    wood_info_list: List[
        "GetHomeExchangeWoodInfoRspHomeExchangeWoodInfo"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetHomeExchangeWoodInfoRspHomeExchangeWoodInfo(betterproto.Message):
    exchange_limit: int = betterproto.uint32_field(7)
    exchanged_count: int = betterproto.uint32_field(12)
    next_refresh_time: int = betterproto.fixed32_field(14)
    wood_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeExchangeWoodReq(betterproto.Message):
    material_count_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    wood_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeExchangeWoodRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    wood_id: int = betterproto.uint32_field(1)
    wood_count: int = betterproto.uint32_field(3)
    exchanged_count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeBlueprintSlotInfo(betterproto.Message):
    module_id: int = betterproto.uint32_field(12)
    block_id: int = betterproto.uint32_field(14)
    scene_id: int = betterproto.uint32_field(4)
    slot_id: int = betterproto.uint32_field(5)
    share_code: str = betterproto.string_field(11)
    is_allow_copy: bool = betterproto.bool_field(3)
    create_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeGetBlueprintSlotInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class HomeGetBlueprintSlotInfoRsp(betterproto.Message):
    delete_slot_id_list: List[int] = betterproto.uint32_field(6)
    slot_info_list: List["HomeBlueprintSlotInfo"] = betterproto.message_field(3)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintSlotOptionReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    is_allow_copy: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintSlotOptionRsp(betterproto.Message):
    slot_id: int = betterproto.uint32_field(13)
    is_allow_copy: bool = betterproto.bool_field(7)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintFriendOptionReq(betterproto.Message):
    is_allow_friend_copy: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class HomeSetBlueprintFriendOptionRsp(betterproto.Message):
    is_allow_friend_copy: bool = betterproto.bool_field(2)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class HomeBlueprintInfoNotify(betterproto.Message):
    is_allow_friend_copy: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class HomePreviewBlueprintReq(betterproto.Message):
    share_code: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class HomePreviewBlueprintRsp(betterproto.Message):
    scene_arrangement_info: "HomeSceneArrangementInfo" = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(11)
    share_code: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class HomeCreateBlueprintReq(betterproto.Message):
    scene_arrangement_info: "HomeSceneArrangementInfo" = betterproto.message_field(2)
    slot_id: int = betterproto.uint32_field(13)
    server_share_code: str = betterproto.string_field(6)
    gen_share_code_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeCreateBlueprintRsp(betterproto.Message):
    slot_info: "HomeBlueprintSlotInfo" = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class HomeDeleteBlueprintReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeDeleteBlueprintRsp(betterproto.Message):
    slot_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class HomeBlueprintSearchInfo(betterproto.Message):
    scene_id: int = betterproto.uint32_field(5)
    module_id: int = betterproto.uint32_field(9)
    share_code: str = betterproto.string_field(8)
    block_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class HomeSearchBlueprintReq(betterproto.Message):
    share_code: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class HomeSearchBlueprintRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    search_info: "HomeBlueprintSearchInfo" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomeSaveArrangementNoChangeReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeSaveArrangementNoChangeRsp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class HuntingPair(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(9)
    monster_config_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeHuntingOfferReq(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(14)
    city_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeHuntingOfferRsp(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(13)
    city_id: int = betterproto.uint32_field(14)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class HuntingOfferData(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(4)
    city_id: int = betterproto.uint32_field(8)
    state: "HuntingOfferState" = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class GetCityHuntingOfferReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GetCityHuntingOfferRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    hunting_offer_list: List["HuntingOfferData"] = betterproto.message_field(13)
    city_id: int = betterproto.uint32_field(2)
    ongoing_hunting_pair: "HuntingPair" = betterproto.message_field(8)
    cur_week_finished_count: int = betterproto.uint32_field(1)
    next_refresh_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetHuntingOfferRewardReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(6)
    hunting_pair: "HuntingPair" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetHuntingOfferRewardRsp(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(14)
    city_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class HuntingStartNotify(betterproto.Message):
    clue_position: "Vector" = betterproto.message_field(4)
    fail_time: int = betterproto.uint32_field(15)
    hunting_pair: "HuntingPair" = betterproto.message_field(3)
    is_final: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class HuntingRevealClueNotify(betterproto.Message):
    finish_clue_count: int = betterproto.uint32_field(5)
    clue_position: "Vector" = betterproto.message_field(4)
    hunting_pair: "HuntingPair" = betterproto.message_field(12)
    finished_group_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HuntingRevealFinalNotify(betterproto.Message):
    finished_group_id: int = betterproto.uint32_field(5)
    hunting_pair: "HuntingPair" = betterproto.message_field(11)
    final_position: "Vector" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HuntingSuccessNotify(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HuntingFailNotify(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class HuntingOngoingNotify(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(15)
    is_started: bool = betterproto.bool_field(8)
    next_position: "Vector" = betterproto.message_field(3)
    finish_clue_count: int = betterproto.uint32_field(10)
    is_final: bool = betterproto.bool_field(14)
    fail_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HuntingGiveUpReq(betterproto.Message):
    hunting_pair: "HuntingPair" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HuntingGiveUpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    hunting_pair: "HuntingPair" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class Investigation(betterproto.Message):
    total_progress: int = betterproto.uint32_field(5)
    state: "InvestigationState" = betterproto.enum_field(2)
    progress: int = betterproto.uint32_field(13)
    id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class InvestigationTarget(betterproto.Message):
    quest_id: int = betterproto.uint32_field(15)
    state: "InvestigationTargetState" = betterproto.enum_field(2)
    progress: int = betterproto.uint32_field(8)
    total_progress: int = betterproto.uint32_field(7)
    investigation_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerInvestigationAllInfoNotify(betterproto.Message):
    investigation_list: List["Investigation"] = betterproto.message_field(15)
    investigation_target_list: List["InvestigationTarget"] = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class TakeInvestigationRewardReq(betterproto.Message):
    id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class TakeInvestigationRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TakeInvestigationTargetRewardReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TakeInvestigationTargetRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetInvestigationMonsterReq(betterproto.Message):
    city_id_list: List[int] = betterproto.uint32_field(3)
    is_for_mark: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class InvestigationMonster(betterproto.Message):
    is_alive: bool = betterproto.bool_field(9)
    refresh_interval: int = betterproto.uint32_field(3)
    id: int = betterproto.uint32_field(13)
    level: int = betterproto.uint32_field(5)
    boss_chest_num: int = betterproto.uint32_field(1)
    weekly_boss_resin_discount_info: "WeeklyBossResinDiscountInfo" = (
        betterproto.message_field(12)
    )
    monster_id: int = betterproto.uint32_field(301)
    pos: "Vector" = betterproto.message_field(14)
    resin: int = betterproto.uint32_field(8)
    max_boss_chest_num: int = betterproto.uint32_field(4)
    next_refresh_time: int = betterproto.uint32_field(11)
    group_id: int = betterproto.uint32_field(285)
    scene_id: int = betterproto.uint32_field(10)
    is_area_locked: bool = betterproto.bool_field(15)
    lock_state: "InvestigationMonsterLockState" = betterproto.enum_field(2)
    next_boss_chest_refresh_time: int = betterproto.uint32_field(7)
    city_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetInvestigationMonsterRsp(betterproto.Message):
    monster_list: List["InvestigationMonster"] = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(1)
    is_for_mark: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PlayerInvestigationNotify(betterproto.Message):
    investigation_list: List["Investigation"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerInvestigationTargetNotify(betterproto.Message):
    investigation_target_list: List["InvestigationTarget"] = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class MarkTargetInvestigationMonsterNotify(betterproto.Message):
    scene_id: int = betterproto.uint32_field(11)
    monster_id: int = betterproto.uint32_field(4)
    group_id: int = betterproto.uint32_field(5)
    investigation_monster_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class InvestigationMonsterUpdateNotify(betterproto.Message):
    investigation_monster: "InvestigationMonster" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class InvestigationQuestDailyNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class InvestigationReadQuestDailyNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerStoreNotify(betterproto.Message):
    item_list: List["Item"] = betterproto.message_field(15)
    weight_limit: int = betterproto.uint32_field(8)
    store_type: "StoreType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class StoreWeightLimitNotify(betterproto.Message):
    weapon_count_limit: int = betterproto.uint32_field(2)
    store_type: "StoreType" = betterproto.enum_field(7)
    material_count_limit: int = betterproto.uint32_field(4)
    reliquary_count_limit: int = betterproto.uint32_field(6)
    furniture_count_limit: int = betterproto.uint32_field(9)
    weight_limit: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class StoreItemChangeNotify(betterproto.Message):
    store_type: "StoreType" = betterproto.enum_field(12)
    item_list: List["Item"] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class StoreItemDelNotify(betterproto.Message):
    guid_list: List[int] = betterproto.uint64_field(12)
    store_type: "StoreType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class ItemHint(betterproto.Message):
    item_id: int = betterproto.uint32_field(8)
    is_new: bool = betterproto.bool_field(2)
    count: int = betterproto.uint32_field(15)
    guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class ItemAddHintNotify(betterproto.Message):
    is_position_valid: bool = betterproto.bool_field(14)
    quest_id: int = betterproto.uint32_field(3)
    reason: int = betterproto.uint32_field(6)
    is_general_reward_hiden: bool = betterproto.bool_field(15)
    item_list: List["ItemHint"] = betterproto.message_field(10)
    is_transfered_from_avatar_card: bool = betterproto.bool_field(12)
    position: "Vector" = betterproto.message_field(9)
    overflow_transformed_item_list: List["ItemHint"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class UseItemReq(betterproto.Message):
    count: int = betterproto.uint32_field(13)
    target_guid: int = betterproto.uint64_field(14)
    guid: int = betterproto.uint64_field(10)
    is_enter_mp_dungeon_team: bool = betterproto.bool_field(15)
    option_idx: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class UseItemRsp(betterproto.Message):
    guid: int = betterproto.uint64_field(5)
    target_guid: int = betterproto.uint64_field(1)
    item_id: int = betterproto.uint32_field(4)
    option_idx: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class DropItemReq(betterproto.Message):
    pos: "Vector" = betterproto.message_field(11)
    store_type: "StoreType" = betterproto.enum_field(1)
    count: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class DropItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    guid: int = betterproto.uint64_field(1)
    store_type: "StoreType" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class WearEquipReq(betterproto.Message):
    equip_guid: int = betterproto.uint64_field(7)
    avatar_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class WearEquipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    equip_guid: int = betterproto.uint64_field(1)
    avatar_guid: int = betterproto.uint64_field(7)


@dataclass(eq=False, repr=False)
class TakeoffEquipReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(8)
    slot: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeoffEquipRsp(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(9)
    retcode: int = betterproto.int32_field(6)
    slot: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AvatarEquipChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(10)
    equip_guid: int = betterproto.uint64_field(13)
    reliquary: "SceneReliquaryInfo" = betterproto.message_field(1)
    weapon: "SceneWeaponInfo" = betterproto.message_field(15)
    item_id: int = betterproto.uint32_field(14)
    equip_type: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WeaponUpgradeReq(betterproto.Message):
    food_weapon_guid_list: List[int] = betterproto.uint64_field(1)
    item_param_list: List["ItemParam"] = betterproto.message_field(15)
    target_weapon_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class WeaponUpgradeRsp(betterproto.Message):
    cur_level: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(11)
    old_level: int = betterproto.uint32_field(8)
    item_param_list: List["ItemParam"] = betterproto.message_field(2)
    target_weapon_guid: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class WeaponPromoteReq(betterproto.Message):
    target_weapon_guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class WeaponPromoteRsp(betterproto.Message):
    target_weapon_guid: int = betterproto.uint64_field(3)
    old_promote_level: int = betterproto.uint32_field(7)
    cur_promote_level: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeReq(betterproto.Message):
    item_param_list: List["ItemParam"] = betterproto.message_field(11)
    target_reliquary_guid: int = betterproto.uint64_field(6)
    food_reliquary_guid_list: List[int] = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class ReliquaryUpgradeRsp(betterproto.Message):
    old_level: int = betterproto.uint32_field(4)
    cur_level: int = betterproto.uint32_field(13)
    target_reliquary_guid: int = betterproto.uint64_field(9)
    cur_append_prop_list: List[int] = betterproto.uint32_field(2)
    power_up_rate: int = betterproto.uint32_field(6)
    old_append_prop_list: List[int] = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class ReliquaryPromoteReq(betterproto.Message):
    item_guid: int = betterproto.uint64_field(10)
    target_guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class ReliquaryPromoteRsp(betterproto.Message):
    old_promote_level: int = betterproto.uint32_field(10)
    target_reliquary_guid: int = betterproto.uint64_field(6)
    cur_append_prop_list: List[int] = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(12)
    cur_promote_level: int = betterproto.uint32_field(2)
    old_append_prop_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class AvatarCardChangeReq(betterproto.Message):
    item_id: int = betterproto.uint32_field(6)
    avatar_guid: int = betterproto.uint64_field(14)
    count: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AvatarCardChangeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class GrantRewardNotify(betterproto.Message):
    reward: "Reward" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class WeaponAwakenReq(betterproto.Message):
    item_guid: int = betterproto.uint64_field(10)
    affix_level_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    target_weapon_guid: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class WeaponAwakenRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    avatar_guid: int = betterproto.uint64_field(10)
    old_affix_level_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    target_weapon_awaken_level: int = betterproto.uint32_field(2)
    target_weapon_guid: int = betterproto.uint64_field(15)
    cur_affix_level_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ItemCdGroupTimeNotify(betterproto.Message):
    item_cd_map: Dict[int, int] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_UINT64
    )


@dataclass(eq=False, repr=False)
class DropHintNotify(betterproto.Message):
    position: "Vector" = betterproto.message_field(7)
    item_id_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class CombineReq(betterproto.Message):
    combine_count: int = betterproto.uint32_field(12)
    combine_id: int = betterproto.uint32_field(9)
    avatar_guid: int = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class CombineRsp(betterproto.Message):
    cost_item_list: List["ItemParam"] = betterproto.message_field(3)
    retcode: int = betterproto.int32_field(7)
    total_extra_item_list: List["ItemParam"] = betterproto.message_field(6)
    combine_id: int = betterproto.uint32_field(11)
    total_random_item_list: List["ItemParam"] = betterproto.message_field(9)
    result_item_list: List["ItemParam"] = betterproto.message_field(2)
    combine_count: int = betterproto.uint32_field(13)
    total_return_item_list: List["ItemParam"] = betterproto.message_field(12)
    avatar_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class ForgeQueueData(betterproto.Message):
    finish_count: int = betterproto.uint32_field(13)
    total_finish_timestamp: int = betterproto.uint32_field(14)
    avatar_id: int = betterproto.uint32_field(7)
    queue_id: int = betterproto.uint32_field(1)
    unfinish_count: int = betterproto.uint32_field(10)
    next_finish_timestamp: int = betterproto.uint32_field(11)
    forge_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ForgeQueueDataNotify(betterproto.Message):
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    removed_forge_queue_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ForgeGetQueueDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ForgeGetQueueDataRsp(betterproto.Message):
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    retcode: int = betterproto.int32_field(15)
    max_queue_num: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ForgeStartReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(7)
    forge_id: int = betterproto.uint32_field(4)
    forge_count: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ForgeStartRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class ForgeQueueManipulateReq(betterproto.Message):
    forge_queue_id: int = betterproto.uint32_field(5)
    manipulate_type: "ForgeQueueManipulateType" = betterproto.enum_field(13)


@dataclass(eq=False, repr=False)
class ForgeQueueManipulateRsp(betterproto.Message):
    manipulate_type: "ForgeQueueManipulateType" = betterproto.enum_field(4)
    extra_output_item_list: List["ItemParam"] = betterproto.message_field(13)
    return_item_list: List["ItemParam"] = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(1)
    output_item_list: List["ItemParam"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ResinChangeNotify(betterproto.Message):
    next_add_timestamp: int = betterproto.uint32_field(6)
    cur_buy_count: int = betterproto.uint32_field(4)
    cur_value: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class BuyResinReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BuyResinRsp(betterproto.Message):
    cur_value: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class MaterialDeleteReturnNotify(betterproto.Message):
    return_item_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    type: "MaterialDeleteReturnType" = betterproto.enum_field(8)
    delete_material_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class TakeMaterialDeleteReturnReq(betterproto.Message):
    type: "MaterialDeleteReturnType" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class TakeMaterialDeleteReturnRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class MaterialDeleteUpdateNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class McoinExchangeHcoinReq(betterproto.Message):
    hcoin: int = betterproto.uint32_field(5)
    mcoin_cost: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class McoinExchangeHcoinRsp(betterproto.Message):
    mcoin_cost: int = betterproto.uint32_field(8)
    hcoin: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class MaterilaInfo(betterproto.Message):
    count: int = betterproto.uint32_field(11)
    guid: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class DestroyMaterialReq(betterproto.Message):
    material_list: List["MaterilaInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class DestroyMaterialRsp(betterproto.Message):
    item_count_list: List[int] = betterproto.uint32_field(12)
    item_id_list: List[int] = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class SetEquipLockStateReq(betterproto.Message):
    is_locked: bool = betterproto.bool_field(15)
    target_equip_guid: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class SetEquipLockStateRsp(betterproto.Message):
    target_equip_guid: int = betterproto.uint64_field(14)
    retcode: int = betterproto.int32_field(13)
    is_locked: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class CalcWeaponUpgradeReturnItemsReq(betterproto.Message):
    food_weapon_guid_list: List[int] = betterproto.uint64_field(15)
    target_weapon_guid: int = betterproto.uint64_field(12)
    item_param_list: List["ItemParam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CalcWeaponUpgradeReturnItemsRsp(betterproto.Message):
    item_param_list: List["ItemParam"] = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(15)
    target_weapon_guid: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class ForgeDataNotify(betterproto.Message):
    forge_id_list: List[int] = betterproto.uint32_field(5)
    forge_queue_map: Dict[int, "ForgeQueueData"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    max_queue_num: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ForgeFormulaDataNotify(betterproto.Message):
    is_locked: bool = betterproto.bool_field(15)
    forge_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CombineDataNotify(betterproto.Message):
    combine_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CombineFormulaDataNotify(betterproto.Message):
    combine_id: int = betterproto.uint32_field(6)
    is_locked: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ClosedItemNotify(betterproto.Message):
    item_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CheckAddItemExceedLimitNotify(betterproto.Message):
    is_drop: bool = betterproto.bool_field(5)
    msg_type: "CheckAddItemExceedLimitNotifyItemExceedLimitMsgType" = (
        betterproto.enum_field(4)
    )
    exceeded_item_type_list: List[int] = betterproto.uint32_field(10)
    exceeded_item_list: List[int] = betterproto.uint32_field(12)
    reason: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class SetIsAutoUnlockSpecificEquipReq(betterproto.Message):
    is_auto_unlock_specific_equip: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class SetIsAutoUnlockSpecificEquipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ReliquaryDecomposeReq(betterproto.Message):
    config_id: int = betterproto.uint32_field(13)
    target_count: int = betterproto.uint32_field(9)
    guid_list: List[int] = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class ReliquaryDecomposeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    guid_list: List[int] = betterproto.uint64_field(14)


@dataclass(eq=False, repr=False)
class MailChangeNotify(betterproto.Message):
    mail_list: List["MailData"] = betterproto.message_field(14)
    del_mail_id_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ReadMailNotify(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetMailItemReq(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetMailItemRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    mail_id_list: List[int] = betterproto.uint32_field(3)
    item_list: List["EquipParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DelMailReq(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class DelMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    mail_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GetAuthkeyReq(betterproto.Message):
    auth_appid: str = betterproto.string_field(14)
    sign_type: int = betterproto.uint32_field(7)
    authkey_ver: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetAuthkeyRsp(betterproto.Message):
    auth_appid: str = betterproto.string_field(4)
    sign_type: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(6)
    authkey_ver: int = betterproto.uint32_field(9)
    game_biz: str = betterproto.string_field(11)
    authkey: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ClientNewMailNotify(betterproto.Message):
    not_read_num: int = betterproto.uint32_field(7)
    not_got_attachment_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetAllMailReq(betterproto.Message):
    is_collected: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class GetAllMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    mail_list: List["MailData"] = betterproto.message_field(14)
    is_collected: bool = betterproto.bool_field(1)
    is_truncated: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ChangeMailStarNotify(betterproto.Message):
    is_star: bool = betterproto.bool_field(14)
    mail_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetAllMailNotify(betterproto.Message):
    is_collected: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class GetAllMailResultNotify(betterproto.Message):
    transaction: str = betterproto.string_field(9)
    mail_list: List["MailData"] = betterproto.message_field(5)
    page_index: int = betterproto.uint32_field(11)
    total_page_count: int = betterproto.uint32_field(4)
    is_collected: bool = betterproto.bool_field(7)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class PlayerStartMatchReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(3)
    mechanicus_difficult_level: int = betterproto.uint32_field(12)
    match_param_list: List[int] = betterproto.uint32_field(11)
    dungeon_id: int = betterproto.uint32_field(1)
    mp_play_id: int = betterproto.uint32_field(15)
    match_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerStartMatchRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    punish_end_time: int = betterproto.uint32_field(5)
    param: int = betterproto.uint32_field(4)
    mp_play_id: int = betterproto.uint32_field(13)
    mechanicus_difficult_level: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(3)
    match_id: int = betterproto.uint32_field(8)
    match_type: "MatchType" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class PlayerMatchInfoNotify(betterproto.Message):
    match_id: int = betterproto.uint32_field(8)
    match_begin_time: int = betterproto.uint32_field(4)
    dungeon_id: int = betterproto.uint32_field(10)
    match_type: "MatchType" = betterproto.enum_field(11)
    mechanicus_difficult_level: int = betterproto.uint32_field(12)
    match_param_list: List[int] = betterproto.uint32_field(6)
    estimate_match_cost_time: int = betterproto.uint32_field(3)
    mp_play_id: int = betterproto.uint32_field(5)
    host_uid: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class PlayerCancelMatchReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class PlayerCancelMatchRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    match_type: "MatchType" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class PlayerMatchStopNotify(betterproto.Message):
    reason: "MatchReason" = betterproto.enum_field(1)
    host_uid: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MatchPlayerInfo(betterproto.Message):
    is_agreed: bool = betterproto.bool_field(9)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GeneralMatchInfo(betterproto.Message):
    match_param: int = betterproto.uint32_field(1)
    match_id: int = betterproto.uint32_field(9)
    player_list: List["MatchPlayerInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GcgMatchInfo(betterproto.Message):
    player_list: List["MatchPlayerInfo"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class PlayerMatchSuccNotify(betterproto.Message):
    general_match_info: "GeneralMatchInfo" = betterproto.message_field(7)
    mp_play_id: int = betterproto.uint32_field(15)
    host_uid: int = betterproto.uint32_field(3)
    match_type: "MatchType" = betterproto.enum_field(5)
    gcg_match_info: "GcgMatchInfo" = betterproto.message_field(11)
    confirm_end_time: int = betterproto.uint32_field(2)
    dungeon_id: int = betterproto.uint32_field(6)
    mechanicus_difficult_level: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerConfirmMatchReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(12)
    is_agreed: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class PlayerConfirmMatchRsp(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(9)
    match_id: int = betterproto.uint32_field(4)
    is_agreed: bool = betterproto.bool_field(11)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class PlayerAllowEnterMpAfterAgreeMatchNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerMatchAgreedResultNotify(betterproto.Message):
    target_uid: int = betterproto.uint32_field(14)
    match_type: "MatchType" = betterproto.enum_field(3)
    reason: "PlayerMatchAgreedResultNotifyReason" = betterproto.enum_field(8)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpAfterMatchAgreedNotify(betterproto.Message):
    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(11)
    matchserver_id: int = betterproto.uint32_field(10)
    match_type: "MatchType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class PlayerGeneralMatchDismissNotify(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(3)
    reason: "MatchReason" = betterproto.enum_field(13)
    match_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerGeneralMatchConfirmNotify(betterproto.Message):
    match_id: int = betterproto.uint32_field(8)
    is_agree: bool = betterproto.bool_field(13)
    uid: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerGetForceQuitBanInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerGetForceQuitBanInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    match_id: int = betterproto.uint32_field(8)
    expire_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ServerTryCancelGeneralMatchNotify(betterproto.Message):
    match_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerGcgMatchDismissNotify(betterproto.Message):
    match_id: int = betterproto.uint32_field(11)
    reason: "MatchReason" = betterproto.enum_field(5)
    uid_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerGcgMatchConfirmNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(10)
    is_agree: bool = betterproto.bool_field(5)
    match_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class MechanicusInfo(betterproto.Message):
    gear_level_pair_list: List["Uint32Pair"] = betterproto.message_field(14)
    open_sequence_id_list: List[int] = betterproto.uint32_field(7)
    coin: int = betterproto.uint32_field(8)
    punish_over_time: int = betterproto.uint32_field(12)
    mechanicus_id: int = betterproto.uint32_field(10)
    finish_difficult_level_list: List[int] = betterproto.uint32_field(13)
    is_finish_teach_dungeon: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GetMechanicusInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetMechanicusInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    mechanicus_info: "MechanicusInfo" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class MechanicusSequenceOpenNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(8)
    sequence_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MechanicusCoinNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(7)
    coin: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MechanicusOpenNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MechanicusCloseNotify(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MechanicusUnlockGearReq(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(7)
    gear_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MechanicusUnlockGearRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    mechanicus_id: int = betterproto.uint32_field(8)
    gear_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class MechanicusLevelupGearReq(betterproto.Message):
    gear_id: int = betterproto.uint32_field(14)
    mechanicus_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MechanicusLevelupGearRsp(betterproto.Message):
    gear_id: int = betterproto.uint32_field(7)
    mechanicus_id: int = betterproto.uint32_field(2)
    after_gear_level: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class EnterMechanicusDungeonReq(betterproto.Message):
    difficult_level: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class EnterMechanicusDungeonRsp(betterproto.Message):
    wrong_uid: int = betterproto.uint32_field(12)
    difficult_level: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(6)
    dungeon_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MechanicusCandidateTeamCreateReq(betterproto.Message):
    difficult_level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class MechanicusCandidateTeamCreateRsp(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(7)
    difficult_level: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class UseMiracleRingReq(betterproto.Message):
    miracle_ring_op_type: int = betterproto.uint32_field(13)
    pos: "Vector" = betterproto.message_field(8)
    rot: "Vector" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class UseMiracleRingRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    miracle_ring_op_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MiracleRingDataNotify(betterproto.Message):
    is_gadget_created: bool = betterproto.bool_field(8)
    last_take_reward_time: int = betterproto.uint32_field(14)
    gadget_entity_id: int = betterproto.uint32_field(12)
    last_deliver_item_time: int = betterproto.uint32_field(10)
    miracle_ring_cd: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MiracleRingTakeRewardReq(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(11)
    gadget_entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class MiracleRingTakeRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class MiracleRingDropResultNotify(betterproto.Message):
    last_take_reward_time: int = betterproto.int32_field(5)
    drop_result: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class MiracleRingDeliverItemReq(betterproto.Message):
    op_type: "InterOpType" = betterproto.enum_field(9)
    item_param_list: List["ItemParam"] = betterproto.message_field(1)
    food_weapon_guid_list: List[int] = betterproto.uint64_field(4)
    gadget_id: int = betterproto.uint32_field(14)
    gadget_entity_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MiracleRingDeliverItemRsp(betterproto.Message):
    interact_type: "InteractType" = betterproto.enum_field(15)
    retcode: int = betterproto.int32_field(11)
    op_type: "InterOpType" = betterproto.enum_field(14)
    gadget_id: int = betterproto.uint32_field(4)
    gadget_entity_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MiracleRingDestroyNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class KeepAliveNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GmTalkReq(betterproto.Message):
    msg: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class GmTalkRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    retmsg: str = betterproto.string_field(3)
    msg: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class MsgParam(betterproto.Message):
    int_param: int = betterproto.uint32_field(9, group="param")
    flt_param: float = betterproto.float_field(7, group="param")
    str_param: str = betterproto.string_field(4, group="param")


@dataclass(eq=False, repr=False)
class ShowMessageNotify(betterproto.Message):
    msg_id: "SvrMsgId" = betterproto.enum_field(14)
    params: List["MsgParam"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class PingReq(betterproto.Message):
    client_time: int = betterproto.uint32_field(12)
    ue_time: float = betterproto.float_field(14)
    total_tick_time: float = betterproto.double_field(6)
    sc_data: bytes = betterproto.bytes_field(10)
    seq: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PingRsp(betterproto.Message):
    client_time: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(6)
    seq: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOnlinePlayerListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    param: int = betterproto.uint32_field(11)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ServerTimeNotify(betterproto.Message):
    server_time: int = betterproto.uint64_field(5)


@dataclass(eq=False, repr=False)
class ServerLogNotify(betterproto.Message):
    server_log: str = betterproto.string_field(7)
    log_type: "ServerLogType" = betterproto.enum_field(9)
    log_level: "ServerLogLevel" = betterproto.enum_field(15)


@dataclass(eq=False, repr=False)
class ClientReconnectNotify(betterproto.Message):
    reason: "ClientReconnectReason" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class RobotPushPlayerDataNotify(betterproto.Message):
    bin: bytes = betterproto.bytes_field(6)


@dataclass(eq=False, repr=False)
class ClientReportNotify(betterproto.Message):
    report_type: str = betterproto.string_field(1)
    report_value: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class UnionCmd(betterproto.Message):
    body: bytes = betterproto.bytes_field(14)
    message_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class UnionCmdNotify(betterproto.Message):
    cmd_list: List["UnionCmd"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GetOnlinePlayerInfoReq(betterproto.Message):
    is_online_id: bool = betterproto.bool_field(15)
    target_uid: int = betterproto.uint32_field(9, group="player_id")
    online_id: str = betterproto.string_field(7, group="player_id")
    psn_id: str = betterproto.string_field(2, group="player_id")


@dataclass(eq=False, repr=False)
class GetOnlinePlayerInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    target_uid: int = betterproto.uint32_field(7)
    param: int = betterproto.uint32_field(4)
    target_player_info: "OnlinePlayerInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class SegmentInfo(betterproto.Message):
    offset: int = betterproto.uint32_field(3)
    module: int = betterproto.uint32_field(7)
    size: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class SegmentCrcInfo(betterproto.Message):
    module: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(5)
    size: int = betterproto.uint32_field(10)
    crc: str = betterproto.string_field(3)
    offset: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CheckSegmentCrcNotify(betterproto.Message):
    info_list: List["SegmentInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class CheckSegmentCrcReq(betterproto.Message):
    info_list: List["SegmentCrcInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerRttInfo(betterproto.Message):
    rtt: int = betterproto.uint32_field(2)
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WorldPlayerRttNotify(betterproto.Message):
    player_rtt_list: List["PlayerRttInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EchoNotify(betterproto.Message):
    seq_id: int = betterproto.uint32_field(4)
    content: str = betterproto.string_field(9)


@dataclass(eq=False, repr=False)
class UpdateRedPointNotify(betterproto.Message):
    red_point_list: List["RedPointData"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class ClientBulletCreateNotify(betterproto.Message):
    param: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChangeServerGlobalValueNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GmTalkNotify(betterproto.Message):
    msg: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class LastPacketPrintNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MonsterSummonTagNotify(betterproto.Message):
    summon_tag_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    monster_entity_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpNotify(betterproto.Message):
    src_thread_index: int = betterproto.uint32_field(5)
    src_app_id: int = betterproto.uint32_field(6)
    src_player_info: "OnlinePlayerInfo" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    target_uid: int = betterproto.uint32_field(3)
    param: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultNotify(betterproto.Message):
    is_agreed: bool = betterproto.bool_field(2)
    target_nickname: str = betterproto.string_field(12)
    reason: "PlayerApplyEnterMpResultNotifyReason" = betterproto.enum_field(13)
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultReq(betterproto.Message):
    apply_uid: int = betterproto.uint32_field(2)
    is_agreed: bool = betterproto.bool_field(12)


@dataclass(eq=False, repr=False)
class PlayerApplyEnterMpResultRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    is_agreed: bool = betterproto.bool_field(3)
    apply_uid: int = betterproto.uint32_field(10)
    param: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerQuitFromMpNotify(betterproto.Message):
    reason: "PlayerQuitFromMpNotifyQuitReason" = betterproto.enum_field(11)


@dataclass(eq=False, repr=False)
class PlayerPreEnterMpNotify(betterproto.Message):
    state: "PlayerPreEnterMpNotifyState" = betterproto.enum_field(2)
    uid: int = betterproto.uint32_field(14)
    nickname: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class GetPlayerMpModeAvailabilityReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerMpModeAvailabilityRsp(betterproto.Message):
    mp_ret: int = betterproto.int32_field(15)
    retcode: int = betterproto.int32_field(2)
    param_list: List[int] = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlayerSetOnlyMpWithPsPlayerReq(betterproto.Message):
    is_only: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class PlayerSetOnlyMpWithPsPlayerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    is_only: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class PsPlayerApplyEnterMpReq(betterproto.Message):
    target_psn_id: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class PsPlayerApplyEnterMpRsp(betterproto.Message):
    target_psn_id: str = betterproto.string_field(2)
    retcode: int = betterproto.int32_field(6)
    param: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MpPlayOwnerCheckReq(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(9)
    is_skip_match: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class MpPlayOwnerCheckRsp(betterproto.Message):
    wrong_uid: int = betterproto.uint32_field(4)
    is_skip_match: bool = betterproto.bool_field(15)
    mp_play_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class MpPlayOwnerStartInviteReq(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(3)
    is_skip_match: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class MpPlayOwnerStartInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    mp_play_id: int = betterproto.uint32_field(3)
    is_skip_match: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class MpPlayOwnerInviteNotify(betterproto.Message):
    cd: int = betterproto.uint32_field(12)
    mp_play_id: int = betterproto.uint32_field(13)
    is_remain_reward: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class MpPlayGuestReplyInviteReq(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(3)
    is_agree: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class MpPlayGuestReplyInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    mp_play_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class MpPlayGuestReplyNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(7)
    is_agree: bool = betterproto.bool_field(4)
    mp_play_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class MpPlayPrepareNotify(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(9)
    prepare_end_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class MpPlayInviteResultNotify(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(11)
    all_argee: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class MpPlayPrepareInterruptNotify(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MpBlockNotify(betterproto.Message):
    end_time: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class NpcTalkReq(betterproto.Message):
    entity_id: int = betterproto.uint32_field(8)
    npc_entity_id: int = betterproto.uint32_field(9)
    talk_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class NpcTalkRsp(betterproto.Message):
    cur_talk_id: int = betterproto.uint32_field(9)
    npc_entity_id: int = betterproto.uint32_field(6)
    retcode: int = betterproto.int32_field(3)
    entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetSceneNpcPositionReq(betterproto.Message):
    npc_id_list: List[int] = betterproto.uint32_field(6)
    scene_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class GetSceneNpcPositionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    npc_info_list: List["NpcPositionInfo"] = betterproto.message_field(14)
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MetNpcIdListNotify(betterproto.Message):
    npc_first_met_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MeetNpcReq(betterproto.Message):
    npc_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MeetNpcRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(14)
    npc_first_met_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class FinishedTalkIdListNotify(betterproto.Message):
    finished_talk_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerOfferingData(betterproto.Message):
    offering_id: int = betterproto.uint32_field(1)
    is_first_interact: bool = betterproto.bool_field(15)
    level: int = betterproto.uint32_field(12)
    taken_level_reward_list: List[int] = betterproto.uint32_field(8)
    is_new_max_level: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class PlayerOfferingDataNotify(betterproto.Message):
    offering_data_list: List["PlayerOfferingData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerOfferingReq(betterproto.Message):
    offering_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerOfferingRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(7)
    retcode: int = betterproto.int32_field(4)
    offering_data: "PlayerOfferingData" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class TakeOfferingLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(6)
    offering_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class TakeOfferingLevelRewardRsp(betterproto.Message):
    offering_id: int = betterproto.uint32_field(3)
    take_level: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(8)
    item_list: List["ItemParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class OfferingInteractReq(betterproto.Message):
    offering_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class OfferingInteractRsp(betterproto.Message):
    offering_data: "PlayerOfferingData" = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class OpActivityInfo(betterproto.Message):
    activity_id: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(6)
    begin_time: int = betterproto.uint32_field(5)
    is_has_change: bool = betterproto.bool_field(1)
    schedule_id: int = betterproto.uint32_field(13)
    bonus_info: "BonusOpActivityInfo" = betterproto.message_field(12, group="detail")


@dataclass(eq=False, repr=False)
class BonusOpActivityInfo(betterproto.Message):
    left_bonus_count: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class GetOpActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOpActivityInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    op_activity_info_list: List["OpActivityInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class OpActivityDataNotify(betterproto.Message):
    op_activity_info_list: List["OpActivityInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class OpActivityUpdateNotify(betterproto.Message):
    op_activity_info: "OpActivityInfo" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class QueryFilter(betterproto.Message):
    type_id: int = betterproto.int32_field(9)
    area_mask: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class QueryPathReq(betterproto.Message):
    query_type: "QueryPathReqOptionType" = betterproto.enum_field(13)
    source_extend: "Vector3Int" = betterproto.message_field(6)
    source_pos: "Vector" = betterproto.message_field(2)
    filter: "QueryFilter" = betterproto.message_field(12)
    query_id: int = betterproto.int32_field(15)
    destination_extend: "Vector3Int" = betterproto.message_field(4)
    destination_pos: List["Vector"] = betterproto.message_field(10)
    scene_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class QueryPathRsp(betterproto.Message):
    query_id: int = betterproto.int32_field(12)
    corners: List["Vector"] = betterproto.message_field(6)
    query_status: "QueryPathRspPathStatusType" = betterproto.enum_field(8)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ObstacleInfo(betterproto.Message):
    rotation: "MathQuaternion" = betterproto.message_field(4)
    obstacle_id: int = betterproto.int32_field(2)
    center: "Vector" = betterproto.message_field(14)
    shape: "ObstacleInfoShapeType" = betterproto.enum_field(6)
    extents: "Vector3Int" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class ObstacleModifyNotify(betterproto.Message):
    remove_obstacle_ids: List[int] = betterproto.int32_field(9)
    add_obstacles: List["ObstacleInfo"] = betterproto.message_field(6)
    scene_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PathfindingPingNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PathfindingEnterSceneReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(12)
    activity_id: List[int] = betterproto.uint32_field(14)
    scene_tag_hash: int = betterproto.uint32_field(15)
    version: int = betterproto.uint32_field(6)
    is_editor: bool = betterproto.bool_field(11)
    obstacles: List["ObstacleInfo"] = betterproto.message_field(13)
    polygon_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PathfindingEnterSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class GmShowObstacleReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GmObstacleInfo(betterproto.Message):
    timestamp: int = betterproto.int64_field(14)
    shape: "ObstacleInfoShapeType" = betterproto.enum_field(2)
    obstacle_id: int = betterproto.int32_field(13)
    rotation: "MathQuaternion" = betterproto.message_field(3)
    center: "Vector" = betterproto.message_field(8)
    extents: "Vector3Int" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GmShowObstacleRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    obstacles: List["GmObstacleInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class GmShowNavMeshReq(betterproto.Message):
    center: "Vector" = betterproto.message_field(1)
    extent: "Vector" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PbNavMeshPoly(betterproto.Message):
    edge_types: List["PbNavMeshPolyEdgeType"] = betterproto.enum_field(10)
    area: int = betterproto.int32_field(6)
    vects: List[int] = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class PbNavMeshTile(betterproto.Message):
    vecs: List["Vector"] = betterproto.message_field(4)
    polys: List["PbNavMeshPoly"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class GmShowNavMeshRsp(betterproto.Message):
    tiles: List["PbNavMeshTile"] = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class PbNavMeshStatsInfo(betterproto.Message):
    authority_ai_in_combat: int = betterproto.int32_field(10)
    no_authority_ai_in_combat: int = betterproto.int32_field(11)
    total_authority_ai: int = betterproto.int32_field(8)
    total_no_authority_ai: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class NavMeshStatsNotify(betterproto.Message):
    infos: List["PbNavMeshStatsInfo"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetPlayerTokenReq(betterproto.Message):
    account_token: str = betterproto.string_field(10)
    account_uid: str = betterproto.string_field(11)
    psn_region: str = betterproto.string_field(4)
    online_id: str = betterproto.string_field(7)
    channel_id: int = betterproto.uint32_field(15)
    account_ext: str = betterproto.string_field(9)
    country_code: str = betterproto.string_field(5)
    client_rand_key: str = betterproto.string_field(760)
    is_guest: bool = betterproto.bool_field(6)
    birthday: str = betterproto.string_field(1718)
    sub_channel_id: int = betterproto.uint32_field(8)
    platform_type: int = betterproto.uint32_field(12)
    client_ip_str: str = betterproto.string_field(3)
    psn_id: str = betterproto.string_field(13)
    account_type: int = betterproto.uint32_field(1)
    minors_reg_min_age: int = betterproto.uint32_field(995)
    cloud_client_ip: int = betterproto.uint32_field(14)
    key_id: int = betterproto.uint32_field(1787)
    uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetPlayerTokenRsp(betterproto.Message):
    birthday: str = betterproto.string_field(937)
    retcode: int = betterproto.int32_field(2)
    security_cmd_buffer: bytes = betterproto.bytes_field(6)
    secret_key_seed: int = betterproto.uint64_field(13)
    country_code: str = betterproto.string_field(2013)
    extra_bin_data: bytes = betterproto.bytes_field(3)
    secret_key: str = betterproto.string_field(15)
    minors_reg_min_age: int = betterproto.uint32_field(1561)
    black_uid_end_time: int = betterproto.uint32_field(14)
    tag: int = betterproto.uint32_field(1635)
    token: str = betterproto.string_field(11)
    gm_uid: int = betterproto.uint32_field(10)
    channel_id: int = betterproto.uint32_field(896)
    psn_id: str = betterproto.string_field(1811)
    client_ip_str: str = betterproto.string_field(860)
    msg: str = betterproto.string_field(7)
    account_type: int = betterproto.uint32_field(5)
    sub_channel_id: int = betterproto.uint32_field(1802)
    is_watchdog_uid: bool = betterproto.bool_field(2028)
    server_rand_key: str = betterproto.string_field(1493)
    is_proficient_player: bool = betterproto.bool_field(9)
    key_id: int = betterproto.uint32_field(1172)
    uid: int = betterproto.uint32_field(1)
    account_uid: str = betterproto.string_field(12)
    is_guest: bool = betterproto.bool_field(4)
    client_version_random_key: str = betterproto.string_field(1529)
    finish_collection_id_list: List[int] = betterproto.uint32_field(1640)
    platform_type: int = betterproto.uint32_field(8)
    reg_platform: int = betterproto.uint32_field(1112)
    is_login_white_list: bool = betterproto.bool_field(573)
    sign: str = betterproto.string_field(1140)


@dataclass(eq=False, repr=False)
class TrackingIoInfo(betterproto.Message):
    rydevicetype: str = betterproto.string_field(11)
    mac: str = betterproto.string_field(6)
    deviceid: str = betterproto.string_field(9)
    client_tz: str = betterproto.string_field(5)
    current_caid: str = betterproto.string_field(7)
    cached_caid: str = betterproto.string_field(15)
    appid: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AdjustTrackingInfo(betterproto.Message):
    event_token: str = betterproto.string_field(9)
    adid: str = betterproto.string_field(4)
    idfa: str = betterproto.string_field(2)
    app_token: str = betterproto.string_field(14)
    gps_adid: str = betterproto.string_field(3)
    fire_adid: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class PlayerLoginReq(betterproto.Message):
    language_type: int = betterproto.uint32_field(6)
    reg_platform: int = betterproto.uint32_field(615)
    tracking_io_info: "TrackingIoInfo" = betterproto.message_field(1660)
    account_type: int = betterproto.uint32_field(13)
    token: str = betterproto.string_field(15)
    extra_bin_data: bytes = betterproto.bytes_field(1458)
    channel_id: int = betterproto.uint32_field(1314)
    client_data_version: int = betterproto.uint32_field(688)
    account_uid: str = betterproto.string_field(2)
    client_version: str = betterproto.string_field(12)
    security_library_md5: str = betterproto.string_field(772)
    country_code: str = betterproto.string_field(2000)
    psn_id: str = betterproto.string_field(1268)
    client_port: int = betterproto.uint32_field(431)
    device_name: str = betterproto.string_field(9)
    cps: str = betterproto.string_field(1163)
    login_rand: int = betterproto.uint64_field(3)
    target_home_param: int = betterproto.uint32_field(984)
    adjust_tracking_info: "AdjustTrackingInfo" = betterproto.message_field(1816)
    is_transfer: bool = betterproto.bool_field(908)
    tag: int = betterproto.uint32_field(1787)
    is_guest: bool = betterproto.bool_field(5)
    environment_error_code: bytes = betterproto.bytes_field(2026)
    online_id: str = betterproto.string_field(903)
    is_editor: bool = betterproto.bool_field(8)
    checksum_client_version: str = betterproto.string_field(861)
    security_cmd_reply: bytes = betterproto.bytes_field(1995)
    security_library_version: str = betterproto.string_field(1213)
    birthday: str = betterproto.string_field(1652)
    device_uuid: str = betterproto.string_field(4)
    client_token: int = betterproto.uint32_field(1546)
    sub_channel_id: int = betterproto.uint32_field(23)
    target_uid: int = betterproto.uint32_field(11)
    device_info: str = betterproto.string_field(1)
    client_verison_hash: str = betterproto.string_field(1707)
    checksum: str = betterproto.string_field(1532)
    platform_type: int = betterproto.uint32_field(14)
    target_home_owner_uid: int = betterproto.uint32_field(1864)
    cloud_client_ip: int = betterproto.uint32_field(1335)
    gm_uid: int = betterproto.uint32_field(612)
    system_version: str = betterproto.string_field(10)
    platform: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class ShortAbilityHashPair(betterproto.Message):
    ability_config_hash: int = betterproto.sfixed32_field(15)
    ability_name_hash: int = betterproto.sfixed32_field(1)


@dataclass(eq=False, repr=False)
class PlayerLoginRsp(betterproto.Message):
    client_data_version: int = betterproto.uint32_field(1)
    is_sc_open: bool = betterproto.bool_field(1429)
    retcode: int = betterproto.int32_field(15)
    block_info_map: Dict[int, "BlockInfo"] = betterproto.map_field(
        571, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    is_audit: bool = betterproto.bool_field(1685)
    is_transfer: bool = betterproto.bool_field(2018)
    client_silence_md5: str = betterproto.string_field(1746)
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(1573)
    client_silence_data_version: int = betterproto.uint32_field(6)
    login_rand: int = betterproto.uint64_field(4)
    is_new_player: bool = betterproto.bool_field(8)
    client_version_suffix: str = betterproto.string_field(1047)
    game_biz: str = betterproto.string_field(5)
    next_resource_url: str = betterproto.string_field(621)
    is_relogin: bool = betterproto.bool_field(10)
    total_tick_time: float = betterproto.double_field(125)
    is_enable_client_hash_debug: bool = betterproto.bool_field(932)
    sc_info: bytes = betterproto.bytes_field(2024)
    ability_hash_code: int = betterproto.int32_field(12)
    register_cps: str = betterproto.string_field(2040)
    is_login_rsp_split: bool = betterproto.bool_field(1649)
    is_use_ability_hash: bool = betterproto.bool_field(2)
    ability_hash_map: Dict[str, int] = betterproto.map_field(
        11, betterproto.TYPE_STRING, betterproto.TYPE_INT32
    )
    short_ability_hash_map: List["ShortAbilityHashPair"] = betterproto.message_field(
        250
    )
    client_md5: str = betterproto.string_field(1830)
    country_code: str = betterproto.string_field(1900)
    is_data_need_relogin: bool = betterproto.bool_field(951)
    res_version_config: "ResVersionConfig" = betterproto.message_field(1969)
    feature_block_info_list: List["FeatureBlockInfo"] = betterproto.message_field(1352)
    birthday: str = betterproto.string_field(624)
    target_uid: int = betterproto.uint32_field(14)
    player_data: bytes = betterproto.bytes_field(13)
    client_silence_version_suffix: str = betterproto.string_field(1299)
    target_home_owner_uid: int = betterproto.uint32_field(553)
    player_data_version: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerLogoutReq(betterproto.Message):
    reason: "PlayerLogoutReqReason" = betterproto.enum_field(6)


@dataclass(eq=False, repr=False)
class PlayerLogoutRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class PlayerLogoutNotify(betterproto.Message):
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class PlayerDataNotify(betterproto.Message):
    server_time: int = betterproto.uint64_field(7)
    nick_name: str = betterproto.string_field(8)
    is_first_login_today: bool = betterproto.bool_field(12)
    region_id: int = betterproto.uint32_field(6)
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ChangeGameTimeReq(betterproto.Message):
    game_time: int = betterproto.uint32_field(6)
    is_force_set: bool = betterproto.bool_field(11)
    extra_days: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ChangeGameTimeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(8)
    extra_days: int = betterproto.uint32_field(5)
    cur_game_time: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerGameTimeNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(7)
    game_time: int = betterproto.uint32_field(3)
    is_home: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class PlayerPropNotify(betterproto.Message):
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ClientTriggerEventNotify(betterproto.Message):
    force_id: int = betterproto.uint32_field(3)
    event_type: "EventTriggerType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class SetPlayerPropReq(betterproto.Message):
    prop_list: List["PropValue"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class SetPlayerPropRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(2)
    nick_name: str = betterproto.string_field(13)


@dataclass(eq=False, repr=False)
class SetPlayerBornDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class DoSetPlayerBornDataNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerPropChangeNotify(betterproto.Message):
    prop_delta: int = betterproto.uint32_field(13)
    prop_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class SetPlayerNameReq(betterproto.Message):
    nick_name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class SetPlayerNameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    nick_name: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class SetOpenStateReq(betterproto.Message):
    key: int = betterproto.uint32_field(12)
    value: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SetOpenStateRsp(betterproto.Message):
    key: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(14)
    value: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class OpenStateUpdateNotify(betterproto.Message):
    open_state_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class OpenStateChangeNotify(betterproto.Message):
    open_state_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlayerCookReq(betterproto.Message):
    cook_count: int = betterproto.uint32_field(1)
    qte_quality: int = betterproto.uint32_field(12)
    recipe_id: int = betterproto.uint32_field(8)
    assist_avatar: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerCookRsp(betterproto.Message):
    extral_item_list: List["ItemParam"] = betterproto.message_field(15)
    cook_count: int = betterproto.uint32_field(12)
    item_list: List["ItemParam"] = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(3)
    qte_quality: int = betterproto.uint32_field(5)
    recipe_data: "CookRecipeData" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class PlayerRandomCookReq(betterproto.Message):
    material_list: List["ItemParam"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class PlayerRandomCookRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class CookRecipeData(betterproto.Message):
    proficiency: int = betterproto.uint32_field(13)
    recipe_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CookDataNotify(betterproto.Message):
    recipe_data_list: List["CookRecipeData"] = betterproto.message_field(2)
    grade: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class CookRecipeDataNotify(betterproto.Message):
    recipe_data: "CookRecipeData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CookGradeDataNotify(betterproto.Message):
    grade: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialReq(betterproto.Message):
    count: int = betterproto.uint32_field(11)
    compound_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CompoundQueueData(betterproto.Message):
    output_count: int = betterproto.uint32_field(1)
    compound_id: int = betterproto.uint32_field(4)
    output_time: int = betterproto.uint32_field(14)
    wait_count: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialRsp(betterproto.Message):
    compound_que_data: "CompoundQueueData" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class TakeCompoundOutputReq(betterproto.Message):
    compound_group_id: int = betterproto.uint32_field(3)
    compound_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TakeCompoundOutputRsp(betterproto.Message):
    item_list: List["ItemParam"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class CompoundDataNotify(betterproto.Message):
    unlock_compound_list: List[int] = betterproto.uint32_field(1)
    compound_que_data_list: List["CompoundQueueData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class GetCompoundDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCompoundDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    unlock_compound_list: List[int] = betterproto.uint32_field(11)
    compound_que_data_list: List["CompoundQueueData"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class PlayerTimeNotify(betterproto.Message):
    server_time: int = betterproto.uint64_field(5)
    player_time: int = betterproto.uint64_field(11)
    is_paused: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class PlayerSetPauseReq(betterproto.Message):
    is_paused: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class PlayerSetPauseRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class PlayerSetLanguageReq(betterproto.Message):
    language_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlayerSetLanguageRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class DataResVersionNotify(betterproto.Message):
    client_silence_md5: str = betterproto.string_field(10)
    client_silence_version_suffix: str = betterproto.string_field(15)
    res_version_config: "ResVersionConfig" = betterproto.message_field(9)
    is_data_need_relogin: bool = betterproto.bool_field(7)
    op_type: "DataResVersionNotifyDataResVersionOpType" = betterproto.enum_field(12)
    client_data_version: int = betterproto.uint32_field(2)
    client_version_suffix: str = betterproto.string_field(5)
    client_silence_data_version: int = betterproto.uint32_field(1)
    client_md5: str = betterproto.string_field(14)


@dataclass(eq=False, repr=False)
class DailyTaskInfo(betterproto.Message):
    reward_id: int = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(13)
    finish_progress: int = betterproto.uint32_field(10)
    daily_task_id: int = betterproto.uint32_field(4)
    is_finished: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class DailyTaskDataNotify(betterproto.Message):
    score_reward_id: int = betterproto.uint32_field(11)
    finished_num: int = betterproto.uint32_field(4)
    is_taken_score_reward: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class DailyTaskProgressNotify(betterproto.Message):
    info: "DailyTaskInfo" = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class DailyTaskScoreRewardNotify(betterproto.Message):
    reward_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class WorldOwnerDailyTaskNotify(betterproto.Message):
    filter_city_id: int = betterproto.uint32_field(2)
    task_list: List["DailyTaskInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AddRandTaskInfoNotify(betterproto.Message):
    rand_task_id: int = betterproto.uint32_field(5)
    pos: "Vector" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class RemoveRandTaskInfoNotify(betterproto.Message):
    is_succ: bool = betterproto.bool_field(9)
    reason: "RemoveRandTaskInfoNotifyFinishReason" = betterproto.enum_field(10)
    rand_task_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakePlayerLevelRewardRsp(betterproto.Message):
    reward_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(13)
    level: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerLevelRewardUpdateNotify(betterproto.Message):
    level_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GivingRecord(betterproto.Message):
    is_finished: bool = betterproto.bool_field(9)
    group_id: int = betterproto.uint32_field(5)
    is_gadget_giving: bool = betterproto.bool_field(8)
    giving_id: int = betterproto.uint32_field(3)
    last_group_id: int = betterproto.uint32_field(6)
    config_id: int = betterproto.uint32_field(2)
    material_cnt_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GivingRecordNotify(betterproto.Message):
    giving_record_list: List["GivingRecord"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class GivingRecordChangeNotify(betterproto.Message):
    is_deactive: bool = betterproto.bool_field(11)
    giving_record: "GivingRecord" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ItemGivingReq(betterproto.Message):
    item_guid_count_map: Dict[int, int] = betterproto.map_field(
        15, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )
    giving_id: int = betterproto.uint32_field(13)
    item_param_list: List["ItemParam"] = betterproto.message_field(4)
    item_giving_type: "ItemGivingReqItemGivingType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ItemGivingRsp(betterproto.Message):
    giving_group_id: int = betterproto.uint32_field(1)
    giving_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class PlayerCookArgsReq(betterproto.Message):
    assist_avatar: int = betterproto.uint32_field(10)
    recipe_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PlayerCookArgsRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    qte_range_ratio: float = betterproto.float_field(12)


@dataclass(eq=False, repr=False)
class PlayerLuaShellNotify(betterproto.Message):
    shell_type: "LuaShellType" = betterproto.enum_field(7)
    id: int = betterproto.uint32_field(5)
    lua_shell: bytes = betterproto.bytes_field(12)
    use_type: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ServerDisconnectClientNotify(betterproto.Message):
    data: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AntiAddictNotify(betterproto.Message):
    msg_type: int = betterproto.int32_field(6)
    msg: str = betterproto.string_field(3)
    level: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class PlayerForceExitReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerForceExitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class PlayerInjectFixNotify(betterproto.Message):
    id: int = betterproto.uint32_field(13)
    inject_fix: bytes = betterproto.bytes_field(10)


@dataclass(eq=False, repr=False)
class TaskVar(betterproto.Message):
    key: int = betterproto.uint32_field(8)
    value_list: List[int] = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class TaskVarNotify(betterproto.Message):
    task_var_list: List["TaskVar"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ClientLockGameTimeNotify(betterproto.Message):
    is_lock: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GetNextResourceInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetNextResourceInfoRsp(betterproto.Message):
    next_resource_url: str = betterproto.string_field(14)
    next_res_version_config: "ResVersionConfig" = betterproto.message_field(2)
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class AdjustWorldLevelReq(betterproto.Message):
    expect_world_level: int = betterproto.uint32_field(8)
    cur_world_level: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class AdjustWorldLevelRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    cd_over_time: int = betterproto.uint32_field(15)
    after_world_level: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DailyTaskFilterCityReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class DailyTaskFilterCityRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    city_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class DailyTaskUnlockedCitiesNotify(betterproto.Message):
    unlocked_city_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ExclusiveRuleInfo(betterproto.Message):
    object_id_list: List[int] = betterproto.uint32_field(1)
    rule_type: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ExclusiveRuleNotify(betterproto.Message):
    rule_info_list: List["ExclusiveRuleInfo"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CompoundUnlockNotify(betterproto.Message):
    compound_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GameplayRecommendationSkillRequest(betterproto.Message):
    skill_depot_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryRequest(betterproto.Message):
    equip_type: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GameplayRecommendationElementReliquaryRequest(betterproto.Message):
    equip_type: int = betterproto.uint32_field(9)
    element_type: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetGameplayRecommendationReq(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(9)
    skill_request: "GameplayRecommendationSkillRequest" = betterproto.message_field(
        553, group="detail"
    )
    reliquary_request: "GameplayRecommendationReliquaryRequest" = (
        betterproto.message_field(1993, group="detail")
    )
    element_reliquary_request: "GameplayRecommendationElementReliquaryRequest" = (
        betterproto.message_field(1489, group="detail")
    )


@dataclass(eq=False, repr=False)
class GameplayRecommendationSkillResponse(betterproto.Message):
    skill_depot_id: int = betterproto.uint32_field(13)
    skill_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryMainPropData(betterproto.Message):
    permillage: int = betterproto.uint32_field(1)
    main_prop_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryResponse(betterproto.Message):
    main_prop_data_list: List[
        "GameplayRecommendationReliquaryMainPropData"
    ] = betterproto.message_field(8)
    equip_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GameplayRecommendationElementReliquaryResponse(betterproto.Message):
    element_type: int = betterproto.uint32_field(11)
    main_prop_data_list: List[
        "GameplayRecommendationReliquaryMainPropData"
    ] = betterproto.message_field(5)
    equip_type: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetGameplayRecommendationRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    avatar_id: int = betterproto.uint32_field(15)
    skill_response: "GameplayRecommendationSkillResponse" = betterproto.message_field(
        1022, group="detail"
    )
    reliquary_response: "GameplayRecommendationReliquaryResponse" = (
        betterproto.message_field(196, group="detail")
    )
    element_reliquary_response: "GameplayRecommendationElementReliquaryResponse" = (
        betterproto.message_field(167, group="detail")
    )


@dataclass(eq=False, repr=False)
class TakeBackGivingItemReq(betterproto.Message):
    giving_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class TakeBackGivingItemRsp(betterproto.Message):
    giving_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class PlayerNicknameAuditDataNotify(betterproto.Message):
    info: "ContentAuditInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class PlayerNicknameNotify(betterproto.Message):
    nickname: str = betterproto.string_field(7)


@dataclass(eq=False, repr=False)
class NicknameAuditConfigNotify(betterproto.Message):
    is_open: bool = betterproto.bool_field(8)
    submit_limit: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ReadNicknameAuditReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReadNicknameAuditRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialBoostReq(betterproto.Message):
    is_boost_all: bool = betterproto.bool_field(8)
    target_compound_group_id: int = betterproto.uint32_field(14)
    consume_material_id: int = betterproto.uint32_field(9)
    consume_material_count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerCompoundMaterialBoostRsp(betterproto.Message):
    take_item_list: List["ItemParam"] = betterproto.message_field(2)
    take_status: "CompoundBoostTakeStatusType" = betterproto.enum_field(6)
    retcode: int = betterproto.int32_field(7)
    compound_que_data_list: List["CompoundQueueData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class EntityPropNotify(betterproto.Message):
    prop_map: Dict[int, "PropValue"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    entity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class LifeStateChangeNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(6)
    attack_tag: str = betterproto.string_field(7)
    move_reliable_seq: int = betterproto.uint32_field(15)
    die_type: "PlayerDieType" = betterproto.enum_field(14)
    life_state: int = betterproto.uint32_field(5)
    source_entity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class EntityFightPropNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(4)
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class EntityFightPropUpdateNotify(betterproto.Message):
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    entity_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AvatarFightPropNotify(betterproto.Message):
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    avatar_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class AvatarFightPropUpdateNotify(betterproto.Message):
    fight_prop_map: Dict[int, float] = betterproto.map_field(
        15, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )
    avatar_guid: int = betterproto.uint64_field(13)


@dataclass(eq=False, repr=False)
class EntityFightPropChangeReasonNotify(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(10)
    prop_delta: float = betterproto.float_field(1)
    change_hp_reason: "ChangHpReason" = betterproto.enum_field(14)
    reason: "PropChangeReason" = betterproto.enum_field(6)
    entity_id: int = betterproto.uint32_field(5)
    change_energy_reson: "ChangeEnergyReason" = betterproto.enum_field(15)
    prop_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AvatarLifeStateChangeNotify(betterproto.Message):
    life_state: int = betterproto.uint32_field(13)
    attack_tag: str = betterproto.string_field(10)
    die_type: "PlayerDieType" = betterproto.enum_field(2)
    server_buff_list: List["ServerBuff"] = betterproto.message_field(12)
    move_reliable_seq: int = betterproto.uint32_field(5)
    source_entity_id: int = betterproto.uint32_field(3)
    avatar_guid: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class AvatarPropChangeReasonNotify(betterproto.Message):
    old_value: float = betterproto.float_field(11)
    reason: "PropChangeReason" = betterproto.enum_field(5)
    prop_type: int = betterproto.uint32_field(1)
    avatar_guid: int = betterproto.uint64_field(8)
    cur_value: float = betterproto.float_field(15)


@dataclass(eq=False, repr=False)
class PlayerPropChangeReasonNotify(betterproto.Message):
    prop_type: int = betterproto.uint32_field(6)
    old_value: float = betterproto.float_field(12)
    reason: "PropChangeReason" = betterproto.enum_field(1)
    cur_value: float = betterproto.float_field(11)


@dataclass(eq=False, repr=False)
class AvatarPropNotify(betterproto.Message):
    prop_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_INT64
    )
    avatar_guid: int = betterproto.uint64_field(15)


@dataclass(eq=False, repr=False)
class MarkNewNotify(betterproto.Message):
    id_list: List[int] = betterproto.uint32_field(7)
    mark_new_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class QuestListNotify(betterproto.Message):
    quest_list: List["Quest"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QuestListUpdateNotify(betterproto.Message):
    quest_list: List["Quest"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class QuestDelNotify(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChildQuest(betterproto.Message):
    quest_config_id: int = betterproto.uint32_field(8)
    state: int = betterproto.uint32_field(4)
    quest_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ParentQuestRandomInfo(betterproto.Message):
    factor_list: List[int] = betterproto.uint32_field(1)
    template_id: int = betterproto.uint32_field(8)
    entrance_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class InfernceWordInfo(betterproto.Message):
    word_id: int = betterproto.uint32_field(8)
    is_interpret: bool = betterproto.bool_field(15)
    is_submit: bool = betterproto.bool_field(10)
    is_associate: bool = betterproto.bool_field(6)
    unlock_by_word_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class InferencePageInfo(betterproto.Message):
    page_id: int = betterproto.uint32_field(3)
    unlock_word_list: List["InfernceWordInfo"] = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class ParentQuest(betterproto.Message):
    quest_var: List[int] = betterproto.int32_field(14)
    time_var_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    parent_quest_state: int = betterproto.uint32_field(1)
    is_finished: bool = betterproto.bool_field(7)
    inference_page_list: List["InferencePageInfo"] = betterproto.message_field(15)
    random_info: "ParentQuestRandomInfo" = betterproto.message_field(12)
    parent_quest_id: int = betterproto.uint32_field(3)
    is_random: bool = betterproto.bool_field(13)
    video_key: int = betterproto.uint64_field(6)
    quest_var_seq: int = betterproto.uint32_field(11)
    child_quest_list: List["ChildQuest"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class FinishedParentQuestNotify(betterproto.Message):
    parent_quest_list: List["ParentQuest"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FinishedParentQuestUpdateNotify(betterproto.Message):
    parent_quest_list: List["ParentQuest"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class AddQuestContentProgressReq(betterproto.Message):
    content_type: int = betterproto.uint32_field(6)
    param: int = betterproto.uint32_field(12)
    add_progress: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class AddQuestContentProgressRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(13)
    content_type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetQuestTalkHistoryReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GetQuestTalkHistoryRsp(betterproto.Message):
    talk_id_list: List[int] = betterproto.uint32_field(13)
    parent_quest_id: int = betterproto.uint32_field(7)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class QuestCreateEntityReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(9)
    is_rewind: bool = betterproto.bool_field(3)
    quest_id: int = betterproto.uint32_field(2)
    entity: "CreateEntityInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class QuestCreateEntityRsp(betterproto.Message):
    quest_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(8)
    entity_id: int = betterproto.uint32_field(7)
    entity: "CreateEntityInfo" = betterproto.message_field(11)
    parent_quest_id: int = betterproto.uint32_field(1)
    is_rewind: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class QuestDestroyEntityReq(betterproto.Message):
    scene_id: int = betterproto.uint32_field(2)
    entity_id: int = betterproto.uint32_field(9)
    quest_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class QuestDestroyEntityRsp(betterproto.Message):
    quest_id: int = betterproto.uint32_field(14)
    scene_id: int = betterproto.uint32_field(9)
    entity_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ChapterStateNotify(betterproto.Message):
    chapter_state: "ChapterState" = betterproto.enum_field(9)
    need_player_level: "ChapterStateNotifyNeedPlayerLevel" = betterproto.message_field(
        10
    )
    need_begin_time: "ChapterStateNotifyNeedBeginTime" = betterproto.message_field(1)
    chapter_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChapterStateNotifyNeedPlayerLevel(betterproto.Message):
    is_limit: bool = betterproto.bool_field(2)
    config_need_player_level: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ChapterStateNotifyNeedBeginTime(betterproto.Message):
    config_need_begin_time: int = betterproto.uint32_field(3)
    is_limit: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class QuestProgressUpdateNotify(betterproto.Message):
    quest_id: int = betterproto.uint32_field(12)
    fail_progress_list: List[int] = betterproto.uint32_field(6)
    finish_progress_list: List[int] = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class QuestVarOp(betterproto.Message):
    index: int = betterproto.uint32_field(9)
    value: int = betterproto.int32_field(5)
    is_add: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(9)
    quest_var_op_list: List["QuestVarOp"] = betterproto.message_field(4)
    quest_id: int = betterproto.uint32_field(11)
    parent_quest_var_seq: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    parent_quest_var_seq: int = betterproto.uint32_field(2)
    parent_quest_id: int = betterproto.uint32_field(8)
    quest_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestVarNotify(betterproto.Message):
    quest_var: List[int] = betterproto.int32_field(1)
    parent_quest_id: int = betterproto.uint32_field(12)
    parent_quest_var_seq: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class QuestDestroyNpcReq(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    parent_quest_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class QuestDestroyNpcRsp(betterproto.Message):
    npc_id: int = betterproto.uint32_field(12)
    parent_quest_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class BargainSnapshot(betterproto.Message):
    expected_price: int = betterproto.uint32_field(3)
    cur_mood: int = betterproto.int32_field(14)
    price_low_limit: int = betterproto.uint32_field(2)
    bargain_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BargainStartNotify(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(4)
    snapshot: "BargainSnapshot" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BargainOfferPriceReq(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(4)
    price: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class BargainOfferPriceRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    result_param: int = betterproto.uint32_field(13)
    bargain_result: "BargainResultType" = betterproto.enum_field(14)
    cur_mood: int = betterproto.int32_field(6)


@dataclass(eq=False, repr=False)
class BargainTerminateNotify(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetBargainDataReq(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetBargainDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    bargain_id: int = betterproto.uint32_field(14)
    snapshot: "BargainSnapshot" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class GetAllActivatedBargainDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetAllActivatedBargainDataRsp(betterproto.Message):
    snapshot_list: List["BargainSnapshot"] = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ServerCondMeetQuestListUpdateNotify(betterproto.Message):
    del_quest_id_list: List[int] = betterproto.uint32_field(1)
    add_quest_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class QuestGlobalVar(betterproto.Message):
    value: int = betterproto.int32_field(8)
    key: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class QuestGlobalVarNotify(betterproto.Message):
    var_list: List["QuestGlobalVar"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QuestTransmitReq(betterproto.Message):
    point_id: int = betterproto.uint32_field(15)
    quest_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class QuestTransmitRsp(betterproto.Message):
    point_id: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(5)
    quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PersonalLineAllDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LockedPersonallineData(betterproto.Message):
    lock_reason: "LockedPersonallineDataLockReason" = betterproto.enum_field(2)
    personal_line_id: int = betterproto.uint32_field(13)
    chapter_id: int = betterproto.uint32_field(3, group="param")
    level: int = betterproto.uint32_field(1, group="param")


@dataclass(eq=False, repr=False)
class PersonalLineAllDataRsp(betterproto.Message):
    cur_finished_daily_task_count: int = betterproto.uint32_field(5)
    can_be_unlocked_personal_line_list: List[int] = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(15)
    ongoing_personal_line_list: List[int] = betterproto.uint32_field(8)
    legendary_key_count: int = betterproto.uint32_field(11)
    locked_personal_line_list: List[
        "LockedPersonallineData"
    ] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class RedeemLegendaryKeyReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class RedeemLegendaryKeyRsp(betterproto.Message):
    legendary_key_count: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(14)


@dataclass(eq=False, repr=False)
class UnlockPersonalLineReq(betterproto.Message):
    personal_line_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class UnlockPersonalLineRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(4)
    personal_line_id: int = betterproto.uint32_field(10)
    level: int = betterproto.uint32_field(11, group="param")
    chapter_id: int = betterproto.uint32_field(6, group="param")


@dataclass(eq=False, repr=False)
class CancelFinishParentQuestNotify(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class QuestUpdateQuestTimeVarNotify(betterproto.Message):
    time_var_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    parent_quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PersonalLineNewUnlockNotify(betterproto.Message):
    personal_line_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class NpcTalkStateNotify(betterproto.Message):
    is_ban: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GetQuestLackingResourceReq(betterproto.Message):
    quest_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetQuestLackingResourceRsp(betterproto.Message):
    quest_id: int = betterproto.uint32_field(4)
    retcode: int = betterproto.int32_field(11)
    lacked_npc_list: List[int] = betterproto.uint32_field(8)
    lacked_place_list: List[int] = betterproto.uint32_field(5)
    lacked_npc_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    lacked_place_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GetParentQuestVideoKeyReq(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class GetParentQuestVideoKeyRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    video_key: int = betterproto.uint64_field(14)
    parent_quest_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ParentQuestInferenceDataNotify(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(2)
    inference_page_list: List["InferencePageInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class InterpretInferenceWordReq(betterproto.Message):
    word_id: int = betterproto.uint32_field(2)
    page_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class InterpretInferenceWordRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(5)
    word_id: int = betterproto.uint32_field(14)
    page_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class AssociateInferenceWordReq(betterproto.Message):
    base_word_id: int = betterproto.uint32_field(7)
    page_id: int = betterproto.uint32_field(11)
    associate_word_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AssociateInferenceWordRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(15)
    base_word_id: int = betterproto.uint32_field(14)
    associate_word_id: int = betterproto.uint32_field(13)
    page_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SubmitInferenceWordReq(betterproto.Message):
    word_id: int = betterproto.uint32_field(4)
    page_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class SubmitInferenceWordRsp(betterproto.Message):
    word_id: int = betterproto.uint32_field(2)
    page_id: int = betterproto.uint32_field(13)
    conclusion_id: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class RechargeReq(betterproto.Message):
    play_product: "PlayProduct" = betterproto.message_field(10)
    card_product: "ShopCardProduct" = betterproto.message_field(8)
    mcoin_product: "ShopMcoinProduct" = betterproto.message_field(14)
    concert_product: "ShopConcertProduct" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class RechargeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(12)
    is_show_minors_hint: bool = betterproto.bool_field(6)
    product_id: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class OrderFinishNotify(betterproto.Message):
    order_id: int = betterproto.uint32_field(3)
    card_product_remain_days: int = betterproto.uint32_field(15)
    item_list: List["ItemParam"] = betterproto.message_field(9)
    add_mcoin: int = betterproto.uint32_field(7)
    product_id: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class CardProductRewardNotify(betterproto.Message):
    hcoin: int = betterproto.uint32_field(6)
    product_id: str = betterproto.string_field(14)
    remain_days: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ProductPriceTier(betterproto.Message):
    product_id: str = betterproto.string_field(6)
    price_tier: str = betterproto.string_field(12)


@dataclass(eq=False, repr=False)
class ResinCardData(betterproto.Message):
    remain_reward_days: int = betterproto.uint32_field(3)
    expire_time: int = betterproto.uint32_field(12)
    last_daily_reward_time: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerRechargeDataNotify(betterproto.Message):
    card_product_remain_days: int = betterproto.uint32_field(12)
    product_price_tier_list: List["ProductPriceTier"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class OrderDisplayNotify(betterproto.Message):
    order_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ReportTrackingIoInfoNotify(betterproto.Message):
    rydevicetype: str = betterproto.string_field(12)
    deviceid: str = betterproto.string_field(1)
    client_tz: str = betterproto.string_field(13)
    appid: str = betterproto.string_field(14)
    mac: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class TakeResinCardDailyRewardReq(betterproto.Message):
    product_config_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TakeResinCardDailyRewardRsp(betterproto.Message):
    item_vec: List["ItemParam"] = betterproto.message_field(6)
    retcode: int = betterproto.int32_field(4)
    product_config_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class ResinCardDataUpdateNotify(betterproto.Message):
    today_start_time: int = betterproto.uint32_field(6)
    card_data_list: List["ResinCardData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RegionalPlayVar(betterproto.Message):
    type: int = betterproto.uint32_field(15)
    max_value: float = betterproto.float_field(11)
    value: float = betterproto.float_field(3)
    base_value: float = betterproto.float_field(10)


@dataclass(eq=False, repr=False)
class RegionalPlayInfoNotify(betterproto.Message):
    var_list: List["RegionalPlayVar"] = betterproto.message_field(5)
    play_name: str = betterproto.string_field(9)
    is_enabled: bool = betterproto.bool_field(15)
    play_type: int = betterproto.uint32_field(7)
    is_in_region: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class DeathZoneInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(9)
    id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DeathZoneInfoNotify(betterproto.Message):
    death_zone_info_list: List["DeathZoneInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class PlayerDeathZoneNotify(betterproto.Message):
    cur_death_zone_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RegionSearch(betterproto.Message):
    is_entered: bool = betterproto.bool_field(13)
    progress: int = betterproto.uint32_field(5)
    state: "RegionSearchState" = betterproto.enum_field(2)
    region_search_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RegionSearchInfo(betterproto.Message):
    id: int = betterproto.uint32_field(5)
    region_search_list: List["RegionSearch"] = betterproto.message_field(1)
    is_entered: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class RegionSearchNotify(betterproto.Message):
    region_search_list: List["RegionSearchInfo"] = betterproto.message_field(1)
    uid: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class RegionSearchChangeRegionNotify(betterproto.Message):
    event: "RegionSearchChangeRegionNotifyRegionEvent" = betterproto.enum_field(1)
    region_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class TakeRegionSearchRewardReq(betterproto.Message):
    search_id: int = betterproto.uint32_field(3)
    id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeRegionSearchRewardRsp(betterproto.Message):
    search_id: int = betterproto.uint32_field(14)
    id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GetRegionSearchReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class NormalUidOpNotify(betterproto.Message):
    duration: int = betterproto.uint32_field(6)
    param_list: List[int] = betterproto.uint32_field(4)
    param_uid_list: List[int] = betterproto.uint32_field(5)
    param_index: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ServerMessageNotify(betterproto.Message):
    index: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CityReputationQuestInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(2)
    taken_parent_quest_reward_list: List[int] = betterproto.uint32_field(12)
    finished_parent_quest_list: List[int] = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CityReputationRequestInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(2)
    request_info_list: List[
        "CityReputationRequestInfoRequestInfo"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CityReputationRequestInfoRequestInfo(betterproto.Message):
    request_id: int = betterproto.uint32_field(3)
    quest_id: int = betterproto.uint32_field(9)
    is_taken_reward: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class CityReputationExploreInfo(betterproto.Message):
    taken_explore_reward_list: List[int] = betterproto.uint32_field(2)
    explore_percent: int = betterproto.uint32_field(14)
    is_open: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class CityReputationHuntInfo(betterproto.Message):
    is_open: bool = betterproto.bool_field(6)
    cur_week_finish_num: int = betterproto.uint32_field(15)
    has_reward: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class CityReputationInfo(betterproto.Message):
    level: int = betterproto.uint32_field(4)
    next_refresh_time: int = betterproto.uint32_field(3)
    hunt_info: "CityReputationHuntInfo" = betterproto.message_field(11)
    taken_level_reward_list: List[int] = betterproto.uint32_field(2)
    total_accept_request_num: int = betterproto.uint32_field(6)
    request_info: "CityReputationRequestInfo" = betterproto.message_field(5)
    quest_info: "CityReputationQuestInfo" = betterproto.message_field(9)
    exp: int = betterproto.uint32_field(13)
    explore_info: "CityReputationExploreInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class GetCityReputationInfoReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetCityReputationInfoRsp(betterproto.Message):
    city_id: int = betterproto.uint32_field(1)
    retcode: int = betterproto.int32_field(4)
    city_reputation_info: "CityReputationInfo" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class TakeCityReputationLevelRewardReq(betterproto.Message):
    level: int = betterproto.uint32_field(11)
    city_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TakeCityReputationLevelRewardRsp(betterproto.Message):
    city_id: int = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(11)
    item_list: List["ItemParam"] = betterproto.message_field(13)
    level: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CityReputationLevelupNotify(betterproto.Message):
    city_id: int = betterproto.uint32_field(12)
    level: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeCityReputationParentQuestReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(1)
    parent_quest_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class TakeCityReputationParentQuestRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)
    city_id: int = betterproto.uint32_field(14)
    parent_quest_list: List[int] = betterproto.uint32_field(9)
    item_list: List["ItemParam"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class AcceptCityReputationRequestReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(14)
    request_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AcceptCityReputationRequestRsp(betterproto.Message):
    request_id: int = betterproto.uint32_field(5)
    city_id: int = betterproto.uint32_field(13)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class CancelCityReputationRequestReq(betterproto.Message):
    request_id: int = betterproto.uint32_field(10)
    city_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class CancelCityReputationRequestRsp(betterproto.Message):
    city_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(2)
    request_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class GetCityReputationMapInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetCityReputationMapInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(11)
    is_new_hunting: bool = betterproto.bool_field(10)
    is_new_request: bool = betterproto.bool_field(2)
    unlock_hunting_city_list: List[int] = betterproto.uint32_field(9)
    reward_city_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeCityReputationExploreRewardReq(betterproto.Message):
    city_id: int = betterproto.uint32_field(15)
    explore_id_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TakeCityReputationExploreRewardRsp(betterproto.Message):
    explore_id_list: List[int] = betterproto.uint32_field(8)
    item_list: List["ItemParam"] = betterproto.message_field(12)
    retcode: int = betterproto.int32_field(6)
    city_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class CityReputationSimpleInfo(betterproto.Message):
    level: int = betterproto.uint32_field(15)
    city_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class CityReputationDataNotify(betterproto.Message):
    simple_info_list: List["CityReputationSimpleInfo"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class ReunionSignInInfo(betterproto.Message):
    sign_in_count: int = betterproto.uint32_field(6)
    reward_day_list: List[int] = betterproto.uint32_field(8)
    config_id: int = betterproto.uint32_field(12)
    last_sign_in_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ReunionWatcherInfo(betterproto.Message):
    reward_unlock_time: int = betterproto.uint32_field(12)
    watcher_id: int = betterproto.uint32_field(3)
    total_progress: int = betterproto.uint32_field(4)
    cur_progress: int = betterproto.uint32_field(11)
    is_taken_reward: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class ReunionMissionInfo(betterproto.Message):
    cur_day_watcher_list: List["ReunionWatcherInfo"] = betterproto.message_field(3)
    cur_score: int = betterproto.uint32_field(11)
    is_taken_reward: bool = betterproto.bool_field(8)
    is_taken_reward_list: List[bool] = betterproto.bool_field(6)
    next_refresh_time: int = betterproto.uint32_field(5)
    is_finished: bool = betterproto.bool_field(9)
    mission_id: int = betterproto.uint32_field(12)
    watcher_list: List["ReunionWatcherInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ReunionPrivilegeInfo(betterproto.Message):
    cur_day_count: int = betterproto.uint32_field(7)
    total_count: int = betterproto.uint32_field(10)
    privilege_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ReunionBriefInfo(betterproto.Message):
    first_gift_reward_id: int = betterproto.uint32_field(15)
    privilege_id: int = betterproto.uint32_field(5)
    mission_id: int = betterproto.uint32_field(10)
    first_day_start_time: int = betterproto.uint32_field(3)
    sign_in_has_reward: bool = betterproto.bool_field(2)
    start_time: int = betterproto.uint32_field(7)
    is_taken_first_gift: bool = betterproto.bool_field(8)
    finish_time: int = betterproto.uint32_field(12)
    mission_has_reward: bool = betterproto.bool_field(9)
    privilege_info: "ReunionPrivilegeInfo" = betterproto.message_field(14)
    version: str = betterproto.string_field(13)
    sign_in_config_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ReunionBriefInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReunionBriefInfoRsp(betterproto.Message):
    is_activate: bool = betterproto.bool_field(13)
    retcode: int = betterproto.int32_field(14)
    reunion_brief_info: "ReunionBriefInfo" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TakeReunionFirstGiftRewardReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TakeReunionFirstGiftRewardRsp(betterproto.Message):
    reward_id: int = betterproto.int32_field(9)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class GetReunionSignInInfoReq(betterproto.Message):
    sign_in_config_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetReunionSignInInfoRsp(betterproto.Message):
    sign_in_info: "ReunionSignInInfo" = betterproto.message_field(5)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class TakeReunionSignInRewardReq(betterproto.Message):
    reward_day: int = betterproto.uint32_field(12)
    config_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TakeReunionSignInRewardRsp(betterproto.Message):
    sign_in_info: "ReunionSignInInfo" = betterproto.message_field(10)
    retcode: int = betterproto.int32_field(5)


@dataclass(eq=False, repr=False)
class GetReunionMissionInfoReq(betterproto.Message):
    mission_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetReunionMissionInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(9)
    mission_info: "ReunionMissionInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class TakeReunionWatcherRewardReq(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(12)
    mission_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class TakeReunionWatcherRewardRsp(betterproto.Message):
    mission_id: int = betterproto.uint32_field(15)
    watcher_id: int = betterproto.uint32_field(9)
    retcode: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class UpdateReunionWatcherNotify(betterproto.Message):
    mission_id: int = betterproto.uint32_field(3)
    watcher_info: "ReunionWatcherInfo" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class TakeReunionMissionRewardReq(betterproto.Message):
    reward_id: int = betterproto.uint32_field(7)
    reward_index: int = betterproto.uint32_field(4)
    mission_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class TakeReunionMissionRewardRsp(betterproto.Message):
    reward_index: int = betterproto.uint32_field(12)
    retcode: int = betterproto.int32_field(2)
    mission_info: "ReunionMissionInfo" = betterproto.message_field(9)
    reward_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetReunionPrivilegeInfoReq(betterproto.Message):
    privilege_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class GetReunionPrivilegeInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(3)
    privilege_info: "ReunionPrivilegeInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReunionSettleNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReunionActivateNotify(betterproto.Message):
    is_activate: bool = betterproto.bool_field(9)
    reunion_brief_info: "ReunionBriefInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ReunionPrivilegeChangeNotify(betterproto.Message):
    privilege_info: "ReunionPrivilegeInfo" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ReunionDailyRefreshNotify(betterproto.Message):
    reunion_brief_info: "ReunionBriefInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerRoutineInfo(betterproto.Message):
    routine_type: int = betterproto.uint32_field(8)
    finished_num: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlayerRoutineDataNotify(betterproto.Message):
    routine_info_list: List["PlayerRoutineInfo"] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class WorldRoutineInfo(betterproto.Message):
    progress: int = betterproto.uint32_field(4)
    is_finished: bool = betterproto.bool_field(14)
    finish_progress: int = betterproto.uint32_field(3)
    routine_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class WorldRoutineTypeInfo(betterproto.Message):
    routine_type: int = betterproto.uint32_field(13)
    next_refresh_time: int = betterproto.uint32_field(12)
    world_routine_info_list: List["WorldRoutineInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WorldAllRoutineTypeNotify(betterproto.Message):
    world_routine_type_list: List["WorldRoutineTypeInfo"] = betterproto.message_field(
        12
    )


@dataclass(eq=False, repr=False)
class WorldRoutineTypeRefreshNotify(betterproto.Message):
    world_routine_type: "WorldRoutineTypeInfo" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class WorldRoutineChangeNotify(betterproto.Message):
    routine_info: "WorldRoutineInfo" = betterproto.message_field(3)
    routine_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class WorldRoutineTypeCloseNotify(betterproto.Message):
    routine_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInfo(betterproto.Message):
    mode: int = betterproto.uint32_field(4)
    progress_stage_list: List[int] = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(10)
    duration: int = betterproto.uint32_field(14)
    play_type: int = betterproto.uint32_field(12)
    play_id: int = betterproto.uint32_field(1)
    prepare_end_time: int = betterproto.uint32_field(7)
    progress: int = betterproto.uint32_field(11)
    state: int = betterproto.uint32_field(8)
    type: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInfoNotify(betterproto.Message):
    battle_info: "ScenePlayBattleInfo" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerCheckReq(betterproto.Message):
    play_id: int = betterproto.uint32_field(9)
    is_skip_match: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerCheckRsp(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(8)
    is_skip_match: bool = betterproto.bool_field(1)
    play_id: int = betterproto.uint32_field(9)
    wrong_uid: int = betterproto.uint32_field(5)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerStartInviteReq(betterproto.Message):
    is_skip_match: bool = betterproto.bool_field(8)
    play_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerStartInviteRsp(betterproto.Message):
    is_skip_match: bool = betterproto.bool_field(7)
    retcode: int = betterproto.int32_field(15)
    play_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ScenePlayOwnerInviteNotify(betterproto.Message):
    invite_cd: int = betterproto.uint32_field(14)
    play_id: int = betterproto.uint32_field(5)
    is_remain_reward: bool = betterproto.bool_field(15)


@dataclass(eq=False, repr=False)
class ScenePlayGuestReplyInviteReq(betterproto.Message):
    is_agree: bool = betterproto.bool_field(15)
    play_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayGuestReplyInviteRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(6)
    is_agree: bool = betterproto.bool_field(2)
    play_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ScenePlayGuestReplyNotify(betterproto.Message):
    play_id: int = betterproto.uint32_field(13)
    guest_uid: int = betterproto.uint32_field(12)
    is_agree: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ScenePlayInviteResultNotify(betterproto.Message):
    is_all_argee: bool = betterproto.bool_field(11)
    play_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ScenePlayInfo(betterproto.Message):
    entry_id: int = betterproto.uint32_field(15)
    play_id: int = betterproto.uint32_field(11)
    play_type: int = betterproto.uint32_field(3)
    is_open: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class ScenePlayInfoListNotify(betterproto.Message):
    play_info_list: List["ScenePlayInfo"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInterruptNotify(betterproto.Message):
    interrupt_state: int = betterproto.uint32_field(6)
    play_id: int = betterproto.uint32_field(5)
    play_type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ScenePlayBattleSettlePlayerInfo(betterproto.Message):
    card_list: List["ExhibitionDisplayInfo"] = betterproto.message_field(14)
    profile_picture: "ProfilePicture" = betterproto.message_field(10)
    head_image: int = betterproto.uint32_field(11)
    statistic_id: int = betterproto.uint32_field(4)
    uid: int = betterproto.uint32_field(1)
    param: int = betterproto.int64_field(5)
    online_id: str = betterproto.string_field(12)
    nickname: str = betterproto.string_field(15)


@dataclass(eq=False, repr=False)
class ScenePlayBattleSettleRewardInfo(betterproto.Message):
    reward_item_list: List["ItemParam"] = betterproto.message_field(4)
    uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ScenePlayBattleResultNotify(betterproto.Message):
    is_win: bool = betterproto.bool_field(1)
    cost_time: int = betterproto.uint32_field(7)
    play_type: int = betterproto.uint32_field(15)
    play_id: int = betterproto.uint32_field(11)
    settle_player_info_list: List[
        "ScenePlayBattleSettlePlayerInfo"
    ] = betterproto.message_field(4)
    settle_reward_info_list: List[
        "ScenePlayBattleSettleRewardInfo"
    ] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ScenePlayBattleUidOpNotify(betterproto.Message):
    op: int = betterproto.uint32_field(7)
    param_target_list: List[int] = betterproto.uint32_field(9)
    entity_id: int = betterproto.uint32_field(2)
    param_str: str = betterproto.string_field(3)
    uid_list: List[int] = betterproto.uint32_field(6)
    param_index: int = betterproto.uint32_field(11)
    play_type: int = betterproto.uint32_field(8)
    param_duration: int = betterproto.uint32_field(12)
    param_list: List[int] = betterproto.uint32_field(15)
    play_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ScenePlayBattleInfoListNotify(betterproto.Message):
    battle_info_list: List["ScenePlayBattleInfo"] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class ScenePlayOutofRegionNotify(betterproto.Message):
    play_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ShareCdInfo(betterproto.Message):
    index: int = betterproto.uint32_field(2)
    cd_start_time: int = betterproto.uint64_field(14)
    share_cd_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AllShareCdDataNotify(betterproto.Message):
    share_cd_info_map: Dict[int, "ShareCdInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ShopGoods(betterproto.Message):
    discount_end_time: int = betterproto.uint32_field(258)
    min_level: int = betterproto.uint32_field(8)
    end_time: int = betterproto.uint32_field(11)
    cost_item_list: List["ItemParam"] = betterproto.message_field(3)
    secondary_sheet_id: int = betterproto.uint32_field(318)
    hcoin: int = betterproto.uint32_field(1)
    mcoin: int = betterproto.uint32_field(14)
    discount_id: int = betterproto.uint32_field(1998)
    single_limit: int = betterproto.uint32_field(247)
    goods_id: int = betterproto.uint32_field(13)
    next_refresh_time: int = betterproto.uint32_field(7)
    max_level: int = betterproto.uint32_field(4)
    disable_type: int = betterproto.uint32_field(6)
    discount_begin_time: int = betterproto.uint32_field(574)
    pre_goods_id_list: List[int] = betterproto.uint32_field(2)
    begin_time: int = betterproto.uint32_field(5)
    scoin: int = betterproto.uint32_field(15)
    bought_num: int = betterproto.uint32_field(10)
    buy_limit: int = betterproto.uint32_field(12)
    goods_item: "ItemParam" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class Shop(betterproto.Message):
    concert_product_list: List["ShopConcertProduct"] = betterproto.message_field(3)
    goods_list: List["ShopGoods"] = betterproto.message_field(15)
    city_reputation_level: int = betterproto.uint32_field(2)
    card_product_list: List["ShopCardProduct"] = betterproto.message_field(14)
    mcoin_product_list: List["ShopMcoinProduct"] = betterproto.message_field(7)
    next_refresh_time: int = betterproto.uint32_field(11)
    city_id: int = betterproto.uint32_field(10)
    shop_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetShopReq(betterproto.Message):
    shop_type: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class GetShopRsp(betterproto.Message):
    shop: "Shop" = betterproto.message_field(11)
    retcode: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class BuyGoodsReq(betterproto.Message):
    buy_count: int = betterproto.uint32_field(14)
    goods: "ShopGoods" = betterproto.message_field(15)
    shop_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class BuyGoodsRsp(betterproto.Message):
    buy_count: int = betterproto.uint32_field(14)
    goods: "ShopGoods" = betterproto.message_field(12)
    shop_type: int = betterproto.uint32_field(11)
    retcode: int = betterproto.int32_field(2)
    goods_list: List["ShopGoods"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GetShopmallDataReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetShopmallDataRsp(betterproto.Message):
    shop_type_list: List[int] = betterproto.uint32_field(15)
    retcode: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class ActivityShopSheetInfo(betterproto.Message):
    end_time: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.uint32_field(12)
    sheet_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetActivityShopSheetInfoReq(betterproto.Message):
    shop_type: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GetActivityShopSheetInfoRsp(betterproto.Message):
    sheet_info_list: List["ActivityShopSheetInfo"] = betterproto.message_field(6)
    shop_type: int = betterproto.uint32_field(8)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class OpActivityTagBriefInfo(betterproto.Message):
    config_id: int = betterproto.uint32_field(2)
    has_reward: bool = betterproto.bool_field(3)
    op_activity_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class OpActivityStateNotify(betterproto.Message):
    finished_bonus_activity_id_list: List[int] = betterproto.uint32_field(14)
    opened_op_activity_info_list: List[
        "OpActivityTagBriefInfo"
    ] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class SignInData(betterproto.Message):
    day_count: int = betterproto.uint32_field(14)
    reward_item_list: List["ItemParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class SignInInfo(betterproto.Message):
    is_cond_satisfied: bool = betterproto.bool_field(7)
    reward_day_list: List[int] = betterproto.uint32_field(15)
    signin_data_list: List["SignInData"] = betterproto.message_field(12)
    config_id: int = betterproto.uint32_field(8)
    sign_in_count: int = betterproto.uint32_field(2)
    schedule_id: int = betterproto.uint32_field(3)
    end_time: int = betterproto.uint32_field(13)
    last_sign_in_time: int = betterproto.uint32_field(6)
    begin_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SignInInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SignInInfoRsp(betterproto.Message):
    sign_in_info_list: List["SignInInfo"] = betterproto.message_field(1)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class GetSignInRewardReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(10)
    reward_day: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetSignInRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    sign_in_info: "SignInInfo" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class BonusActivityInfo(betterproto.Message):
    bonus_activity_id: int = betterproto.uint32_field(6)
    state: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BonusActivityUpdateNotify(betterproto.Message):
    bonus_activity_info_list: List["BonusActivityInfo"] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class BonusActivityInfoReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class BonusActivityInfoRsp(betterproto.Message):
    bonus_activity_info_list: List["BonusActivityInfo"] = betterproto.message_field(2)
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class GetBonusActivityRewardReq(betterproto.Message):
    bonus_activity_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class GetBonusActivityRewardRsp(betterproto.Message):
    bonus_activity_info_list: "BonusActivityInfo" = betterproto.message_field(4)
    retcode: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentReq(betterproto.Message):
    talent_id: int = betterproto.uint32_field(13)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class UnlockAvatarTalentRsp(betterproto.Message):
    talent_id: int = betterproto.uint32_field(2)
    retcode: int = betterproto.int32_field(3)
    avatar_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class AvatarUnlockTalentNotify(betterproto.Message):
    entity_id: int = betterproto.uint32_field(14)
    avatar_guid: int = betterproto.uint64_field(13)
    talent_id: int = betterproto.uint32_field(10)
    skill_depot_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AvatarSkillDepotChangeNotify(betterproto.Message):
    skill_depot_id: int = betterproto.uint32_field(15)
    proud_skill_extra_level_map: Dict[int, int] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    talent_id_list: List[int] = betterproto.uint32_field(9)
    proud_skill_list: List[int] = betterproto.uint32_field(4)
    core_proud_skill_level: int = betterproto.uint32_field(2)
    entity_id: int = betterproto.uint32_field(7)
    avatar_guid: int = betterproto.uint64_field(12)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class BigTalentPointConvertReq(betterproto.Message):
    item_guid_list: List[int] = betterproto.uint64_field(6)
    avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class BigTalentPointConvertRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    avatar_guid: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class AvatarSkillMaxChargeCountNotify(betterproto.Message):
    skill_id: int = betterproto.uint32_field(6)
    max_charge_count: int = betterproto.uint32_field(11)
    avatar_guid: int = betterproto.uint64_field(7)


@dataclass(eq=False, repr=False)
class AvatarSkillInfoNotify(betterproto.Message):
    skill_map: Dict[int, "AvatarSkillInfo"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class ProudSkillUpgradeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(5)
    old_proud_skill_level: int = betterproto.uint32_field(4)
    proud_skill_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class ProudSkillUpgradeRsp(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(6)
    proud_skill_id: int = betterproto.uint32_field(10)
    retcode: int = betterproto.int32_field(15)


@dataclass(eq=False, repr=False)
class ProudSkillChangeNotify(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(11)
    entity_id: int = betterproto.uint32_field(4)
    skill_depot_id: int = betterproto.uint32_field(8)
    proud_skill_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeReq(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(7)
    old_level: int = betterproto.uint32_field(3)
    avatar_skill_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class AvatarSkillUpgradeRsp(betterproto.Message):
    avatar_guid: int = betterproto.uint64_field(11)
    cur_level: int = betterproto.uint32_field(14)
    avatar_skill_id: int = betterproto.uint32_field(9)
    old_level: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class AvatarSkillChangeNotify(betterproto.Message):
    cur_level: int = betterproto.uint32_field(11)
    avatar_guid: int = betterproto.uint64_field(2)
    entity_id: int = betterproto.uint32_field(7)
    skill_depot_id: int = betterproto.uint32_field(13)
    old_level: int = betterproto.uint32_field(1)
    avatar_skill_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ProudSkillExtraLevelNotify(betterproto.Message):
    talent_type: int = betterproto.uint32_field(11)
    talent_index: int = betterproto.uint32_field(8)
    avatar_guid: int = betterproto.uint64_field(15)
    extra_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CanUseSkillNotify(betterproto.Message):
    is_can_use_skill: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class AvatarTeamResonanceInfo(betterproto.Message):
    add_team_resonance_id_list: List[int] = betterproto.uint32_field(5)
    entity_id: int = betterproto.uint32_field(11)
    avatar_guid: int = betterproto.uint64_field(3)
    del_team_resonance_id_list: List[int] = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class TeamResonanceChangeNotify(betterproto.Message):
    info_list: List["AvatarTeamResonanceInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class AiSnapshotEntitySkillCycle(betterproto.Message):
    failed: bool = betterproto.bool_field(12)
    trydoskill: bool = betterproto.bool_field(8)
    success: bool = betterproto.bool_field(9)
    selected: bool = betterproto.bool_field(1)
    skill_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AiSnapshotEntityData(betterproto.Message):
    tick_time: float = betterproto.float_field(5)
    tactic: int = betterproto.uint32_field(2)
    finished_skill_cycles: List[
        "AiSnapshotEntitySkillCycle"
    ] = betterproto.message_field(9)
    moved_distance: float = betterproto.float_field(4)
    ai_target_id: int = betterproto.uint32_field(13)
    threat_target_id: int = betterproto.uint32_field(3)
    threat_list_size: int = betterproto.uint32_field(1)
    entity_id: int = betterproto.uint32_field(15)
    hitting_avatars: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    distance_to_player: float = betterproto.float_field(11)
    attack_target_id: int = betterproto.uint32_field(10)
    real_time: float = betterproto.float_field(14)


@dataclass(eq=False, repr=False)
class AiSnapshotInfo(betterproto.Message):
    ai_snapshots: List["AiSnapshotEntityData"] = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class ToTheMoonQueryPathReq(betterproto.Message):
    destination_pos: "Vector" = betterproto.message_field(9)
    fuzzy_range: int = betterproto.int32_field(15)
    query_type: "ToTheMoonQueryPathReqOptionType" = betterproto.enum_field(8)
    astar_method: "ToTheMoonQueryPathReqAStarMethod" = betterproto.enum_field(1)
    scene_id: int = betterproto.uint32_field(6)
    query_id: int = betterproto.int32_field(11)
    filter_type: "ToTheMoonQueryPathReqFilterType" = betterproto.enum_field(3)
    refined: bool = betterproto.bool_field(13)
    use_full_neighbor: bool = betterproto.bool_field(5)
    source_pos: "Vector" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class ToTheMoonQueryPathRsp(betterproto.Message):
    query_status: "ToTheMoonQueryPathRspPathStatusType" = betterproto.enum_field(7)
    index: List[int] = betterproto.int64_field(3)
    corners: List["Vector"] = betterproto.message_field(14)
    level: List[int] = betterproto.int32_field(1)
    retcode: int = betterproto.int32_field(8)
    query_id: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class ToTheMoonPingNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ToTheMoonEnterSceneReq(betterproto.Message):
    version: int = betterproto.uint32_field(14)
    scene_id: int = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class ToTheMoonEnterSceneRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class ToTheMoonObstacleInfo(betterproto.Message):
    type: "ToTheMoonObstacleInfoShapeType" = betterproto.enum_field(2)
    handle_id: int = betterproto.int32_field(11)
    rotation: "MathQuaternion" = betterproto.message_field(7)
    center: "Vector" = betterproto.message_field(13)
    half_extents: "Vector" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class ToTheMoonAddObstacleReq(betterproto.Message):
    use_edge: bool = betterproto.bool_field(12)
    obstacle: "ToTheMoonObstacleInfo" = betterproto.message_field(13)
    query_id: int = betterproto.int32_field(9)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DynamicSvoNode(betterproto.Message):
    index: int = betterproto.int64_field(8)
    area: int = betterproto.int32_field(5)
    refer_pos: "Vector" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DynamicLayerNodes(betterproto.Message):
    level: int = betterproto.int32_field(10)
    nodes: List["DynamicSvoNode"] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class DynamicNodes(betterproto.Message):
    nodes: List["DynamicLayerNodes"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ToTheMoonAddObstacleRsp(betterproto.Message):
    dynamic_nodes: "DynamicNodes" = betterproto.message_field(2)
    query_id: int = betterproto.int32_field(13)
    retcode: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class ToTheMoonRemoveObstacleReq(betterproto.Message):
    handle: int = betterproto.int32_field(12)
    scene_id: int = betterproto.uint32_field(10)
    query_id: int = betterproto.int32_field(11)


@dataclass(eq=False, repr=False)
class ToTheMoonRemoveObstacleRsp(betterproto.Message):
    query_id: int = betterproto.int32_field(3)
    retcode: int = betterproto.int32_field(14)
    dynamic_nodes: "DynamicNodes" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ToTheMoonObstaclesModifyNotify(betterproto.Message):
    add_obstacles: List["ToTheMoonObstacleInfo"] = betterproto.message_field(4)
    remove_obstacle_ids: List[int] = betterproto.int32_field(13)
    scene_id: int = betterproto.uint32_field(15)
    use_edge: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class WatcherAllDataNotify(betterproto.Message):
    watcher_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WatcherChangeNotify(betterproto.Message):
    removed_watcher_list: List[int] = betterproto.uint32_field(2)
    new_watcher_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class WatcherEventNotify(betterproto.Message):
    add_progress: int = betterproto.uint32_field(6)
    watcher_id: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class WatcherEventTypeNotify(betterproto.Message):
    param_list: List[int] = betterproto.uint32_field(14)
    add_progress: int = betterproto.uint32_field(15)
    watcher_trigger_type: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class WatcherEventStageNotify(betterproto.Message):
    add_progress: int = betterproto.uint32_field(4)
    stage: int = betterproto.uint32_field(2)
    watcher_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class PushTipsData(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(13)
    state: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PushTipsAllDataNotify(betterproto.Message):
    push_tips_list: List["PushTipsData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PushTipsChangeNotify(betterproto.Message):
    push_tips_list: List["PushTipsData"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class PushTipsReadFinishReq(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class PushTipsReadFinishRsp(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(3)
    retcode: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class GetPushTipsRewardReq(betterproto.Message):
    push_tips_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GetPushTipsRewardRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(10)
    push_tips_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class VectorBin(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass(eq=False, repr=False)
class Uint32PairBin(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class Uint32ToInt32PairBin(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class FloatPairBin(betterproto.Message):
    first: float = betterproto.float_field(1)
    second: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class Uint32List(betterproto.Message):
    uint32_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class Int32List(betterproto.Message):
    int32_list: List[int] = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ReliquaryBin(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    main_prop_id: int = betterproto.uint32_field(4)
    append_prop_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WeaponBin(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    promote_level: int = betterproto.uint32_field(3)
    affix_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ItemParamBin(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)
    level: int = betterproto.uint32_field(3)
    promote_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MailBin(betterproto.Message):
    title: str = betterproto.string_field(1)
    content: str = betterproto.string_field(2)
    sender: str = betterproto.string_field(3)
    item_param_list: List["ItemParamBin"] = betterproto.message_field(4)
    send_time: int = betterproto.fixed32_field(5)
    expire_time: int = betterproto.fixed32_field(6)
    importance: int = betterproto.uint32_field(7)
    config_id: int = betterproto.uint32_field(8)
    argument_list: List[str] = betterproto.string_field(9)
    item_limit_type: int = betterproto.uint32_field(10)
    source_type: int = betterproto.uint32_field(11)
    tag: str = betterproto.string_field(12)
    reason_type: int = betterproto.uint32_field(13)
    collect_state: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class DelItemOp(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DelItemNegativeOp(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_num: int = betterproto.uint32_field(2)
    remain_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DelEquipOp(betterproto.Message):
    guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class PlayerGotoOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    pos: "VectorBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ResetParentQuestOp(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RefreshGroupOp(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    suite_id: int = betterproto.uint32_field(2)
    scene_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetScenePointLockStatusOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    point_id: int = betterproto.uint32_field(2)
    is_locked: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SetPlayerNickNameOp(betterproto.Message):
    nick_name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class RefreshShopOp(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UnlockTalentOp(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    skill_depot_id: int = betterproto.uint32_field(2)
    talent_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TakeOffEquipOp(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    equip_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DelMailOp(betterproto.Message):
    mail_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class UnlockAreaOp(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FinishDailyTaskOp(betterproto.Message):
    daily_task_id: int = betterproto.uint32_field(1)
    daily_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AddItemOp(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    item_count: int = betterproto.uint32_field(2)
    reliquary: "ReliquaryBin" = betterproto.message_field(101, group="detail")
    weapon: "WeaponBin" = betterproto.message_field(102, group="detail")


@dataclass(eq=False, repr=False)
class ModifyBornPosOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    pos: "VectorBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SubCoinNegativeOp(betterproto.Message):
    scoin: int = betterproto.uint32_field(1)
    hcoin: int = betterproto.uint32_field(2)
    mcoin: int = betterproto.uint32_field(3)
    home_coin: int = betterproto.uint32_field(4)
    platform_type: "PlatformType" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class SetQuestContentProgressOp(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    finish_progress_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    fail_progress_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class FinishOrderOp(betterproto.Message):
    order_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AddOrModifyWatcherOp(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DelWatcherOp(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetSignatureOp(betterproto.Message):
    signature: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AddOrSubResinOp(betterproto.Message):
    delta_count: int = betterproto.uint32_field(1)
    is_sub: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SetQuestGlobalVarValueOp(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class AddMcoinVipPointOp(betterproto.Message):
    mcoin: int = betterproto.uint32_field(1)
    vip_point: int = betterproto.uint32_field(2)
    platform_type: "PlatformType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class ExchangeMcoinOp(betterproto.Message):
    num: int = betterproto.uint32_field(1)
    exchange_type: "ExchangeMcoinType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GroupBinOp(betterproto.Message):
    op_type: "GroupBinOperation" = betterproto.enum_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    is_add: bool = betterproto.bool_field(4)
    state: int = betterproto.uint32_field(5)
    is_create: bool = betterproto.bool_field(6)
    trigger_name: str = betterproto.string_field(7)
    trigger_count: int = betterproto.uint32_field(8)
    variable_name: str = betterproto.string_field(9)
    variable_value: int = betterproto.int32_field(10)
    target_suite: int = betterproto.uint32_field(11)
    scene_id: int = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class DelOneOffOp(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)
    is_monster: bool = betterproto.bool_field(3)
    scene_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class FinishRoutineOp(betterproto.Message):
    routine_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FinishDailyTaskUnloadGroupOp(betterproto.Message):
    daily_task_id: int = betterproto.uint32_field(1)
    daily_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RefreshBlossomCircleCampOp(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    circle_camp_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BlessingActivityGivePicOp(betterproto.Message):
    source_uid: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    pic_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ExpeditionActivityAssistOp(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    assist_time: int = betterproto.uint32_field(2)
    target_uid: int = betterproto.uint32_field(3)
    target_nick_name: str = betterproto.string_field(4)
    online_id: str = betterproto.string_field(5)
    assist_uid: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RecoverWorldLevelOp(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AddRegionSearchProgressOp(betterproto.Message):
    region_id: int = betterproto.uint32_field(1)
    add_recycle: int = betterproto.uint32_field(2)
    add_progress: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetMatchPunishTimesOp(betterproto.Message):
    match_id: int = betterproto.uint32_field(1)
    punish_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ResetChannellerSlabCampGroupOp(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    round_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ForceAcceptQuestOp(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SetMainCoopConfidenceOp(betterproto.Message):
    confidence: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AddCoopPointSavePointListOp(betterproto.Message):
    coop_point_id: int = betterproto.uint32_field(1)
    save_point_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetClimateAreaTypeOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    climate_area_id: int = betterproto.uint32_field(2)
    climate_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ProcSceneTagOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    scene_tag_id: int = betterproto.uint32_field(2)
    op_type: "SceneTagOpType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class SetFinishedParentQuestChildStateOp(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ChangeMapAreaInfoOp(betterproto.Message):
    map_area_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SetLevel1AreaExplorePointOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    level1_area_id: int = betterproto.uint32_field(2)
    explore_point: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetCodexOpenOrCloseOp(betterproto.Message):
    codex_type: int = betterproto.uint32_field(1)
    codex_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GroupLinkOp(betterproto.Message):
    op_type: "GroupLinkOpType" = betterproto.enum_field(1)
    group_bundle_id: int = betterproto.uint32_field(2)
    activity_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SetWatcherCompRecordValueOp(betterproto.Message):
    max_critical_damage: float = betterproto.float_field(
        1, group="optional_max_critical_damage"
    )
    max_fly_map_distance: float = betterproto.float_field(
        2, group="optional_max_fly_map_distance"
    )
    max_fly_time: float = betterproto.float_field(3, group="optional_max_fly_time")
    max_dash_time: float = betterproto.float_field(4, group="optional_max_dash_time")


@dataclass(eq=False, repr=False)
class AddFriendOp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DelFriendOp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AddFriendAskOp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DelFriendAskOp(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BanCustomDungeonOp(betterproto.Message):
    ban_expire_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RemoveInvalidMapMarksOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    x_range: "FloatPairBin" = betterproto.message_field(2)
    z_range: "FloatPairBin" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RecalculateAreaExplorePointOp(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    old_exp: int = betterproto.uint32_field(2)
    recalc_exp: int = betterproto.uint32_field(3)
    new_exp: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class NicknameAuditResultOp(betterproto.Message):
    nickname: str = betterproto.string_field(1)
    is_ok: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SignatureAuditResultOp(betterproto.Message):
    signature: str = betterproto.string_field(1)
    is_ok: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PassHomeSceneArrangementAuditOp(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    version: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FailHomeSceneArrangementAuditOp(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    version: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FailHomeModulesArrangementAuditOp(betterproto.Message):
    is_all_module: bool = betterproto.bool_field(1)
    module_id_list: List[int] = betterproto.uint32_field(2)
    version: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BanUgcPublishOp(betterproto.Message):
    ban_publish_expire_time: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetPlayerPersistentDungeonOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetPlayerPosInPersistentDungeonOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class LevelTagChangeOp(betterproto.Message):
    level_tag_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ResetPlayerWayPointInPersistentDungeonOp(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    way_point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ExhibitionSetOp(betterproto.Message):
    exhibition_id: int = betterproto.uint32_field(1)
    accumulable_val: int = betterproto.uint32_field(2, group="optional_accumulable_val")
    replaceable_val: int = betterproto.uint32_field(3, group="optional_replaceable_val")


@dataclass(eq=False, repr=False)
class SetAvatarExtraPropOp(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    extra_prop_id: int = betterproto.uint32_field(2)
    extra_prop_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AddItemWithLimitOp(betterproto.Message):
    add_item_op: "AddItemOp" = betterproto.message_field(1)
    max_item_count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetGadgetChainLevelOp(betterproto.Message):
    gadgetchain_id: int = betterproto.uint32_field(1)
    gadgetchain_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SetDailyTaskVarOp(betterproto.Message):
    task_id: int = betterproto.uint32_field(1)
    index: int = betterproto.uint32_field(2)
    value: int = betterproto.int32_field(3)


@dataclass(eq=False, repr=False)
class OfflineMsgBin(betterproto.Message):
    enque_time: int = betterproto.fixed32_field(1)
    ticket: str = betterproto.string_field(2)
    index: int = betterproto.uint32_field(3)
    del_item_op: "DelItemOp" = betterproto.message_field(4, group="detail")
    goto_op: "PlayerGotoOp" = betterproto.message_field(5, group="detail")
    reset_parent_quest_op: "ResetParentQuestOp" = betterproto.message_field(
        6, group="detail"
    )
    refresh_group_op: "RefreshGroupOp" = betterproto.message_field(7, group="detail")
    set_scene_point_lock_status_op: "SetScenePointLockStatusOp" = (
        betterproto.message_field(8, group="detail")
    )
    set_nick_name_op: "SetPlayerNickNameOp" = betterproto.message_field(
        9, group="detail"
    )
    refresh_shop_op: "RefreshShopOp" = betterproto.message_field(10, group="detail")
    unlock_talent_op: "UnlockTalentOp" = betterproto.message_field(11, group="detail")
    take_off_equip_op: "TakeOffEquipOp" = betterproto.message_field(12, group="detail")
    del_mail_op: "DelMailOp" = betterproto.message_field(13, group="detail")
    finish_daily_task_op: "FinishDailyTaskOp" = betterproto.message_field(
        14, group="detail"
    )
    unlock_area_op: "UnlockAreaOp" = betterproto.message_field(15, group="detail")
    del_item_negative_op: "DelItemNegativeOp" = betterproto.message_field(
        16, group="detail"
    )
    del_equip_op: "DelEquipOp" = betterproto.message_field(17, group="detail")
    add_item_op: "AddItemOp" = betterproto.message_field(18, group="detail")
    modify_born_pos_op: "ModifyBornPosOp" = betterproto.message_field(
        19, group="detail"
    )
    sub_coin_negative_op: "SubCoinNegativeOp" = betterproto.message_field(
        20, group="detail"
    )
    set_quest_content_progress_op: "SetQuestContentProgressOp" = (
        betterproto.message_field(21, group="detail")
    )
    finish_order_op: "FinishOrderOp" = betterproto.message_field(22, group="detail")
    add_or_modify_watcher_op: "AddOrModifyWatcherOp" = betterproto.message_field(
        23, group="detail"
    )
    del_watcher_op: "DelWatcherOp" = betterproto.message_field(24, group="detail")
    set_signature_op: "SetSignatureOp" = betterproto.message_field(25, group="detail")
    add_or_sub_resin_op: "AddOrSubResinOp" = betterproto.message_field(
        26, group="detail"
    )
    set_quest_global_var_value_op: "SetQuestGlobalVarValueOp" = (
        betterproto.message_field(27, group="detail")
    )
    add_mcoin_op: "AddMcoinVipPointOp" = betterproto.message_field(28, group="detail")
    group_bin_op: "GroupBinOp" = betterproto.message_field(29, group="detail")
    del_one_off_op: "DelOneOffOp" = betterproto.message_field(30, group="detail")
    finish_routine_op: "FinishRoutineOp" = betterproto.message_field(31, group="detail")
    finish_daily_task_group_op: "FinishDailyTaskUnloadGroupOp" = (
        betterproto.message_field(32, group="detail")
    )
    refresh_blossom_circle_camp_op: "RefreshBlossomCircleCampOp" = (
        betterproto.message_field(33, group="detail")
    )
    blessing_give_pic_op: "BlessingActivityGivePicOp" = betterproto.message_field(
        34, group="detail"
    )
    expedition_assist_op: "ExpeditionActivityAssistOp" = betterproto.message_field(
        35, group="detail"
    )
    recover_world_level_op: "RecoverWorldLevelOp" = betterproto.message_field(
        36, group="detail"
    )
    force_accept_quest_op: "ForceAcceptQuestOp" = betterproto.message_field(
        37, group="detail"
    )
    set_main_coop_confidence_op: "SetMainCoopConfidenceOp" = betterproto.message_field(
        38, group="detail"
    )
    add_coop_point_save_point_list_op: "AddCoopPointSavePointListOp" = (
        betterproto.message_field(39, group="detail")
    )
    add_region_search_progress_op: "AddRegionSearchProgressOp" = (
        betterproto.message_field(40, group="detail")
    )
    set_match_punish_times_op: "SetMatchPunishTimesOp" = betterproto.message_field(
        41, group="detail"
    )
    reset_channeller_slab_camp_group_op: "ResetChannellerSlabCampGroupOp" = (
        betterproto.message_field(42, group="detail")
    )
    proc_scene_tag_op: "ProcSceneTagOp" = betterproto.message_field(43, group="detail")
    set_climate_area_type_op: "SetClimateAreaTypeOp" = betterproto.message_field(
        44, group="detail"
    )
    exchange_mcoin_op: "ExchangeMcoinOp" = betterproto.message_field(45, group="detail")
    set_finished_parent_quest_child_state_op: "SetFinishedParentQuestChildStateOp" = (
        betterproto.message_field(46, group="detail")
    )
    set_level1_area_explore_point_op: "SetLevel1AreaExplorePointOp" = (
        betterproto.message_field(47, group="detail")
    )
    set_codex_open_or_close_op: "SetCodexOpenOrCloseOp" = betterproto.message_field(
        48, group="detail"
    )
    change_map_area_info_op: "ChangeMapAreaInfoOp" = betterproto.message_field(
        49, group="detail"
    )
    group_link_op: "GroupLinkOp" = betterproto.message_field(50, group="detail")
    set_watcher_comp_record_value_op: "SetWatcherCompRecordValueOp" = (
        betterproto.message_field(51, group="detail")
    )
    add_friend_op: "AddFriendOp" = betterproto.message_field(52, group="detail")
    del_friend_op: "DelFriendOp" = betterproto.message_field(53, group="detail")
    add_friend_ask_op: "AddFriendAskOp" = betterproto.message_field(54, group="detail")
    del_friend_ask_op: "DelFriendAskOp" = betterproto.message_field(55, group="detail")
    ban_custom_dungeon_op: "BanCustomDungeonOp" = betterproto.message_field(
        56, group="detail"
    )
    remove_invalid_map_marks_op: "RemoveInvalidMapMarksOp" = betterproto.message_field(
        57, group="detail"
    )
    recalculate_area_explore_point_op: "RecalculateAreaExplorePointOp" = (
        betterproto.message_field(58, group="detail")
    )
    nickname_audit_result_op: "NicknameAuditResultOp" = betterproto.message_field(
        59, group="detail"
    )
    signature_audit_result_op: "SignatureAuditResultOp" = betterproto.message_field(
        60, group="detail"
    )
    pass_home_scene_arrangement_audit_op: "PassHomeSceneArrangementAuditOp" = (
        betterproto.message_field(61, group="detail")
    )
    fail_home_scene_arrangement_audit_op: "FailHomeSceneArrangementAuditOp" = (
        betterproto.message_field(62, group="detail")
    )
    fail_home_modules_arrangement_audit_op: "FailHomeModulesArrangementAuditOp" = (
        betterproto.message_field(63, group="detail")
    )
    ban_ugc_publish_op: "BanUgcPublishOp" = betterproto.message_field(
        64, group="detail"
    )
    reset_player_persistent_dungeon_op: "ResetPlayerPersistentDungeonOp" = (
        betterproto.message_field(28001, group="detail")
    )
    reset_player_pos_in_persistent_dungeon_op: "ResetPlayerPosInPersistentDungeonOp" = (
        betterproto.message_field(28002, group="detail")
    )
    level_tag_change_op: "LevelTagChangeOp" = betterproto.message_field(
        28003, group="detail"
    )
    reset_player_way_point_in_persistent_dungeon_op: "ResetPlayerWayPointInPersistentDungeonOp" = betterproto.message_field(
        28004, group="detail"
    )
    exhibition_set_op: "ExhibitionSetOp" = betterproto.message_field(
        30000, group="detail"
    )
    set_avatar_extra_prop_op: "SetAvatarExtraPropOp" = betterproto.message_field(
        30001, group="detail"
    )
    add_item_with_limit_op: "AddItemWithLimitOp" = betterproto.message_field(
        30002, group="detail"
    )
    set_gadget_chain_level_op: "SetGadgetChainLevelOp" = betterproto.message_field(
        31001, group="detail"
    )
    set_daily_task_var_op: "SetDailyTaskVarOp" = betterproto.message_field(
        32001, group="detail"
    )


@dataclass(eq=False, repr=False)
class HomeTestOp(betterproto.Message):
    val: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeRestoreDefaultsArrangementOp(betterproto.Message):
    is_all_module: bool = betterproto.bool_field(1)
    module_id_list: List[int] = betterproto.uint32_field(2)
    version: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeRestoreDefaultsSceneArrangementOp(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    version: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeOfflineMsgBin(betterproto.Message):
    enque_time: int = betterproto.fixed32_field(1)
    ticket: str = betterproto.string_field(2)
    index: int = betterproto.uint32_field(3)
    test_op: "HomeTestOp" = betterproto.message_field(101, group="detail")
    restore_defaults_arrangement_op: "HomeRestoreDefaultsArrangementOp" = (
        betterproto.message_field(102, group="detail")
    )
    restore_defaults_scene_arrangement_op: "HomeRestoreDefaultsSceneArrangementOp" = (
        betterproto.message_field(103, group="detail")
    )


@dataclass(eq=False, repr=False)
class GroupVariableBin(betterproto.Message):
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GroupVariableConfigIdBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class InteractGadget(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AreaBin(betterproto.Message):
    explore_num: int = betterproto.uint32_field(1)
    explore_point: int = betterproto.uint32_field(2)
    unlock_point_list: List[int] = betterproto.uint32_field(3)
    interact_gadget_list: List["InteractGadget"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CityBin(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    crystal_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScenePlayerLocationBin(betterproto.Message):
    cur_pos: "VectorBin" = betterproto.message_field(1)
    cur_rot: "VectorBin" = betterproto.message_field(2)
    last_valid_pos: "VectorBin" = betterproto.message_field(3)
    last_valid_rot: "VectorBin" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class EnvZoneInfoBin(betterproto.Message):
    last_refresh_time: int = betterproto.fixed32_field(1)
    animal_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneEnvAnimalCompBin(betterproto.Message):
    zone_info_map: Dict[int, "EnvZoneInfoBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class SceneWeatherInfoBin(betterproto.Message):
    height_area_id: int = betterproto.uint32_field(1)
    climate_type: int = betterproto.uint32_field(2)
    next_climate_time: int = betterproto.uint64_field(3)
    forcast_climate_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SceneClimateAreaInfoBin(betterproto.Message):
    climate_area_id: int = betterproto.uint32_field(1)
    json_climate_type: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SceneAllWeatherInfoBin(betterproto.Message):
    weather_info_list: List["SceneWeatherInfoBin"] = betterproto.message_field(1)
    closed_weather_area_list: List[int] = betterproto.uint32_field(2)
    climate_area_info_list: List["SceneClimateAreaInfoBin"] = betterproto.message_field(
        3
    )
    closed_climate_area_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BackupGroupBin(betterproto.Message):
    del_monster_list: List[int] = betterproto.uint32_field(1)
    variable_map: Dict[str, "GroupVariableBin"] = betterproto.map_field(
        2, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )
    revise_level: int = betterproto.uint32_field(3)
    last_refresh_time: int = betterproto.fixed32_field(4)


@dataclass(eq=False, repr=False)
class SceneBlockGroupCompBin(betterproto.Message):
    dead_group_list: List[int] = betterproto.uint32_field(1)
    backup_group_map: Dict[int, "BackupGroupBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    is_scene_group_all_dead: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SceneAreaCompBin(betterproto.Message):
    unlocked_area_list: List[int] = betterproto.uint32_field(1)
    area_map: Dict[int, "AreaBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    city_map: Dict[int, "CityBin"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class SceneEncounterCompBin(betterproto.Message):
    parent_quest_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ActivitySceneBin(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class SceneVehicleBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    cur_pos: "VectorBin" = betterproto.message_field(2)
    cur_rot: "VectorBin" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SceneTagOp(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    op_type: "SceneTagOpType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class WayPoint(betterproto.Message):
    point_id: int = betterproto.uint32_field(1)
    activate_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DungeonSceneBin(betterproto.Message):
    activated_way_point_list: List["WayPoint"] = betterproto.message_field(1)
    activated_slip_revive_list: List["WayPoint"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SceneBin(betterproto.Message):
    unlocked_point_list: List[int] = betterproto.uint32_field(1)
    unlocked_force_list: List[int] = betterproto.uint32_field(2)
    locked_point_list: List[int] = betterproto.uint32_field(3)
    all_weather_info: "SceneAllWeatherInfoBin" = betterproto.message_field(4)
    owner_player_location: "ScenePlayerLocationBin" = betterproto.message_field(5)
    block_group_bin: "SceneBlockGroupCompBin" = betterproto.message_field(6)
    env_animal_bin: "SceneEnvAnimalCompBin" = betterproto.message_field(7)
    area_comp_bin: "SceneAreaCompBin" = betterproto.message_field(8)
    encounter_comp_bin: "SceneEncounterCompBin" = betterproto.message_field(9)
    last_spring_recover_time_ms: int = betterproto.uint64_field(10)
    group_unlimit_point_list: List[int] = betterproto.uint32_field(11)
    interacted_to_be_explored_point_list: List[int] = betterproto.uint32_field(12)
    cur_spring_volume: float = betterproto.float_field(13)
    is_locked: bool = betterproto.bool_field(14)
    vehicle_list: List["SceneVehicleBin"] = betterproto.message_field(15)
    scene_tag_op_list: List["SceneTagOp"] = betterproto.message_field(16)
    hide_point_list: List[int] = betterproto.uint32_field(17)
    unhide_point_list: List[int] = betterproto.uint32_field(18)
    activity_scene_bin: "ActivitySceneBin" = betterproto.message_field(
        101, group="detail"
    )
    dungeon_scene_bin: "DungeonSceneBin" = betterproto.message_field(
        102, group="detail"
    )


@dataclass(eq=False, repr=False)
class OfflineOpTestOp(betterproto.Message):
    msg: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class OfflineOpFurnitureMakeHelp(betterproto.Message):
    player_name: str = betterproto.string_field(1)
    time: int = betterproto.fixed32_field(2)
    uid: int = betterproto.uint32_field(3)
    icon: int = betterproto.uint32_field(4)
    profile_picture_bin: "ProfilePictureBin" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class OfflineOpPlantFlowerActivityGiveFlower(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OfflineOpWinterCampActivityGiveItem(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    item_bin_list: List["ItemParamBin"] = betterproto.message_field(2)
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OfflineOpActivityGiveGift(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OfflineOpVintageActivityDividend(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OfflineOpBin(betterproto.Message):
    test_op: "OfflineOpTestOp" = betterproto.message_field(1, group="detail")
    furniture_make_help_op: "OfflineOpFurnitureMakeHelp" = betterproto.message_field(
        2, group="detail"
    )
    plant_flower_give_flower_op: "OfflineOpPlantFlowerActivityGiveFlower" = (
        betterproto.message_field(3, group="detail")
    )
    winter_camp_give_item_op: "OfflineOpWinterCampActivityGiveItem" = (
        betterproto.message_field(4, group="detail")
    )
    activity_give_gift_op: "OfflineOpActivityGiveGift" = betterproto.message_field(
        5, group="detail"
    )
    vintage_dividend_op: "OfflineOpVintageActivityDividend" = betterproto.message_field(
        6, group="detail"
    )


@dataclass(eq=False, repr=False)
class FurnitureMakeSlotsBin(betterproto.Message):
    make_id: int = betterproto.uint32_field(1)
    begin_time: int = betterproto.fixed32_field(2)
    dur_time: int = betterproto.uint32_field(3)
    accelerate_time: int = betterproto.fixed32_field(4)
    accelerate_count: int = betterproto.uint32_field(6)
    avatar_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class ProfilePictureBin(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CustomDungeonSettingBin(betterproto.Message):
    is_arrive_finish: bool = betterproto.bool_field(1)
    coin_limit: int = betterproto.uint32_field(2)
    time_limit: int = betterproto.uint32_field(3)
    is_forbid_skill: bool = betterproto.bool_field(4)
    open_room_list: List[int] = betterproto.uint32_field(5)
    start_room_id: int = betterproto.uint32_field(6)
    life_num: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CustomDungeonAbstractBin(betterproto.Message):
    finish_room_id: int = betterproto.uint32_field(1)
    total_coin_num: int = betterproto.uint32_field(2)
    first_publish_time: int = betterproto.uint32_field(3)
    last_publish_time: int = betterproto.uint32_field(4)
    brick_statistics_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class BlossomChestBin(betterproto.Message):
    blossom_chest_id: int = betterproto.uint32_field(1)
    drop_id: int = betterproto.uint32_field(2)
    dead_time: int = betterproto.fixed32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)
    remain_uid_list: List[int] = betterproto.uint32_field(5)
    item_limit_type: int = betterproto.uint32_field(6)
    refresh_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GadgetPlatformBin(betterproto.Message):
    route_id: int = betterproto.uint32_field(1)
    point_index: int = betterproto.int32_field(2)
    is_started: bool = betterproto.bool_field(3)
    point_id: int = betterproto.uint32_field(4)
    moving_platform_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BossChestBin(betterproto.Message):
    remain_uid_list: List[int] = betterproto.uint32_field(1)
    dead_time: int = betterproto.fixed32_field(2)
    dead_level: int = betterproto.uint32_field(3)
    qualify_uid_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChallengeRecordBin(betterproto.Message):
    challenge_index: int = betterproto.uint32_field(1)
    challenge_id: int = betterproto.uint32_field(2)
    challenge_record_type: int = betterproto.uint32_field(3)
    best_value: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BossDieInfoBin(betterproto.Message):
    surround_uid_list: List[int] = betterproto.uint32_field(1)
    dead_time: int = betterproto.fixed32_field(2)
    dead_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GroupTriggerBin(betterproto.Message):
    trigger_count: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GeneralRewardBin(betterproto.Message):
    drop_id: int = betterproto.uint32_field(1)
    reward_id: int = betterproto.uint32_field(2)
    drop_num: int = betterproto.uint32_field(3)
    drop_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GadgetGeneralRewardBin(betterproto.Message):
    resin: int = betterproto.uint32_field(2)
    dead_time: int = betterproto.uint32_field(3)
    remain_uid_list: List[int] = betterproto.uint32_field(5)
    qualify_info_map: Dict[int, "GeneralRewardBin"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    destroy_cd: int = betterproto.uint32_field(8)
    item_limit_type: int = betterproto.uint32_field(9)
    item_param: "ItemParamBin" = betterproto.message_field(10)
    open_state_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class FishStockBin(betterproto.Message):
    stock_type: int = betterproto.uint32_field(1)
    gen_fish_num: int = betterproto.uint32_field(2)
    max_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GadgetFishPoolBin(betterproto.Message):
    fish_stock_list: List["FishStockBin"] = betterproto.message_field(1)
    today_fish_num: int = betterproto.uint32_field(2)
    last_refresh_today_fish_time: int = betterproto.uint32_field(3)
    cached_fish_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class CustomGadgetNodeInfoBin(betterproto.Message):
    parent_index: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    slot_identifier: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class CustomGadgetTreeInfoBin(betterproto.Message):
    node_list: List["CustomGadgetNodeInfoBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GadgetWorktopBin(betterproto.Message):
    option_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GroupGadgetBin(betterproto.Message):
    gadget_state: int = betterproto.uint32_field(1)
    is_enable_interact: bool = betterproto.bool_field(2)
    gadget_talk_state: int = betterproto.uint32_field(3)
    platform: "GadgetPlatformBin" = betterproto.message_field(101, group="component")
    boss_chest: "BossChestBin" = betterproto.message_field(102, group="component")
    blossom_chest: "BlossomChestBin" = betterproto.message_field(103, group="component")
    general_reward: "GadgetGeneralRewardBin" = betterproto.message_field(
        104, group="component"
    )
    fish_pool: "GadgetFishPoolBin" = betterproto.message_field(105, group="component")
    custom_gadget_tree_info: "CustomGadgetTreeInfoBin" = betterproto.message_field(
        106, group="component"
    )
    worktop: "GadgetWorktopBin" = betterproto.message_field(107, group="component")


@dataclass(eq=False, repr=False)
class GroupMonsterBin(betterproto.Message):
    dropped_hp_percent: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GroupGatherBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    last_refresh_time: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class GroupRefreshTimeBin(betterproto.Message):
    save_type: int = betterproto.uint32_field(1)
    last_refresh_time: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class GroupBin(betterproto.Message):
    monster_map: Dict[int, "GroupMonsterBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    del_monster_list: List[int] = betterproto.uint32_field(2)
    gadget_map: Dict[int, "GroupGadgetBin"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    del_gadget_list: List[int] = betterproto.uint32_field(4)
    trigger_map: Dict[str, "GroupTriggerBin"] = betterproto.map_field(
        5, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )
    variable_map: Dict[str, "GroupVariableBin"] = betterproto.map_field(
        6, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )
    suite_index: int = betterproto.uint32_field(7)
    show_cutscene_chest_list: List[int] = betterproto.uint32_field(8)
    challenge_record_list: List["ChallengeRecordBin"] = betterproto.message_field(9)
    revise_level: int = betterproto.uint32_field(10)
    last_refresh_time: int = betterproto.fixed32_field(11)
    target_suite_index: int = betterproto.uint32_field(12)
    boss_die_info_map: Dict[int, "BossDieInfoBin"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    gather_refresh_time_list: List["GroupGatherBin"] = betterproto.message_field(14)
    is_replaceable: bool = betterproto.bool_field(15)
    replaceable_version: int = betterproto.uint32_field(16)
    trigger_list: List["GroupTriggerBin"] = betterproto.message_field(17)
    group_refresh_list: List["GroupRefreshTimeBin"] = betterproto.message_field(18)
    variable_config_id_bin_list: List[
        "GroupVariableConfigIdBin"
    ] = betterproto.message_field(19)


@dataclass(eq=False, repr=False)
class BlockBin(betterproto.Message):
    group_map: Dict[int, bytes] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_BYTES
    )


@dataclass(eq=False, repr=False)
class HomeBasicCompBin(betterproto.Message):
    trans_no_count: int = betterproto.uint64_field(1)
    exp: int = betterproto.uint64_field(4)
    level: int = betterproto.uint32_field(5)
    owner_nick_name: str = betterproto.string_field(6)
    total_home_time: int = betterproto.uint32_field(7)
    home_time_ms: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class HomeFurnitureBin(betterproto.Message):
    furniture_id: int = betterproto.uint32_field(1)
    spawn_pos: "VectorBin" = betterproto.message_field(3)
    spawn_rot: "VectorBin" = betterproto.message_field(4)
    parent_furniture_index: int = betterproto.int32_field(7)
    guid: int = betterproto.uint32_field(8)
    version: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class HomeFurnitureSuiteBin(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)
    spawn_pos: "VectorBin" = betterproto.message_field(2)
    included_furniture_index_list: List[int] = betterproto.int32_field(3)
    guid: int = betterproto.uint32_field(4)
    is_allow_summon: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class HomeNpcBin(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    spawn_pos: "VectorBin" = betterproto.message_field(2)
    spawn_rot: "VectorBin" = betterproto.message_field(3)
    costume_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeAnimalBin(betterproto.Message):
    furniture_id: int = betterproto.uint32_field(1)
    spawn_pos: "VectorBin" = betterproto.message_field(2)
    spawn_rot: "VectorBin" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeBlockSubFieldBin(betterproto.Message):
    spawn_pos: "VectorBin" = betterproto.message_field(1)
    spawn_rot: "VectorBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeBlockFieldBin(betterproto.Message):
    guid: int = betterproto.uint32_field(1)
    furniture_id: int = betterproto.uint32_field(2)
    spawn_pos: "VectorBin" = betterproto.message_field(3)
    spawn_rot: "VectorBin" = betterproto.message_field(4)
    sub_field_list: List["HomeBlockSubFieldBin"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomeFurnitureGroupBin(betterproto.Message):
    group_furniture_index: int = betterproto.uint32_field(1)
    virtual_furniure_list: List["HomeFurnitureBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeFurnitureCustomSuiteBin(betterproto.Message):
    spawn_pos: "VectorBin" = betterproto.message_field(1)
    included_furniture_index_list: List[int] = betterproto.int32_field(2)
    guid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeBlockBin(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    persistent_furniture_list: List["HomeFurnitureBin"] = betterproto.message_field(2)
    deploy_furniure_list: List["HomeFurnitureBin"] = betterproto.message_field(3)
    deploy_npc_list: List["HomeNpcBin"] = betterproto.message_field(4)
    furniture_suite_list: List["HomeFurnitureSuiteBin"] = betterproto.message_field(5)
    deploy_animal_list: List["HomeAnimalBin"] = betterproto.message_field(6)
    is_unlocked: bool = betterproto.bool_field(7)
    deploy_field_list: List["HomeBlockFieldBin"] = betterproto.message_field(8)
    deploy_furniture_group_list: List[
        "HomeFurnitureGroupBin"
    ] = betterproto.message_field(9)
    furniture_custom_suite_list: List[
        "HomeFurnitureCustomSuiteBin"
    ] = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class HomeSceneBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    scene_bin: "SceneBin" = betterproto.message_field(2)
    block_bin_list: List["HomeBlockBin"] = betterproto.message_field(3)
    is_set_born_pos: bool = betterproto.bool_field(4)
    born_pos: "VectorBin" = betterproto.message_field(5)
    born_rot: "VectorBin" = betterproto.message_field(6)
    door_list: List["HomeFurnitureBin"] = betterproto.message_field(7)
    stair_list: List["HomeFurnitureBin"] = betterproto.message_field(8)
    main_house: "HomeFurnitureBin" = betterproto.message_field(9)
    djinn_pos: "VectorBin" = betterproto.message_field(10)
    tmp_version: int = betterproto.uint32_field(12)
    save_time: int = betterproto.fixed32_field(13)
    bgm_id: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class HomeModuleBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    cur_room_scene_id: int = betterproto.uint32_field(2)
    scene_bin_list: List["HomeSceneBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeSceneCompBin(betterproto.Message):
    cur_module_id: int = betterproto.uint32_field(1)
    module_bin_list: List["HomeModuleBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeOfflineMsgExeBin(betterproto.Message):
    msg: "HomeOfflineMsgBin" = betterproto.message_field(1)
    exe_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeOfflineMsgCompBin(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    next_offline_msg_list: List["HomeOfflineMsgExeBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeFurnitureMakeBin(betterproto.Message):
    furniture_make_slots_bin_list: List[
        "FurnitureMakeSlotsBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeLimitedShopPoolRecordBin(betterproto.Message):
    pool_id: int = betterproto.uint32_field(1)
    goods_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeLimitedShopGoodsInfoBin(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    buy_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeLimitedShopNpcPosBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(4)
    block_id: int = betterproto.uint32_field(5)
    index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeLimitedShopBin(betterproto.Message):
    last_refresh_time: int = betterproto.uint32_field(1)
    pool_record_bin_list: List[
        "HomeLimitedShopPoolRecordBin"
    ] = betterproto.message_field(3)
    goods_info_bin_list: List[
        "HomeLimitedShopGoodsInfoBin"
    ] = betterproto.message_field(4)
    npc_pos_bin_list: List["HomeLimitedShopNpcPosBin"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomePlantSubFieldBin(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    seed_id: int = betterproto.uint32_field(2)
    grow_time: int = betterproto.uint32_field(3)
    last_update_time: int = betterproto.uint32_field(4)
    gather_index_list: List[int] = betterproto.uint32_field(5)
    home_gather_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomePlantFieldBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint32_field(3)
    furniture_id: int = betterproto.uint32_field(4)
    sub_field_bin_list: List["HomePlantSubFieldBin"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class HomePlantBin(betterproto.Message):
    field_bin_list: List["HomePlantFieldBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeFishpondFarmingBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    fishpond_guid: int = betterproto.uint32_field(2)
    furniture_id: int = betterproto.uint32_field(3)
    fish_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeScenePointFishFarmingBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    local_entity_id: int = betterproto.uint32_field(2)
    fish_id_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeModuleFishFarmingBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    fishpond_farming_bin_list: List[
        "HomeFishpondFarmingBin"
    ] = betterproto.message_field(2)
    scene_point_fish_farming_bin_list: List[
        "HomeScenePointFishFarmingBin"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeFishFarmingBin(betterproto.Message):
    module_fish_farming_bin_list: List[
        "HomeModuleFishFarmingBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeCustomFurnitureNodeInfoBin(betterproto.Message):
    parent_index: int = betterproto.int32_field(1)
    furniture_id: int = betterproto.uint32_field(2)
    slot_identifier: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class HomeOneCustomFurnitureBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint32_field(2)
    furniture_id: int = betterproto.uint32_field(3)
    sub_furniture_list: List[
        "HomeCustomFurnitureNodeInfoBin"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HomeModuleCustomFurnitureBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    custom_furniture_bin_list: List[
        "HomeOneCustomFurnitureBin"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeCustomFurnitureBin(betterproto.Message):
    module_custom_furniture_bin_list: List[
        "HomeModuleCustomFurnitureBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeOnePictureFrameBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    guid: int = betterproto.uint32_field(2)
    furniture_id: int = betterproto.uint32_field(3)
    picture_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeModulePictureFrameBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    picture_frame_bin_list: List["HomeOnePictureFrameBin"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class HomePictureFrameBin(betterproto.Message):
    module_picture_frame_bin_list: List[
        "HomeModulePictureFrameBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeGroupPlayerInfoBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    player_level: int = betterproto.uint32_field(3)
    profile_picture: "ProfilePictureBin" = betterproto.message_field(4)
    online_id: str = betterproto.string_field(5)
    psn_id: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class HomeRacingGalleryRecordBin(betterproto.Message):
    use_time: int = betterproto.uint32_field(1)
    player_info: "HomeGroupPlayerInfoBin" = betterproto.message_field(2)
    timestamp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeRacingRecordBin(betterproto.Message):
    record_list: List["HomeRacingGalleryRecordBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeBalloonGalleryRecordBin(betterproto.Message):
    score: int = betterproto.uint32_field(1)
    hit_count: int = betterproto.uint32_field(2)
    player_info: "HomeGroupPlayerInfoBin" = betterproto.message_field(3)
    timestamp: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HomeBalloonRecordBin(betterproto.Message):
    record_list: List["HomeBalloonGalleryRecordBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeStakePlayRecordBin(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    engaged_player_info_list: List[
        "HomeGroupPlayerInfoBin"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeStakeRecordBin(betterproto.Message):
    record_list: List["HomeStakePlayRecordBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeSeekFurniturePlayerScoreBin(betterproto.Message):
    player_info: "HomeGroupPlayerInfoBin" = betterproto.message_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureOneRecordBin(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    engaged_player_score_list: List[
        "HomeSeekFurniturePlayerScoreBin"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeSeekFurnitureAllRecordBin(betterproto.Message):
    record_list: List["HomeSeekFurnitureOneRecordBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HomeGroupRecordBin(betterproto.Message):
    racing_gallery_info_bin: "HomeRacingRecordBin" = betterproto.message_field(
        11, group="detail"
    )
    balloon_gallery_info_bin: "HomeBalloonRecordBin" = betterproto.message_field(
        12, group="detail"
    )
    stake_play_info_bin: "HomeStakeRecordBin" = betterproto.message_field(
        13, group="detail"
    )
    seek_furniture_play_info_bin: "HomeSeekFurnitureAllRecordBin" = (
        betterproto.message_field(14, group="detail")
    )


@dataclass(eq=False, repr=False)
class HomeGroupRecordCompBin(betterproto.Message):
    group_record_map_bin: Dict[int, "HomeGroupRecordBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class HomeBlueprintCompBin(betterproto.Message):
    is_allow_friend_copy: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class HomeDataBin(betterproto.Message):
    basic_bin: "HomeBasicCompBin" = betterproto.message_field(1)
    scene_bin: "HomeSceneCompBin" = betterproto.message_field(2)
    offline_msg_bin: "HomeOfflineMsgCompBin" = betterproto.message_field(3)
    furniture_make_bin: "HomeFurnitureMakeBin" = betterproto.message_field(4)
    limited_shop_bin: "HomeLimitedShopBin" = betterproto.message_field(5)
    plant_bin: "HomePlantBin" = betterproto.message_field(6)
    fish_farming_bin: "HomeFishFarmingBin" = betterproto.message_field(7)
    custom_furniture_bin: "HomeCustomFurnitureBin" = betterproto.message_field(8)
    picture_frame_bin: "HomePictureFrameBin" = betterproto.message_field(9)
    group_record_bin: "HomeGroupRecordCompBin" = betterproto.message_field(10)
    blueprint_bin: "HomeBlueprintCompBin" = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class HomeData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    data_version: int = betterproto.uint32_field(2)
    bin_data: bytes = betterproto.bytes_field(3)
    block_end_time: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class PlayerBasicCompBin(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    nickname: str = betterproto.string_field(3)
    total_game_time: int = betterproto.uint32_field(4)
    trans_no_count: int = betterproto.uint64_field(5)
    is_weather_locked: bool = betterproto.bool_field(6)
    is_game_time_locked: bool = betterproto.bool_field(7)
    persist_stamina_limit: float = betterproto.float_field(8)
    cur_persist_stamina: float = betterproto.float_field(9)
    cur_temporary_stamina: float = betterproto.float_field(10)
    open_state_map: Dict[int, int] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    player_time_ms: int = betterproto.uint64_field(12)
    last_login_time: int = betterproto.fixed32_field(13)
    register_time: int = betterproto.fixed32_field(14)
    total_login_days: int = betterproto.uint32_field(15)
    update_login_days_time: int = betterproto.uint32_field(16)
    reward_taken_level_list: List[int] = betterproto.uint32_field(17)
    language_type: int = betterproto.uint32_field(18)
    client_app_version: str = betterproto.string_field(19)
    client_device_info: str = betterproto.string_field(20)
    client_system_version: str = betterproto.string_field(21)
    is_guest: bool = betterproto.bool_field(22)
    online_time: int = betterproto.uint32_field(23)
    is_proficient_player: bool = betterproto.bool_field(24)
    set_language_tag: int = betterproto.uint32_field(26)
    head_image_avatar_id: int = betterproto.uint32_field(27)
    guid_seq_id: int = betterproto.uint32_field(28)
    is_rebate_mail_sent: bool = betterproto.bool_field(29)
    is_rebate_mail_received: bool = betterproto.bool_field(30)
    register_cps: str = betterproto.string_field(31)
    cur_json_climate_type: int = betterproto.uint32_field(32)
    cur_climate_meter: float = betterproto.float_field(33)
    last_logout_time: int = betterproto.fixed32_field(34)
    data_version: int = betterproto.uint32_field(35)
    last_daily_refresh_time: int = betterproto.fixed32_field(36)
    is_auto_unlock_specific_equip: bool = betterproto.bool_field(37)
    profile_picture_costume_id: int = betterproto.uint32_field(38)
    online_id: str = betterproto.string_field(39)
    psn_id: str = betterproto.string_field(40)
    last_login_platform: int = betterproto.uint32_field(41)
    pivot_client_time: float = betterproto.double_field(42)
    pivot_unix_time: float = betterproto.double_field(43)
    client_total_tick_time: float = betterproto.double_field(44)
    player_stat_id: int = betterproto.uint64_field(45)
    nickname_audit_bin: "ContentAuditBin" = betterproto.message_field(46)


@dataclass(eq=False, repr=False)
class AvatarSkillBin(betterproto.Message):
    pass_cd_time: int = betterproto.uint32_field(1)
    full_cd_time_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarBuffBin(betterproto.Message):
    left_time: int = betterproto.uint32_field(1)
    buff_uid: int = betterproto.uint32_field(2)
    buff_type: int = betterproto.uint32_field(3)
    buff_id: int = betterproto.uint32_field(5)
    onadded_avatars_list: List[int] = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class AvatarFetterBin(betterproto.Message):
    level: int = betterproto.uint32_field(3)
    exp: int = betterproto.uint32_field(4)
    rewarded_fetter_level_list: List[int] = betterproto.uint32_field(6)
    is_login_on_birthday: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class AvatarExpeditionBin(betterproto.Message):
    state: int = betterproto.uint32_field(1)
    exp_id: int = betterproto.uint32_field(2)
    hour_time: int = betterproto.uint32_field(3)
    start_time: int = betterproto.fixed32_field(4)
    transaction: int = betterproto.uint64_field(5)
    shorten_ratio: float = betterproto.float_field(6)


@dataclass(eq=False, repr=False)
class AvatarSkillDepotBin(betterproto.Message):
    talent_id_list: List[int] = betterproto.uint32_field(1)
    core_proud_skill_level: int = betterproto.uint32_field(2)
    inherent_proud_skill_list: List[int] = betterproto.uint32_field(3)
    skill_level_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class AvatarEquipAffixBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    cd: int = betterproto.uint32_field(2)
    pass_cd_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AvatarExtraPropBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AvatarBin(betterproto.Message):
    avatar_type: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.uint64_field(3)
    level: int = betterproto.uint32_field(4)
    life_state: int = betterproto.uint32_field(5)
    cur_hp: float = betterproto.float_field(6)
    cur_elem_energy: float = betterproto.float_field(7)
    promote_level: int = betterproto.uint32_field(8)
    skill_depot_id: int = betterproto.uint32_field(9)
    skill_map: Dict[int, "AvatarSkillBin"] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    buff_map: Dict[int, "AvatarBuffBin"] = betterproto.map_field(
        11, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    depot_map: Dict[int, "AvatarSkillDepotBin"] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    equip_list: List["ItemBin"] = betterproto.message_field(13)
    satiation_val: float = betterproto.float_field(14)
    satiation_penalty_time: float = betterproto.float_field(15)
    flycloak_id: int = betterproto.uint32_field(16)
    avatar_equip_affix_list: List["AvatarEquipAffixBin"] = betterproto.message_field(17)
    born_time: int = betterproto.uint32_field(18)
    buff_list: List["AvatarBuffBin"] = betterproto.message_field(19)
    costume_id: int = betterproto.uint32_field(20)
    extra_prop_list: List["AvatarExtraPropBin"] = betterproto.message_field(21)
    formal_avatar: "FormalAvatarBin" = betterproto.message_field(101, group="detail")
    trial_avatar: "TrialAvatarBin" = betterproto.message_field(102, group="detail")
    mirror_avatar: "MirrorAvatarBin" = betterproto.message_field(103, group="detail")


@dataclass(eq=False, repr=False)
class AvatarSnapshotBin(betterproto.Message):
    avatar_snapshot_type: int = betterproto.uint32_field(1)
    avatar_bin: "AvatarBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class TrialAvatarGrantRecordBin(betterproto.Message):
    grant_reason: int = betterproto.uint32_field(1)
    from_parent_quest_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FormalAvatarBin(betterproto.Message):
    exp: int = betterproto.uint32_field(1)
    equip_guid_list: List[int] = betterproto.uint64_field(2)
    fetter: "AvatarFetterBin" = betterproto.message_field(3)
    expedition_data: "AvatarExpeditionBin" = betterproto.message_field(4)
    avatar_repeat_count: int = betterproto.uint32_field(5)
    is_focus: bool = betterproto.bool_field(6)
    taken_promote_reward_level_list: List[int] = betterproto.uint32_field(7)
    costume_id: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class TrialAvatarBin(betterproto.Message):
    trial_avatar_id: int = betterproto.uint32_field(1)
    grant_record_bin: "TrialAvatarGrantRecordBin" = betterproto.message_field(2)
    is_inherit: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class MirrorAvatarBin(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class AvatarTeamBin(betterproto.Message):
    avatar_guid_list: List[int] = betterproto.uint64_field(1)
    team_name: str = betterproto.string_field(2)
    last_cur_avatar_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class PlayerAvatarCompBin(betterproto.Message):
    avatar_list: List["AvatarBin"] = betterproto.message_field(1)
    cur_avatar_guid: int = betterproto.uint64_field(2)
    pb_only_cur_pos: "VectorBin" = betterproto.message_field(3)
    pb_only_cur_rot: "VectorBin" = betterproto.message_field(4)
    team_map: Dict[int, "AvatarTeamBin"] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    cur_team_id: int = betterproto.uint32_field(6)
    last_change_avatar_time: int = betterproto.uint64_field(7)
    is_spring_auto_use: bool = betterproto.bool_field(8)
    spring_auto_use_percent: int = betterproto.uint32_field(9)
    last_backgroud_avatar_recover_time: int = betterproto.fixed32_field(10)
    cur_spring_volume: int = betterproto.uint32_field(11)
    is_flyable: bool = betterproto.bool_field(12)
    is_transferable: bool = betterproto.bool_field(13)
    last_avatar_guid: int = betterproto.uint32_field(14)
    choose_avatar_guid: int = betterproto.uint64_field(15)
    die_type: int = betterproto.uint32_field(16)
    temp_avatar_guid_list: List[int] = betterproto.uint64_field(17)
    avatar_team_buff_map: Dict[int, "AvatarBuffBin"] = betterproto.map_field(
        18, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    last_server_buff_uid: int = betterproto.uint32_field(19)
    total_expedition_num: int = betterproto.uint32_field(20)
    owned_flycloak_list: List[int] = betterproto.uint32_field(21)
    avatar_team_buff_list: List["AvatarBuffBin"] = betterproto.message_field(22)
    owned_costume_id_list: List[int] = betterproto.uint32_field(23)
    avatar_snapshot_list: List["AvatarSnapshotBin"] = betterproto.message_field(24)
    backup_team_id_order_list: List[int] = betterproto.uint32_field(25)


@dataclass(eq=False, repr=False)
class WorldBin(betterproto.Message):
    scene_map: Dict[int, "SceneBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    level: int = betterproto.uint32_field(2)
    last_adjust_time: int = betterproto.uint32_field(3)
    adjust_level: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GroupProductBin(betterproto.Message):
    gadget_one_off_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    monster_one_off_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SceneProductBin(betterproto.Message):
    group_product_map: Dict[int, "GroupProductBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class DungeonProductBin(betterproto.Message):
    scene_product_map: Dict[int, "SceneProductBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class MapMarkPointBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    pos: "VectorBin" = betterproto.message_field(3)
    point_type: int = betterproto.uint32_field(4)
    monster_id: int = betterproto.uint32_field(5)
    from_type: int = betterproto.uint32_field(6)
    quest_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class GroupBossChestBin(betterproto.Message):
    boss_chest_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SceneBossChestBin(betterproto.Message):
    group_boss_chest_map: Dict[int, "GroupBossChestBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    take_time: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class SubfieldDropBin(betterproto.Message):
    drop_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MonsterBeKilledNumBin(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    be_killed_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MapAreaInfoBin(betterproto.Message):
    map_area_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MonsterBeCapturedNumBin(betterproto.Message):
    monster_id: int = betterproto.uint32_field(1)
    be_captured_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LevelTagChangeBin(betterproto.Message):
    level_tag_id: int = betterproto.uint32_field(1)
    change_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LevelTagBin(betterproto.Message):
    level_tag_change_list: List["LevelTagChangeBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PersistentDungeonSceneBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    dungeon_scene_bin: "SceneBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DeshretObeliskBin(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)
    config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerSceneCompBin(betterproto.Message):
    world: "WorldBin" = betterproto.message_field(1)
    cur_scene_owner_uid: int = betterproto.uint32_field(2)
    my_prev_scene_id: int = betterproto.uint32_field(3)
    my_prev_pos: "VectorBin" = betterproto.message_field(4)
    my_prev_rot: "VectorBin" = betterproto.message_field(5)
    my_cur_scene_id: int = betterproto.uint32_field(6)
    monster_seen_list: List[int] = betterproto.uint32_field(7)
    mark_point_list: List["MapMarkPointBin"] = betterproto.message_field(8)
    world_product_map: Dict[int, "SceneProductBin"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    trivial_entity_drop_num: int = betterproto.uint32_field(10)
    trivial_entity_drop_time: int = betterproto.fixed32_field(11)
    scene_boss_chest_map: Dict[int, "SceneBossChestBin"] = betterproto.map_field(
        12, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    subfield_drop_map: Dict[int, "SubfieldDropBin"] = betterproto.map_field(
        13, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    subfield_drop_time: int = betterproto.fixed32_field(14)
    my_cur_area_id: int = betterproto.uint32_field(15)
    dungeon_product_map: Dict[int, "DungeonProductBin"] = betterproto.map_field(
        16, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    chest_open_num_map: Dict[int, int] = betterproto.map_field(
        17, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    gadget_interact_num_map: Dict[int, int] = betterproto.map_field(
        18, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    total_boss_chest_take_num: int = betterproto.uint32_field(19)
    daily_gadget_drop_category_count_map: Dict[str, int] = betterproto.map_field(
        20, betterproto.TYPE_STRING, betterproto.TYPE_UINT32
    )
    last_refresh_daily_gadget_drop_category_count_map_time: int = (
        betterproto.uint32_field(21)
    )
    monster_killed_num_list: List["MonsterBeKilledNumBin"] = betterproto.message_field(
        22
    )
    my_cur_player_scene_id: int = betterproto.uint32_field(23)
    my_cur_home_scene_id: int = betterproto.uint32_field(24)
    obtained_wood_type_list: List[int] = betterproto.uint32_field(25)
    gadget_chain_level_map: Dict[int, int] = betterproto.map_field(
        26, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    weekly_boss_resin_discount_num: int = betterproto.uint32_field(27)
    last_weekly_boss_resin_discount_time: int = betterproto.uint32_field(28)
    map_area_info_list: List["MapAreaInfoBin"] = betterproto.message_field(29)
    monster_captured_num_list: List[
        "MonsterBeCapturedNumBin"
    ] = betterproto.message_field(30)
    level_tag_bin: "LevelTagBin" = betterproto.message_field(31)
    persistent_dungeon_scene_bin_list: List[
        "PersistentDungeonSceneBin"
    ] = betterproto.message_field(32)
    last_area_play_type: int = betterproto.uint32_field(33)
    deshret_obelisk_bin: "DeshretObeliskBin" = betterproto.message_field(34)


@dataclass(eq=False, repr=False)
class QuestContentBin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QuestTalkRecordBin(betterproto.Message):
    talk_id: int = betterproto.uint32_field(1)
    talk_time: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class QuestBin(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    finish_progress_list: List[int] = betterproto.uint32_field(3)
    fail_progress_list: List[int] = betterproto.uint32_field(4)
    start_time: int = betterproto.uint32_field(5)
    talk_history_list: List["QuestTalkRecordBin"] = betterproto.message_field(6)
    start_game_time: int = betterproto.fixed32_field(7)
    accept_time: int = betterproto.fixed32_field(8)


@dataclass(eq=False, repr=False)
class PlayerQuestBin(betterproto.Message):
    quest_list: List["QuestBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ParentQuestRandomInfoBin(betterproto.Message):
    entrance_id: int = betterproto.uint32_field(1)
    template_id: int = betterproto.uint32_field(2)
    factor_list: List[int] = betterproto.uint32_field(3)
    quest_id_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ParentQuestInferenceWordBin(betterproto.Message):
    word_id: int = betterproto.uint32_field(1)
    is_interpret: bool = betterproto.bool_field(2)
    is_associate: bool = betterproto.bool_field(3)
    is_submit: bool = betterproto.bool_field(4)
    unlock_by_word_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ParentQuestBin(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(1)
    total_finish_count: int = betterproto.uint32_field(2)
    today_finish_count: int = betterproto.uint32_field(3)
    last_finish_time: int = betterproto.fixed32_field(4)
    child_quest_state_list: List["Uint32PairBin"] = betterproto.message_field(5)
    is_random: bool = betterproto.bool_field(6)
    random_info: "ParentQuestRandomInfoBin" = betterproto.message_field(7)
    accept_time: int = betterproto.fixed32_field(9)
    quest_var: List[int] = betterproto.int32_field(10)
    reward_index: int = betterproto.uint32_field(11)
    state: int = betterproto.uint32_field(12)
    time_var_list: List["Uint32PairBin"] = betterproto.message_field(13)
    unlock_inference_word_list: List[
        "ParentQuestInferenceWordBin"
    ] = betterproto.message_field(14)
    unlock_inference_conclusion_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class PlayerParentQuestBin(betterproto.Message):
    parent_quest_list: List["ParentQuestBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ChapterBin(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    chapter_state: int = betterproto.uint32_field(2)
    is_notify_sent: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PlayerChapterBin(betterproto.Message):
    chapter_list: List["ChapterBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class QuestGlobalVarBin(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class WorldQuestBin(betterproto.Message):
    parent_quest_id: int = betterproto.uint32_field(1)
    linked_flow_group_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerQuestCompBin(betterproto.Message):
    quest_bin: "PlayerQuestBin" = betterproto.message_field(1)
    parent_quest_bin: "PlayerParentQuestBin" = betterproto.message_field(2)
    last_random_parent_quest_id: int = betterproto.uint32_field(3)
    last_random_quest_id: int = betterproto.uint32_field(4)
    last_dungeon_settle_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    chapter_bin: "PlayerChapterBin" = betterproto.message_field(6)
    quest_global_var_list: List["QuestGlobalVarBin"] = betterproto.message_field(7)
    pre_open_chapter_id_list: List[int] = betterproto.uint32_field(8)
    world_quest_bin_list: List["WorldQuestBin"] = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class EquipBin(betterproto.Message):
    is_locked: bool = betterproto.bool_field(1)
    reliquary: "ReliquaryBin" = betterproto.message_field(101, group="detail")
    weapon: "WeaponBin" = betterproto.message_field(102, group="detail")


@dataclass(eq=False, repr=False)
class MaterialDeleteBin(betterproto.Message):
    delete_time_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MaterialBin(betterproto.Message):
    count: int = betterproto.uint32_field(1)
    delete_bin: "MaterialDeleteBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FurnitureBin(betterproto.Message):
    count: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ItemBin(betterproto.Message):
    item_type: int = betterproto.uint32_field(1)
    item_id: int = betterproto.uint32_field(2)
    guid: int = betterproto.fixed64_field(3)
    material: "MaterialBin" = betterproto.message_field(101, group="detail")
    equip: "EquipBin" = betterproto.message_field(102, group="detail")
    furniture: "FurnitureBin" = betterproto.message_field(103, group="detail")


@dataclass(eq=False, repr=False)
class PackItemStoreBin(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ItemStoreBin(betterproto.Message):
    item_list: List["ItemBin"] = betterproto.message_field(1)
    is_material_item_num_alarmed: bool = betterproto.bool_field(2)
    pack_store: "PackItemStoreBin" = betterproto.message_field(101, group="ext")


@dataclass(eq=False, repr=False)
class AutoRecoverItemBin(betterproto.Message):
    value: int = betterproto.uint32_field(1)
    bought_num: int = betterproto.uint32_field(3)
    last_bought_time: int = betterproto.fixed32_field(4)
    next_refresh_time: int = betterproto.fixed32_field(5)


@dataclass(eq=False, repr=False)
class ItemLimitCountRecordBin(betterproto.Message):
    item_type: int = betterproto.uint32_field(1)
    index_value: int = betterproto.uint32_field(2)
    item_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ItemLimitRecordBin(betterproto.Message):
    item_limit_type: int = betterproto.uint32_field(1)
    last_refresh_time: int = betterproto.fixed32_field(2)
    item_limit_count_record_list: List[
        "ItemLimitCountRecordBin"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MaterialDeleteReturnRecordBin(betterproto.Message):
    delete_material_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    return_item_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class OutputControlRecordBin(betterproto.Message):
    last_refresh_time: int = betterproto.fixed32_field(1)
    daily_count_list: List["Uint32PairBin"] = betterproto.message_field(2)
    total_count_list: List["Uint32PairBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ShopGoodsOutputRecordBin(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    last_record_time: int = betterproto.fixed32_field(2)
    buy_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ShopOutputRecordBin(betterproto.Message):
    shop_goods_output_record_list: List[
        "ShopGoodsOutputRecordBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SingleBonusRecordBin(betterproto.Message):
    last_refresh_time: int = betterproto.fixed32_field(1)
    config_id: int = betterproto.uint32_field(2)
    bonus_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BonusRecordBin(betterproto.Message):
    bonus_source_type: int = betterproto.uint32_field(1)
    single_bonus_record_list: List["SingleBonusRecordBin"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class ItemLimitRefreshRecordBin(betterproto.Message):
    item_limit_refresh_type: int = betterproto.uint32_field(1)
    last_refresh_time: int = betterproto.fixed32_field(2)
    item_limit_count_record_list: List[
        "ItemLimitCountRecordBin"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReliquaryLevelupNumRecordBin(betterproto.Message):
    rank_level: int = betterproto.uint32_field(1)
    reliquary_levelup_num_list: List["Uint32PairBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class EquipLevelupRecordBin(betterproto.Message):
    weapon_levelup_num_list: List["Uint32PairBin"] = betterproto.message_field(1)
    weapon_promote_levelup_num_list: List["Uint32PairBin"] = betterproto.message_field(
        2
    )
    rank_reliquary_levelup_list: List[
        "ReliquaryLevelupNumRecordBin"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReliquarySuitBin(betterproto.Message):
    reliquary_suit_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    reliquary_type_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ActivityOutputIndexRecordBin(betterproto.Message):
    output_control_type: int = betterproto.uint32_field(1)
    activity_count_list: List["Uint32PairBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ActivityOutputControlRecordBin(betterproto.Message):
    activity_type: int = betterproto.uint32_field(1)
    last_refresh_time: int = betterproto.fixed32_field(2)
    activity_output_index_record_list: List[
        "ActivityOutputIndexRecordBin"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ReliquaryMainPropGuaranteeDataBin(betterproto.Message):
    main_prop_id: int = betterproto.uint32_field(1)
    miss_count: int = betterproto.uint32_field(2)
    guarantee_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ReliquaryGuaranteeDepotBin(betterproto.Message):
    guarantee_depot_id: int = betterproto.uint32_field(1)
    main_prop_guarantee_data_list: List[
        "ReliquaryMainPropGuaranteeDataBin"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerItemCompBin(betterproto.Message):
    pack_store: "ItemStoreBin" = betterproto.message_field(1)
    history_item_list: List[int] = betterproto.uint32_field(2)
    hcoin: int = betterproto.uint32_field(3)
    scoin: int = betterproto.uint32_field(4)
    item_cd_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT64
    )
    resin_record: "AutoRecoverItemBin" = betterproto.message_field(6)
    item_limit_record_list: List["ItemLimitRecordBin"] = betterproto.message_field(7)
    item_total_obtain_count_list: List["Uint32PairBin"] = betterproto.message_field(8)
    material_delete_return_record: "MaterialDeleteReturnRecordBin" = (
        betterproto.message_field(9)
    )
    output_control_record_map: Dict[
        int, "OutputControlRecordBin"
    ] = betterproto.map_field(10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    wait_sub_hcoin: int = betterproto.uint32_field(11)
    wait_sub_scoin: int = betterproto.uint32_field(12)
    item_limit_refresh_record_list: List[
        "ItemLimitRefreshRecordBin"
    ] = betterproto.message_field(13)
    equip_levelup_record_bin: "EquipLevelupRecordBin" = betterproto.message_field(14)
    mcoin: int = betterproto.uint32_field(15)
    wait_sub_mcoin: int = betterproto.uint32_field(16)
    legendary_key: int = betterproto.uint32_field(17)
    reliquary_suit_list: List["ReliquarySuitBin"] = betterproto.message_field(18)
    shop_output_record: "ShopOutputRecordBin" = betterproto.message_field(19)
    bonus_record_list: List["BonusRecordBin"] = betterproto.message_field(20)
    activity_output_control_record_list: List[
        "ActivityOutputControlRecordBin"
    ] = betterproto.message_field(21)
    home_coin: int = betterproto.uint32_field(22)
    wait_sub_home_coin: int = betterproto.uint32_field(23)
    psn_mcoin: int = betterproto.uint32_field(24)
    wait_sub_psn_mcoin: int = betterproto.uint32_field(25)
    is_psn_version_modify: bool = betterproto.bool_field(26)
    reliquary_guarantee_depot_list: List[
        "ReliquaryGuaranteeDepotBin"
    ] = betterproto.message_field(27)


@dataclass(eq=False, repr=False)
class DungeonGroupRecordBin(betterproto.Message):
    chest_open_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class DungeonRecordBin(betterproto.Message):
    enter_count: int = betterproto.uint32_field(1)
    start_time: int = betterproto.fixed32_field(3)
    end_time: int = betterproto.fixed32_field(4)


@dataclass(eq=False, repr=False)
class DungeonRandomRecordBin(betterproto.Message):
    dungeon_list: List[int] = betterproto.uint32_field(1)
    refresh_time: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class DungeonDurableRecordBin(betterproto.Message):
    is_passed: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class PlayerDungeonRecordBin(betterproto.Message):
    dungeon_daily_map: Dict[int, "DungeonRecordBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    dungeon_durable_map: Dict[int, "DungeonDurableRecordBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    dungeon_random_map: Dict[int, "DungeonRandomRecordBin"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class DungeonSerialBossChestBin(betterproto.Message):
    take_num: int = betterproto.uint32_field(1)
    take_time: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class PlayerDungeonCompBin(betterproto.Message):
    cur_dungeon_id: int = betterproto.uint32_field(1)
    last_enter_time: int = betterproto.fixed32_field(2)
    record_bin: "PlayerDungeonRecordBin" = betterproto.message_field(5)
    is_join_other_scene: bool = betterproto.bool_field(6)
    last_time_daily_item_add: int = betterproto.fixed32_field(7)
    last_time_weekly_item_add: int = betterproto.fixed32_field(8)
    last_unsettled_dungeon_id: int = betterproto.uint32_field(9)
    serial_boss_chest_map: Dict[
        int, "DungeonSerialBossChestBin"
    ] = betterproto.map_field(10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    is_has_quit_target_pos: bool = betterproto.bool_field(11)
    quit_scene_id: int = betterproto.uint32_field(12)
    quit_pos: "VectorBin" = betterproto.message_field(13)
    quit_rot: "VectorBin" = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class PlayerBoredCompBin(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class PlayerMpCompBin(betterproto.Message):
    mp_setting_type: int = betterproto.uint32_field(2)
    is_only_mp_with_ps_player: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class CompoundOutputBin(betterproto.Message):
    output_time: int = betterproto.fixed32_field(1)


@dataclass(eq=False, repr=False)
class CompoundQueueBin(betterproto.Message):
    output_list: List["CompoundOutputBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CookRecipeDataBin(betterproto.Message):
    proficiency: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerCookCompBin(betterproto.Message):
    grade: int = betterproto.uint32_field(1)
    recipe_data_map: Dict[int, "CookRecipeDataBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    unlock_compound_list: List[int] = betterproto.uint32_field(3)
    compound_que_bin_map: Dict[int, "CompoundQueueBin"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlayerLoginCompBin(betterproto.Message):
    taken_login_reward_config_list: List[int] = betterproto.uint32_field(1)
    last_login_refresh_time: int = betterproto.fixed32_field(2)
    recv_questionnaire_mail_config_list: List[int] = betterproto.uint32_field(3)
    last_recv_questionnaire_mail_time: int = betterproto.fixed32_field(4)


@dataclass(eq=False, repr=False)
class OfflineMsgExeBin(betterproto.Message):
    msg: "OfflineMsgBin" = betterproto.message_field(1)
    exe_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerOfflineMsgCompBin(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    next_offline_msg_list: List["OfflineMsgExeBin"] = betterproto.message_field(2)
    born_scene_id: int = betterproto.uint32_field(4)
    born_pos: "VectorBin" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class DailyTaskInfoBin(betterproto.Message):
    daily_task_id: int = betterproto.uint32_field(1)
    drop_id: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)
    is_finished: bool = betterproto.bool_field(4)
    preview_reward_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class DailyTaskCycleQuestBin(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    refresh_count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DailyTaskCityCycleQuestsBin(betterproto.Message):
    city_id: int = betterproto.uint32_field(1)
    quest_list: List["DailyTaskCycleQuestBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerDailyTaskCompBin(betterproto.Message):
    last_time: int = betterproto.fixed32_field(1)
    task_list: List["DailyTaskInfoBin"] = betterproto.message_field(2)
    score_player_level: int = betterproto.uint32_field(3)
    is_taken_score_reward: bool = betterproto.bool_field(4)
    finished_num: int = betterproto.uint32_field(5)
    sure_pool_list: List[int] = betterproto.uint32_field(6)
    possible_pools_list: List["Uint32List"] = betterproto.message_field(7)
    task_var_map: Dict[int, "Int32List"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    refresh_times: int = betterproto.uint32_field(9)
    total_reward_num: int = betterproto.uint32_field(10)
    filter_city_id: int = betterproto.uint32_field(11)
    random_city_id: int = betterproto.uint32_field(12)
    cycle_quest_list: List["DailyTaskCycleQuestBin"] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class PlayerRandTaskCompBin(betterproto.Message):
    last_reward_time: int = betterproto.fixed32_field(1)
    reward_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class InvestigationBin(betterproto.Message):
    investigation_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    is_taken_reward: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PlayerInvestigationCompBin(betterproto.Message):
    investigation_list: List["InvestigationBin"] = betterproto.message_field(1)
    finished_target_id_list: List[int] = betterproto.uint32_field(2)
    reward_taken_target_id_list: List[int] = betterproto.uint32_field(3)
    is_today_quest_daily_notify_ack: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class SeaLampSectionBin(betterproto.Message):
    section_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SeaLampScheduleDataBin(betterproto.Message):
    popularity: int = betterproto.uint32_field(1)
    sea_lamp_coin: int = betterproto.uint32_field(2)
    is_content_closed: bool = betterproto.bool_field(3)
    section_list: List["SeaLampSectionBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CrucibleBattleUidBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    icon: int = betterproto.uint32_field(2)
    nickname: str = betterproto.string_field(3)
    online_id: str = betterproto.string_field(4)
    profile_picture_bin: "ProfilePictureBin" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CrucibleScheduleBin(betterproto.Message):
    cost_time: int = betterproto.uint32_field(1)
    battle_uid_data_list: List["CrucibleBattleUidBin"] = betterproto.message_field(2)
    battle_world_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TrialAvatarActivityRewardInfo(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(1)
    passed_dungeon: bool = betterproto.bool_field(2)
    received_reward: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class TrialAvatarScheduleBin(betterproto.Message):
    reward_info_list: List["TrialAvatarActivityRewardInfo"] = betterproto.message_field(
        1
    )
    watcher_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SalesmanScheduleBin(betterproto.Message):
    status: int = betterproto.uint32_field(1)
    day_index: int = betterproto.uint32_field(2)
    deliver_count: int = betterproto.uint32_field(4)
    obtained_normal_reward_index_list: List[int] = betterproto.uint32_field(5)
    obtained_special_reward_index_list: List[int] = betterproto.uint32_field(6)
    finished_talk_id_list: List[int] = betterproto.uint32_field(7)
    selected_reward_id_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    loaded_group_config_id_list: List["Uint32PairBin"] = betterproto.message_field(9)
    last_deliver_day_index: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class AsterLittleBin(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)
    stage_id: int = betterproto.uint32_field(2)
    stage_state: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class AsterMidBin(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)
    refresh_id: int = betterproto.uint32_field(2)
    refresh_time: int = betterproto.uint32_field(3)
    finished_camp_list: List[int] = betterproto.uint32_field(4)
    collect_count: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class AsterLargeBin(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class AsterProgressBin(betterproto.Message):
    count: int = betterproto.uint32_field(1)
    last_auto_add_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AsterScheduleBin(betterproto.Message):
    aster_little: "AsterLittleBin" = betterproto.message_field(1)
    aster_mid: "AsterMidBin" = betterproto.message_field(2)
    aster_large: "AsterLargeBin" = betterproto.message_field(3)
    aster_credit: int = betterproto.uint32_field(6)
    aster_token: int = betterproto.uint32_field(7)
    is_special_reward_taken: bool = betterproto.bool_field(8)
    is_content_closed: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class DeliveryScheduleBin(betterproto.Message):
    day_index: int = betterproto.uint32_field(1)
    is_taken_daily_reward: bool = betterproto.bool_field(2)
    cur_day_finished_delivery_quest_index_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FlightDailyRecordBin(betterproto.Message):
    is_touched: bool = betterproto.bool_field(1)
    best_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FlightScheduleBin(betterproto.Message):
    daily_record_list: List["FlightDailyRecordBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DragonSpineChapterBin(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    progress: int = betterproto.uint32_field(3)
    is_finish: bool = betterproto.bool_field(4)
    finished_mission_list: List[int] = betterproto.uint32_field(5)
    open_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class DragonSpineBanDropSubject(betterproto.Message):
    drop_subject_list: List["Uint32PairBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DragonSpineScheduleBin(betterproto.Message):
    weapon_enhance_stage: int = betterproto.uint32_field(1)
    chapter_list: List["DragonSpineChapterBin"] = betterproto.message_field(2)
    shimmering_essence: int = betterproto.uint32_field(3)
    warm_essence: int = betterproto.uint32_field(4)
    wondrous_essence: int = betterproto.uint32_field(5)
    banned_drop_subject_list: List[
        "DragonSpineBanDropSubject"
    ] = betterproto.message_field(6)
    is_content_closed: bool = betterproto.bool_field(7)
    activity_weapon_guid: int = betterproto.uint64_field(8)


@dataclass(eq=False, repr=False)
class EffigyDailyRecordBin(betterproto.Message):
    day_index: int = betterproto.uint32_field(1)
    challenge_id: int = betterproto.uint32_field(2)
    challenge_max_score: int = betterproto.uint32_field(4)
    is_first_pass_reward_taken: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class EffigyScheduleBin(betterproto.Message):
    daily_record_list: List["EffigyDailyRecordBin"] = betterproto.message_field(1)
    last_difficulty_id: int = betterproto.uint32_field(2)
    taken_reward_index_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TreasureMapRegionBin(betterproto.Message):
    region_id: int = betterproto.uint32_field(1)
    current_progress: int = betterproto.uint32_field(2)
    done_group_map: Dict[int, bool] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_BOOL
    )
    is_region_detected: bool = betterproto.bool_field(4)
    is_mp_challenge_open: bool = betterproto.bool_field(5)
    is_mp_challenge_done: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class TreasureMapBonusChallengeBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    is_active: bool = betterproto.bool_field(2)
    is_done: bool = betterproto.bool_field(3)
    is_challenge_open: bool = betterproto.bool_field(4)
    fragment_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class TreasureMapScheduleBin(betterproto.Message):
    region_list: List["TreasureMapRegionBin"] = betterproto.message_field(1)
    active_region_index: int = betterproto.uint32_field(2)
    currency_num: int = betterproto.uint32_field(3)
    challenge_list: List["TreasureMapBonusChallengeBin"] = betterproto.message_field(4)
    is_mp_challenge_touched: bool = betterproto.bool_field(5)
    host_mp_reward_taken_num: int = betterproto.uint32_field(6)
    guest_mp_reward_taken_num: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class SalesmanMpScheduleBin(betterproto.Message):
    status: int = betterproto.uint32_field(1)
    day_index: int = betterproto.uint32_field(2)
    deliver_day_index_list: List[int] = betterproto.uint32_field(3)
    last_deliver_day_index: int = betterproto.uint32_field(4)
    is_has_taken_special_reward: bool = betterproto.bool_field(5)
    normal_reward_list: List[int] = betterproto.uint32_field(6)
    obtained_normal_reward_list: List[int] = betterproto.uint32_field(7)
    obtained_special_reward_list: List[int] = betterproto.uint32_field(8)
    obtained_special_material_list: List[int] = betterproto.uint32_field(9)
    obtained_special_drop_list: List[int] = betterproto.uint32_field(10)
    finished_talk_id_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ExpeditionPathDataBin(betterproto.Message):
    path_id: int = betterproto.uint32_field(1)
    mark_id: int = betterproto.uint32_field(2)
    refresh_time: int = betterproto.uint32_field(3)
    state: int = betterproto.uint32_field(4)
    start_time: int = betterproto.uint32_field(5)
    avatar_id_list: List[int] = betterproto.uint32_field(6)
    assist_uid: int = betterproto.uint32_field(7)
    assist_avatar_id: int = betterproto.uint32_field(8)
    bonus_probability: float = betterproto.float_field(9)
    transaction: str = betterproto.string_field(10)
    assist_costume_id: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ExpeditionAssistRecordBin(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    assist_time: int = betterproto.uint32_field(2)
    target_uid: int = betterproto.uint32_field(3)
    target_nick_name: str = betterproto.string_field(4)
    online_id: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class ExpeditionChallengeDataBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_finished: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ExpeditionScheduleBin(betterproto.Message):
    last_refresh_time: int = betterproto.uint32_field(1)
    candidate_path_id_list: List[int] = betterproto.uint32_field(2)
    path_data_list: List["ExpeditionPathDataBin"] = betterproto.message_field(3)
    expedition_count: int = betterproto.uint32_field(4)
    assist_record_list: List["ExpeditionAssistRecordBin"] = betterproto.message_field(5)
    challenge_data_list: List["ExpeditionChallengeDataBin"] = betterproto.message_field(
        6
    )
    expedition_finish_count: int = betterproto.uint32_field(7)
    cur_challenge_id: int = betterproto.uint32_field(8)
    is_content_closed: bool = betterproto.bool_field(9)
    history_path_id_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BlessingScanEntityData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    scan_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BlessingRecvPicData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    pic_id: int = betterproto.uint32_field(2)
    is_recv: bool = betterproto.bool_field(3)
    index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BlessingScheduleBin(betterproto.Message):
    day_index: int = betterproto.uint32_field(1)
    cur_day_scanned_entity_list: List[
        "BlessingScanEntityData"
    ] = betterproto.message_field(2)
    cur_day_scan_num: int = betterproto.uint32_field(3)
    up_pool_index: int = betterproto.uint32_field(4)
    pic_num_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_activated: bool = betterproto.bool_field(6)
    is_content_closed: bool = betterproto.bool_field(7)
    cur_day_scan_type_id: int = betterproto.uint32_field(8)
    pic_drop_record_list: List[int] = betterproto.uint32_field(9)
    total_unfulfilled_num: int = betterproto.uint32_field(10)
    redeem_reward_num: int = betterproto.uint32_field(11)
    recv_pic_data_list: List["BlessingRecvPicData"] = betterproto.message_field(12)
    last_generated_id: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class FleurFairBalloonBin(betterproto.Message):
    best_score: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FleurFairFallBin(betterproto.Message):
    best_score: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class FleurFairMusicRecordBin(betterproto.Message):
    max_score: int = betterproto.uint32_field(1)
    max_combo: int = betterproto.uint32_field(2)
    is_unlock: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class FleurFairMusicBin(betterproto.Message):
    music_game_record_map: Dict[int, "FleurFairMusicRecordBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class FleurFairMinigameBin(betterproto.Message):
    minigame_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    balloon_bin: "FleurFairBalloonBin" = betterproto.message_field(11, group="detail")
    fall_bin: "FleurFairFallBin" = betterproto.message_field(12, group="detail")
    music_bin: "FleurFairMusicBin" = betterproto.message_field(13, group="detail")


@dataclass(eq=False, repr=False)
class FleurFairDungeonSectionDataBin(betterproto.Message):
    section_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FleurFairScheduleBin(betterproto.Message):
    credit: int = betterproto.uint32_field(1)
    token: int = betterproto.uint32_field(2)
    is_content_closed: bool = betterproto.bool_field(3)
    minigame_map: Dict[int, "FleurFairMinigameBin"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    dungeon_section_map: Dict[
        int, "FleurFairDungeonSectionDataBin"
    ] = betterproto.map_field(5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    is_dungeon_unlocked: bool = betterproto.bool_field(6)
    dungeon_punish_over_time: int = betterproto.uint32_field(7)
    obtained_token: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class ArenaChallengeSchduleBin(betterproto.Message):
    world_level: int = betterproto.uint32_field(1)
    is_finish_any_level: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class WaterSpiritScheduleBin(betterproto.Message):
    spirit_coin: int = betterproto.uint32_field(1)
    region_search_play_id: int = betterproto.uint32_field(2)
    scene_play_id: int = betterproto.uint32_field(3)
    is_phase_finish: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class ChannellerSlabChallengeBin(betterproto.Message):
    active_camp_index: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChannellerSlabStageBin(betterproto.Message):
    challenge_list: List["ChannellerSlabChallengeBin"] = betterproto.message_field(1)
    is_dungeon_done: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ChannellerSlabBuffSchemeBin(betterproto.Message):
    slot_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ChannellerSlabAssistBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    avatar_id: int = betterproto.uint32_field(2)
    avatar_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ChannellerSlabBuffDataBin(betterproto.Message):
    buff_id_list: List[int] = betterproto.uint32_field(1)
    single_buff_scheme: "ChannellerSlabBuffSchemeBin" = betterproto.message_field(2)
    mp_buff_scheme: "ChannellerSlabBuffSchemeBin" = betterproto.message_field(3)
    assist_bin_list: List["ChannellerSlabAssistBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonDataBin(betterproto.Message):
    dungeon_index: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    is_first_pass_reward_taken: bool = betterproto.bool_field(3)
    last_condition_id_list: List[int] = betterproto.uint32_field(4)
    is_open: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ChannellerSlabLoopDungeonStageBin(betterproto.Message):
    dungeon_data_list: List[
        "ChannellerSlabLoopDungeonDataBin"
    ] = betterproto.message_field(1)
    last_difficulty_id: int = betterproto.uint32_field(2)
    taken_reward_index_list: List[int] = betterproto.uint32_field(3)
    is_open: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class ChannellerSlabScheduleBin(betterproto.Message):
    stage_list: List["ChannellerSlabStageBin"] = betterproto.message_field(1)
    buff_data: "ChannellerSlabBuffDataBin" = betterproto.message_field(2)
    loop_dungeon_stage: "ChannellerSlabLoopDungeonStageBin" = betterproto.message_field(
        3
    )
    tokens: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MistTrialLevelBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    open_time: int = betterproto.uint32_field(3)
    try_times: int = betterproto.uint32_field(4)
    success_times: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MistTrialScheduleBin(betterproto.Message):
    level_bin_list: List["MistTrialLevelBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class HideAndSeekScheduleBin(betterproto.Message):
    hider_slot_skill_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    hunter_slot_skill_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_play_open: bool = betterproto.bool_field(3)
    hider_count: int = betterproto.uint32_field(4)
    open_map_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FindHilichurlScheduleBin(betterproto.Message):
    finished_day_index: int = betterproto.uint32_field(1)
    is_content_closed: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SummerTimeStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SummerTimeSprintBoatBin(betterproto.Message):
    best_score: int = betterproto.uint32_field(1)
    is_touched: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SummerTimeScheduleBin(betterproto.Message):
    stage_bin_map: Dict[int, "SummerTimeStageBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    is_content_closed: bool = betterproto.bool_field(2)
    disable_float_signal_list: List[int] = betterproto.uint32_field(3)
    unlcoked_mist_zone_list: List[int] = betterproto.uint32_field(4)
    last_float_signal_id: int = betterproto.uint32_field(5)
    next_float_signal_id: int = betterproto.uint32_field(6)
    draft_wood: int = betterproto.uint32_field(7)
    mini_harpastum: int = betterproto.uint32_field(8)
    sprint_boat_list: List["SummerTimeSprintBoatBin"] = betterproto.message_field(9)
    is_sea_mist_closed: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class BounceConjuringChapterBin(betterproto.Message):
    chapter_id: int = betterproto.uint32_field(1)
    best_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class BounceConjuringScheduleBin(betterproto.Message):
    chapter_list: List["BounceConjuringChapterBin"] = betterproto.message_field(1)
    is_content_closed: bool = betterproto.bool_field(2)
    coin: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BuoyantCombatDailyRecordBin(betterproto.Message):
    best_score: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class BuoyantCombatScheduleBin(betterproto.Message):
    daily_record_list: List["BuoyantCombatDailyRecordBin"] = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class SummerTimeDungeonBin(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    taken_chest_count: int = betterproto.uint32_field(2)
    taken_shell_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class EchoShellScheduleBin(betterproto.Message):
    taken_reward_list: List[int] = betterproto.uint32_field(1)
    taken_voice_list: List[int] = betterproto.uint32_field(2)
    summer_time_dungeon_list: List["SummerTimeDungeonBin"] = betterproto.message_field(
        3
    )
    pass_dungeon_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ChessScheduleBin(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    is_teach_dungeon_finished: bool = betterproto.bool_field(3)
    daily_obtained_exp_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    coin: int = betterproto.uint32_field(5)
    finished_map_id_list: List[int] = betterproto.uint32_field(6)
    punish_over_time: int = betterproto.uint32_field(7)
    is_content_closed: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class BlitzRushStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class BlitzRushParkourLevelRecordBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    best_record: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BlitzRushScheduleBin(betterproto.Message):
    coin_a: int = betterproto.uint32_field(1)
    coin_b: int = betterproto.uint32_field(2)
    is_content_closed: bool = betterproto.bool_field(3)
    stage_bin_list: List["BlitzRushStageBin"] = betterproto.message_field(4)
    parkour_level_record_list: List[
        "BlitzRushParkourLevelRecordBin"
    ] = betterproto.message_field(5)
    is_dungeon_unlocked: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class SumoAvatarBin(betterproto.Message):
    is_trial: bool = betterproto.bool_field(1)
    avatar_id: int = betterproto.uint64_field(2)
    in_dungeon_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class SumoTeamBin(betterproto.Message):
    avatar_bin_list: List["SumoAvatarBin"] = betterproto.message_field(1)
    skill_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SumoStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(3)
    team_list: List["SumoTeamBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SumoScheduleBin(betterproto.Message):
    stage_bin_list: List["SumoStageBin"] = betterproto.message_field(1)
    difficulty_id: int = betterproto.uint32_field(2)
    last_stage_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class LunaRiteHintPointBin(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    group_id: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class LunaRiteAreaBin(betterproto.Message):
    area_id: int = betterproto.uint32_field(1)
    finish_battle_id: int = betterproto.uint32_field(2)
    sacrifice_list: List[int] = betterproto.uint32_field(3)
    sacrifice_reward_list: List[int] = betterproto.uint32_field(4)
    hint_status: int = betterproto.uint32_field(5)
    chest_searching_num: int = betterproto.uint32_field(6)
    rune_searching_num: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class LunaRiteScheduleBin(betterproto.Message):
    area_bin_list: List["LunaRiteAreaBin"] = betterproto.message_field(1)
    hint_point_bin_list: List["LunaRiteHintPointBin"] = betterproto.message_field(2)
    atmosphere: int = betterproto.uint32_field(3)
    last_refresh_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MoonfinTrialLevelRecordBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    best_record_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class MoonfinTrialScheduleBin(betterproto.Message):
    moonfintrial_level_record_list: List[
        "MoonfinTrialLevelRecordBin"
    ] = betterproto.message_field(1)
    special_fish_count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlantFlowerRecvFlowerDataBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class HomeModuleUsedActivityItemDataBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    item_count_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class HomeUsedActivityItemDataBin(betterproto.Message):
    module_used_item_list: List[
        "HomeModuleUsedActivityItemDataBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlantFlowerSeedPlantDataBin(betterproto.Message):
    seed_id: int = betterproto.uint32_field(1)
    home_gather_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlantFlowerShelfDataBin(betterproto.Message):
    gadget_config_id: int = betterproto.uint32_field(1)
    used_flower_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerScheduleBin(betterproto.Message):
    day_index: int = betterproto.uint32_field(1)
    last_awarded_day_index: int = betterproto.uint32_field(2)
    seed_reward_list: List[int] = betterproto.uint32_field(3)
    wish_flower_num_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    recv_flower_data_list: List[
        "PlantFlowerRecvFlowerDataBin"
    ] = betterproto.message_field(5)
    is_content_closed: bool = betterproto.bool_field(6)
    activity_used_flower_num_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    home_used_flower_data: "HomeUsedActivityItemDataBin" = betterproto.message_field(8)
    seed_plant_data_list: List[
        "PlantFlowerSeedPlantDataBin"
    ] = betterproto.message_field(9)
    flower_shelf_data_list: List["PlantFlowerShelfDataBin"] = betterproto.message_field(
        10
    )
    plant_obtained_flower_type_list: List[int] = betterproto.uint32_field(11)
    common_obtained_flower_type_list: List[int] = betterproto.uint32_field(12)


@dataclass(eq=False, repr=False)
class MusicGameRecordBin(betterproto.Message):
    max_score: int = betterproto.uint32_field(1)
    max_combo: int = betterproto.uint32_field(2)
    is_unlock: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class MusicGameUgcSaveBin(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(1)
    music_id: int = betterproto.uint32_field(2)
    save_idx: int = betterproto.uint32_field(3)
    save_time: int = betterproto.uint32_field(4)
    max_score: int = betterproto.uint32_field(5)
    note_count: int = betterproto.uint32_field(6)
    version: int = betterproto.uint32_field(7)
    is_published: bool = betterproto.bool_field(8)
    is_changed_after_publish: bool = betterproto.bool_field(9)
    import_from_ugc_guid: int = betterproto.uint64_field(10)


@dataclass(eq=False, repr=False)
class MusicGameUgcSearchBin(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(1)
    music_id: int = betterproto.uint32_field(2)
    publish_time: int = betterproto.uint32_field(3)
    max_score: int = betterproto.uint32_field(4)
    note_count: int = betterproto.uint32_field(5)
    version: int = betterproto.uint32_field(6)
    creator_nickname: str = betterproto.string_field(7)
    is_psn_platform: bool = betterproto.bool_field(8)
    import_from_ugc_guid: int = betterproto.uint64_field(9)


@dataclass(eq=False, repr=False)
class MusicGameUgcPlayBin(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(1)
    version: int = betterproto.uint32_field(2)
    score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MusicGameScheduleBin(betterproto.Message):
    music_game_record_map: Dict[int, "MusicGameRecordBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    music_game_ugc_save_bin: List["MusicGameUgcSaveBin"] = betterproto.message_field(2)
    music_game_ugc_search_bin: List[
        "MusicGameUgcSearchBin"
    ] = betterproto.message_field(3)
    music_game_ugc_play_bin: List["MusicGameUgcPlayBin"] = betterproto.message_field(4)
    is_finish_all_cond_level: bool = betterproto.bool_field(5)
    cur_trans_no: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RoguelikeShikigamiBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonRuneBin(betterproto.Message):
    rune_id: int = betterproto.uint32_field(1)
    available_count: int = betterproto.uint32_field(2)
    max_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonCardBin(betterproto.Message):
    card_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonCurseBin(betterproto.Message):
    curse_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonDynamicSgvBin(betterproto.Message):
    key: str = betterproto.string_field(1)
    value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class RoguelikeMiscBin(betterproto.Message):
    cur_dungeon_level: int = betterproto.uint32_field(1)
    use_rune_list: List["RoguelikeDungeonRuneBin"] = betterproto.message_field(2)
    selected_card_list: List["RoguelikeDungeonCardBin"] = betterproto.message_field(3)
    optional_card_list: List[int] = betterproto.uint32_field(4)
    optional_card_depot_id: int = betterproto.uint32_field(5)
    curse_list: List["RoguelikeDungeonCurseBin"] = betterproto.message_field(6)
    dynamic_sgv_list: List["RoguelikeDungeonDynamicSgvBin"] = betterproto.message_field(
        7
    )
    gacha_cell_list: List[int] = betterproto.uint32_field(8)
    is_optional_card_can_refresh: bool = betterproto.bool_field(9)
    card_cell_id: int = betterproto.uint32_field(10)
    noheal_guid_list: List[int] = betterproto.uint64_field(11)
    cur_rand_count: int = betterproto.uint32_field(12)
    viewed_card_list: List[int] = betterproto.uint32_field(13)
    viewed_curse_list: List[int] = betterproto.uint32_field(14)
    add_talent_guid_list: List[int] = betterproto.uint64_field(15)
    chosen_card_type_count_map: Dict[int, int] = betterproto.map_field(
        16, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    refresh_count: int = betterproto.uint32_field(17)
    use_refresh_free_count: int = betterproto.uint32_field(18)


@dataclass(eq=False, repr=False)
class RogueTeamBin(betterproto.Message):
    onstage_avatar_guid_list: List[int] = betterproto.uint64_field(1)
    backstage_avatar_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class RogueCellBin(betterproto.Message):
    cell_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    type: int = betterproto.uint32_field(3)
    dungeon_id: int = betterproto.uint32_field(4)
    diff_monster_pool_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    guard_point_config_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class RogueGadgetPointBin(betterproto.Message):
    group_point_pair: "Uint32PairBin" = betterproto.message_field(1)
    gadget_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RogueDungeonBin(betterproto.Message):
    is_valid: bool = betterproto.bool_field(1)
    team_bin: "RogueTeamBin" = betterproto.message_field(2)
    stage_id: int = betterproto.uint32_field(3)
    cur_level_index: int = betterproto.uint32_field(4)
    last_player_pos: "VectorBin" = betterproto.message_field(5)
    last_player_rot: "VectorBin" = betterproto.message_field(6)
    cur_cell_id: int = betterproto.uint32_field(7)
    rogue_cell_bin_map: Dict[int, "RogueCellBin"] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    brakeages_list: List["Uint32PairBin"] = betterproto.message_field(9)
    trap_list: List["Uint32PairBin"] = betterproto.message_field(10)
    blast_bucket_list: List["Uint32PairBin"] = betterproto.message_field(11)
    dungeon_id: int = betterproto.uint32_field(12)
    is_temp_leave: bool = betterproto.bool_field(13)
    dungeon_weight_config_id: int = betterproto.uint32_field(14)
    explored_cell_list: List[int] = betterproto.uint32_field(15)
    brakeage_group_gadget_bin_list: List[
        "RogueGadgetPointBin"
    ] = betterproto.message_field(16)
    trap_group_gadget_bin_list: List["RogueGadgetPointBin"] = betterproto.message_field(
        17
    )
    byobu_group_gadget_bin_list: List[
        "RogueGadgetPointBin"
    ] = betterproto.message_field(18)
    ball_group_gadget_bin_list: List["RogueGadgetPointBin"] = betterproto.message_field(
        19
    )
    is_ban_spring: bool = betterproto.bool_field(20)


@dataclass(eq=False, repr=False)
class RogueFinishChallengeBin(betterproto.Message):
    cell_num: int = betterproto.uint32_field(1)
    coin_b: int = betterproto.uint32_field(2)
    coin_c: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class RogueStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    coin_c_num: int = betterproto.uint32_field(2)
    max_passed_level: int = betterproto.uint32_field(3)
    is_open: bool = betterproto.bool_field(4)
    is_in_combat: bool = betterproto.bool_field(5)
    is_passed: bool = betterproto.bool_field(6)
    is_taken_reward: bool = betterproto.bool_field(7)
    is_entering_next_level: bool = betterproto.bool_field(8)
    is_explored: bool = betterproto.bool_field(9)
    cached_coin_b_num: int = betterproto.uint32_field(10)
    cached_coin_c_num: int = betterproto.uint32_field(11)
    dead_gadget_count_list: List["Uint32PairBin"] = betterproto.message_field(12)
    kill_monster_count: int = betterproto.uint32_field(13)
    avatar_element_count: int = betterproto.uint32_field(14)
    avatar_count: int = betterproto.uint32_field(15)
    is_used_spring: bool = betterproto.bool_field(16)
    level_explore_cell_count_map: Dict[int, int] = betterproto.map_field(
        17, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_avatar_dead: bool = betterproto.bool_field(18)
    level_finish_all_challenge_map: Dict[int, bool] = betterproto.map_field(
        19, betterproto.TYPE_UINT32, betterproto.TYPE_BOOL
    )
    cur_level_index: int = betterproto.uint32_field(20)
    finish_challenge_bin_map: Dict[
        int, "RogueFinishChallengeBin"
    ] = betterproto.map_field(21, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    transaction: str = betterproto.string_field(22)
    level_time_cost_map: Dict[int, int] = betterproto.map_field(
        23, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    explored_cell_type_map: Dict[int, int] = betterproto.map_field(
        24, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    has_temp_leaved: bool = betterproto.bool_field(25)


@dataclass(eq=False, repr=False)
class RoguelikeDungeonScheduleBin(betterproto.Message):
    rune_list: List[int] = betterproto.uint32_field(1)
    shikigami_list: List["RoguelikeShikigamiBin"] = betterproto.message_field(2)
    coin_a: int = betterproto.uint32_field(3)
    coin_b: int = betterproto.uint32_field(4)
    coin_c: int = betterproto.uint32_field(5)
    equipped_rune_list: List[int] = betterproto.uint32_field(6)
    misc_bin: "RoguelikeMiscBin" = betterproto.message_field(7)
    stage_bin_list: List["RogueStageBin"] = betterproto.message_field(8)
    dungeon_runtime_bin: "RogueDungeonBin" = betterproto.message_field(9)
    is_content_closed: bool = betterproto.bool_field(10)
    init_world_level: int = betterproto.uint32_field(11)
    trans_no_count: int = betterproto.uint64_field(12)


@dataclass(eq=False, repr=False)
class WinterCampDropBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    drop_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WinterCampExploreBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_finished: bool = betterproto.bool_field(2)
    drop_group_index: int = betterproto.uint32_field(3)
    drop_record_list: List["WinterCampDropBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WinterCampBattleBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_finished: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class WinterCampRaceBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WinterCampRecvItemBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    item_bin_list: List["ItemParamBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WinterCampHomeUsedItemBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    item_bin_list: List["ItemParamBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WinterCampSnowmanUsedItemBin(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    item_bin_list: List["ItemParamBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WinterCampScheduleBin(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(1)
    coin_a: int = betterproto.uint32_field(2)
    coin_b: int = betterproto.uint32_field(3)
    drop_gen_index: int = betterproto.uint32_field(4)
    explore_bin: "WinterCampExploreBin" = betterproto.message_field(5)
    battle_bin: "WinterCampBattleBin" = betterproto.message_field(6)
    race_bin_list: List["WinterCampRaceBin"] = betterproto.message_field(7)
    recv_item_bin_list: List["WinterCampRecvItemBin"] = betterproto.message_field(8)
    wish_item_id_list: List[int] = betterproto.uint32_field(9)
    taken_explore_reward_id_list: List[int] = betterproto.uint32_field(10)
    taken_battle_reward_id_list: List[int] = betterproto.uint32_field(11)
    is_race_started: bool = betterproto.bool_field(12)
    home_used_item_list: List["WinterCampHomeUsedItemBin"] = betterproto.message_field(
        13
    )
    snowman_used_item_list: List[
        "WinterCampSnowmanUsedItemBin"
    ] = betterproto.message_field(14)


@dataclass(eq=False, repr=False)
class HachiStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finished: bool = betterproto.bool_field(3)
    dungeon_pass_times: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class HachiScheduleBin(betterproto.Message):
    stage_bin_map: Dict[int, "HachiStageBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    is_content_closed: bool = betterproto.bool_field(2)
    cur_finish_steal_stage_id: int = betterproto.uint32_field(3)
    cur_finish_battle_stage_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PotionLevelBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    difficulty_level: int = betterproto.uint32_field(2)
    mode_id: int = betterproto.uint32_field(3)
    score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PotionStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    reset_times: int = betterproto.uint32_field(3)
    level_bin_list: List["PotionLevelBin"] = betterproto.message_field(4)
    cool_down_avatar_id_list: List[int] = betterproto.uint32_field(5)
    cool_down_buff_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PotionScheduleBin(betterproto.Message):
    stage_bin_list: List["PotionStageBin"] = betterproto.message_field(1)
    in_dungeon_avatar_guid_list: List[int] = betterproto.uint64_field(2)
    is_finish_any_level: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class TanukiTravelLevelBin(betterproto.Message):
    route_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finish: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class TanukiTravelScheduleBin(betterproto.Message):
    level_bin_list: List["TanukiTravelLevelBin"] = betterproto.message_field(1)
    finished_level_index: int = betterproto.uint32_field(2)
    is_content_closed: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SalvageBundleChallengeBin(betterproto.Message):
    finished_bundle_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SalvageScoreChallengeBin(betterproto.Message):
    salvage_challenge_id: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SalvageChallengeBin(betterproto.Message):
    challenge_type: int = betterproto.uint32_field(1)
    is_unlock: bool = betterproto.bool_field(2)
    bundle_info: "SalvageBundleChallengeBin" = betterproto.message_field(
        10, group="challenge_detail"
    )
    score_challenge_info: "SalvageScoreChallengeBin" = betterproto.message_field(
        11, group="challenge_detail"
    )
    boss_challenge_id: int = betterproto.uint32_field(12, group="challenge_detail")


@dataclass(eq=False, repr=False)
class LanternSalvageStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finished: bool = betterproto.bool_field(3)
    challenge_bin_list: List["SalvageChallengeBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class LanternRiteProjectionLevelBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_finish: bool = betterproto.bool_field(2)
    min_finish_time: int = betterproto.uint32_field(3)
    is_view_tips: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class LanternRiteProjectionBin(betterproto.Message):
    open_stage_list: List[int] = betterproto.uint32_field(2)
    view_input_tips_list: List[int] = betterproto.uint32_field(3)
    view_switch_tips_list: List[int] = betterproto.uint32_field(4)
    level_bin_list: List["LanternRiteProjectionLevelBin"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksChallengeBin(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    best_score: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    challenge_bin_list: List[
        "LanternRiteFireworksChallengeBin"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class LanternRiteFireworksBin(betterproto.Message):
    stage_bin_list: List["LanternRiteFireworksStageBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class LanternRiteScheduleBin(betterproto.Message):
    coin_a: int = betterproto.uint32_field(1)
    coin_b: int = betterproto.uint32_field(2)
    coin_c: int = betterproto.uint32_field(3)
    projection_bin: "LanternRiteProjectionBin" = betterproto.message_field(4)
    salvage_stage_bin_list: List["LanternSalvageStageBin"] = betterproto.message_field(
        5
    )
    is_mini_eldritch_dungeon_open: bool = betterproto.bool_field(6)
    is_taken_skin_reward: bool = betterproto.bool_field(7)
    salvage_tracking_mark_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_content_closed: bool = betterproto.bool_field(9)
    fireworks_bin: "LanternRiteFireworksBin" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class MichiaeMatsuriScheduleBin(betterproto.Message):
    statue_refresh_group_time: int = betterproto.uint32_field(1)
    stage_bin_list: List["MichiaeMatsuriStageBin"] = betterproto.message_field(2)
    unlocked_crystal_skill_bin_list: List[int] = betterproto.uint32_field(3)
    gain_crystal_exp: int = betterproto.uint32_field(4)
    finished_challenge_group_id_bin_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class BartenderTaskBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_finish: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class BartenderLevelBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(2)
    is_finish: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class BartenderScheduleBin(betterproto.Message):
    unlock_item_list: List[int] = betterproto.uint32_field(1)
    unlock_formula_list: List[int] = betterproto.uint32_field(2)
    unlock_task_list: List["BartenderTaskBin"] = betterproto.message_field(3)
    unlock_level_list: List["BartenderLevelBin"] = betterproto.message_field(4)
    is_develop_module_open: bool = betterproto.bool_field(5)
    trans_no_count: int = betterproto.uint64_field(6)
    is_content_closed: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class IrodoriChessMapBin(betterproto.Message):
    best_score: int = betterproto.uint32_field(1)
    equiped_card_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class IrodoriChessLevelBin(betterproto.Message):
    normal_map_data: "IrodoriChessMapBin" = betterproto.message_field(1)
    hard_map_data: "IrodoriChessMapBin" = betterproto.message_field(2)
    level_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class IrodoriChessBin(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)
    level_list: List["IrodoriChessLevelBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class IrodoriFlowerShelfBin(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    used_flower_count_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class IrodoriFlowerBin(betterproto.Message):
    is_satisfied_theme_list: List[int] = betterproto.uint32_field(1)
    shelf_data_list: List["IrodoriFlowerShelfBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class IrodoriPoetryThemeBin(betterproto.Message):
    theme_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    scanned_index_list: List[int] = betterproto.uint32_field(3)
    selected_line_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IrodoriPoetryBin(betterproto.Message):
    theme_bin_list: List["IrodoriPoetryThemeBin"] = betterproto.message_field(1)
    cur_theme_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class IrodoriMasterLevelDetailBin(betterproto.Message):
    difficulty: int = betterproto.uint32_field(1)
    is_have_try: bool = betterproto.bool_field(2)
    is_finish: bool = betterproto.bool_field(3)
    min_finish_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class IrodoriMasterLevelBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    level_detail_list: List["IrodoriMasterLevelDetailBin"] = betterproto.message_field(
        2
    )
    is_cg_viewed: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class IrodoriScheduleBin(betterproto.Message):
    chess_data: "IrodoriChessBin" = betterproto.message_field(1)
    flower_data: "IrodoriFlowerBin" = betterproto.message_field(2)
    poetry_data: "IrodoriPoetryBin" = betterproto.message_field(3)
    master_level_list: List["IrodoriMasterLevelBin"] = betterproto.message_field(4)
    master_transaction_no: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class CrystalLinkBuffBin(betterproto.Message):
    cond_buff_id: int = betterproto.uint32_field(1)
    effect_buff_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CrystalLinkAvatarBin(betterproto.Message):
    is_trial: bool = betterproto.bool_field(1)
    avatar_id: int = betterproto.uint64_field(2)
    in_dungeon_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class CrystalLinkTeamBin(betterproto.Message):
    avatar_bin_list: List["CrystalLinkAvatarBin"] = betterproto.message_field(1)
    buff_bin_list: List["CrystalLinkBuffBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CrystalLinkLevelBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    best_score: int = betterproto.uint32_field(3)
    team_bin_list: List["CrystalLinkTeamBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CrystalLinkScheduleBin(betterproto.Message):
    level_bin_list: List["CrystalLinkLevelBin"] = betterproto.message_field(1)
    difficulty_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PhotoPosBin(betterproto.Message):
    pos_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_view: bool = betterproto.bool_field(3)
    is_finish: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class PhotoScheduleBin(betterproto.Message):
    photo_pos_bin_list: List["PhotoPosBin"] = betterproto.message_field(1)
    is_content_closed: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class SpiceStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    success_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SpiceScheduleBin(betterproto.Message):
    stage_bin_list: List["SpiceStageBin"] = betterproto.message_field(1)
    increase_avatar_fetter_limit_times: int = betterproto.uint32_field(2)
    current_increase_avatar_fetter_times: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GachaStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    target_num_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GachaScheduleBin(betterproto.Message):
    robot_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    gacha_stage_bin_list: List["GachaStageBin"] = betterproto.message_field(2)
    item_stage: int = betterproto.uint32_field(3)
    sub_stage: int = betterproto.uint32_field(4)
    robot_finish_num: int = betterproto.uint32_field(5)
    create_robot_vec: List[int] = betterproto.uint32_field(6)
    hidden_robot_finish_num: int = betterproto.uint32_field(7)
    first_create_hidden_robot_id: int = betterproto.uint32_field(8)
    tech_create_robot_id: int = betterproto.uint32_field(9)
    have_reward_robot_num_map: Dict[int, int] = betterproto.map_field(
        10, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    have_get_robot_list: List[int] = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class ActivityRecvGiftBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    gift_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivityGiftDataBin(betterproto.Message):
    wish_gift_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    recv_gift_data_list: List["ActivityRecvGiftBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LuminanceStoneChallengeScheduleBin(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(1)
    current_stage_id: int = betterproto.uint32_field(2)
    is_final_gallery_complete: bool = betterproto.bool_field(3)
    best_score: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RogueDiaryStageRecordBin(betterproto.Message):
    difficulty: int = betterproto.uint32_field(1)
    round: int = betterproto.uint32_field(2)
    is_finish: bool = betterproto.bool_field(3)
    finish_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RogueDiaryStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_have_try: bool = betterproto.bool_field(2)
    record_bin: "RogueDiaryStageRecordBin" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RogueDiaryRoomConfigPairBin(betterproto.Message):
    room_config_id: int = betterproto.uint32_field(1)
    is_can_hard: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class RogueDiaryAvtarBin(betterproto.Message):
    guid: int = betterproto.uint64_field(1)
    level: int = betterproto.uint32_field(2)
    hp: float = betterproto.float_field(3)
    energy: float = betterproto.float_field(4)
    trial_config_id: int = betterproto.uint32_field(5)
    round: int = betterproto.uint32_field(6)
    life_state: int = betterproto.uint32_field(7)
    is_ban: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class RogueDiaryProgressBin(betterproto.Message):
    is_have_progress: bool = betterproto.bool_field(1)
    is_have_enter_dungeon: bool = betterproto.bool_field(2)
    stage_id: int = betterproto.uint32_field(3)
    dungeon_id: int = betterproto.uint32_field(4)
    difficulty: int = betterproto.uint32_field(5)
    cur_round: int = betterproto.uint32_field(6)
    is_round_fight_finish: bool = betterproto.bool_field(7)
    room_config_list: List["RogueDiaryRoomConfigPairBin"] = betterproto.message_field(9)
    optional_card_list: List[int] = betterproto.uint32_field(10)
    chosen_card_list: List[int] = betterproto.uint32_field(11)
    is_round_repair_finish: bool = betterproto.bool_field(12)
    onstage_guid_list: List[int] = betterproto.uint64_field(13)
    rogue_avatar_list: List["RogueDiaryAvtarBin"] = betterproto.message_field(14)
    optional_tired_guid_list: List[int] = betterproto.uint64_field(15)
    coin: int = betterproto.uint32_field(16)
    time: int = betterproto.uint32_field(17)
    transaction: int = betterproto.uint32_field(18)
    resume_optional_card_list: List[int] = betterproto.uint32_field(19)
    resume_chosen_card_list: List[int] = betterproto.uint32_field(20)
    resume_select_card_list: List[int] = betterproto.uint32_field(21)


@dataclass(eq=False, repr=False)
class RogueDiaryScheduleBin(betterproto.Message):
    is_content_closed: bool = betterproto.bool_field(1)
    stage_bin_list: List["RogueDiaryStageBin"] = betterproto.message_field(2)
    progress_bin: "RogueDiaryProgressBin" = betterproto.message_field(3)
    coin: int = betterproto.uint32_field(4)
    transaction: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class SummerTimeV2DungeonStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_prev_dungeon_succeed: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class SummerTimeV2BoatStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    best_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SummerTimeV2ScheduleBin(betterproto.Message):
    dungeon_stage_bin_list: List[
        "SummerTimeV2DungeonStageBin"
    ] = betterproto.message_field(1)
    boat_stage_bin_list: List["SummerTimeV2BoatStageBin"] = betterproto.message_field(2)
    is_content_closed: bool = betterproto.bool_field(3)
    coin: int = betterproto.uint32_field(4)
    taken_reward_count: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class IslandPartyStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    best_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class IslandPartyScheduleBin(betterproto.Message):
    stage_bin_list: List["IslandPartyStageBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GearStageBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finished: bool = betterproto.bool_field(3)
    shortest_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class JigsawPictureDataBin(betterproto.Message):
    is_open: bool = betterproto.bool_field(1)
    is_finished: bool = betterproto.bool_field(2)
    shortest_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GearScheduleBin(betterproto.Message):
    level_bin_list: List["GearStageBin"] = betterproto.message_field(1)
    jigsaw_picture_data: "JigsawPictureDataBin" = betterproto.message_field(2)
    player_finish_gear_level: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finished: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoObjectBin(betterproto.Message):
    object_id: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)
    finish_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocencePhotoBin(betterproto.Message):
    stage_bin_list: List["GravenInnocencePhotoStageBin"] = betterproto.message_field(1)
    object_bin_list: List["GravenInnocencePhotoObjectBin"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class GravenInnocenceCampStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    level_id: int = betterproto.uint32_field(3)
    is_finished: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GravenInnocenceCampBin(betterproto.Message):
    stage_bin_list: List["GravenInnocenceCampStageBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceLevelBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    max_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocenceRaceBin(betterproto.Message):
    level_bin_list: List["GravenInnocenceRaceLevelBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GravenInnocenceCarveStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GravenInnocenceCarveUsedItemBin(betterproto.Message):
    gadget_config_id: int = betterproto.uint32_field(1)
    need_item_bin_list: List["ItemParamBin"] = betterproto.message_field(2)
    pass_item_bin_list: List["ItemParamBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GravenInnocenceCarveBin(betterproto.Message):
    stage_bin_list: List["GravenInnocenceCarveStageBin"] = betterproto.message_field(1)
    used_item_bin_list: List[
        "GravenInnocenceCarveUsedItemBin"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GravenInnocenceScheduleBin(betterproto.Message):
    photo_bin: "GravenInnocencePhotoBin" = betterproto.message_field(1)
    camp_bin: "GravenInnocenceCampBin" = betterproto.message_field(2)
    coin_a: int = betterproto.uint32_field(3)
    coin_b: int = betterproto.uint32_field(4)
    race_bin: "GravenInnocenceRaceBin" = betterproto.message_field(5)
    carve_bin: "GravenInnocenceCarveBin" = betterproto.message_field(6)
    is_content_closed: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class InstableSprayStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    max_score: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(3)
    team_info_bin_list: List["InstableSprayTeamInfoBin"] = betterproto.message_field(4)
    is_finished: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class InstableSprayScheduleBin(betterproto.Message):
    stage_bin_list: List["InstableSprayStageBin"] = betterproto.message_field(1)
    in_dungeon_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class InstableSprayAvatarInfoBin(betterproto.Message):
    avatar_id: int = betterproto.uint64_field(1)
    is_trial: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class InstableSprayTeamInfoBin(betterproto.Message):
    avatar_info_bin_list: List[
        "InstableSprayAvatarInfoBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MuqadasPotionLevelDataBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    max_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class MuqadasPotionScheduleBin(betterproto.Message):
    level_bin_list: List["MuqadasPotionLevelDataBin"] = betterproto.message_field(1)
    in_dungeon_avatar_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class TreasureSeelieRegionBin(betterproto.Message):
    open_day: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    opened_chest_config_id_list: List[int] = betterproto.uint32_field(3)
    is_done: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class TreasureSeelieScheduleBin(betterproto.Message):
    coin_num: int = betterproto.uint32_field(1)
    region_list: List["TreasureSeelieRegionBin"] = betterproto.message_field(2)
    is_content_closed: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class RockBoardExploreStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finish: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class RockBoardExploreScheduleBin(betterproto.Message):
    stage_bin_list: List["RockBoardExploreStageBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class VintageHuntingStageDataBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finish: bool = betterproto.bool_field(3)
    record_value: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class VintagePresentLevelDataBin(betterproto.Message):
    present_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(3)
    is_finish: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class VintagePresentStageDataBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    is_finish: bool = betterproto.bool_field(3)
    present_level_map: Dict[int, "VintagePresentLevelDataBin"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class VintageBoothUsedItemDataBin(betterproto.Message):
    gadget_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class VintageCampChallengeLevelDataBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    stage_id: int = betterproto.uint32_field(2)
    is_open: bool = betterproto.bool_field(3)
    is_finish: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class VintageCampChallengeStageDataBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    camp_level_map: Dict[
        int, "VintageCampChallengeLevelDataBin"
    ] = betterproto.map_field(2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    is_open: bool = betterproto.bool_field(3)
    is_finish: bool = betterproto.bool_field(4)
    max_finished_level: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class VintageTraderDealBin(betterproto.Message):
    trader_id: int = betterproto.uint32_field(1)
    deal_item_list: List["Uint32PairBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class VintageBargainBin(betterproto.Message):
    bargain_id: int = betterproto.uint32_field(1)
    price: int = betterproto.uint32_field(2)
    is_succ: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class VintageStoreAttrRandomPoolBin(betterproto.Message):
    template_id: int = betterproto.uint32_field(1)
    pool_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class VintageStoreBin(betterproto.Message):
    store_id: int = betterproto.uint32_field(1)
    attr_list: List[int] = betterproto.uint32_field(2)
    attr_random_pool_list: List[
        "VintageStoreAttrRandomPoolBin"
    ] = betterproto.message_field(3)
    aim_attr_list: List[int] = betterproto.uint32_field(4)
    slot_count: int = betterproto.uint32_field(5)
    chosen_skill_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class VintageNpcEventBin(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    max_effective_round: int = betterproto.uint32_field(2)
    is_finish: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class VintageScheduleBin(betterproto.Message):
    popularity: int = betterproto.uint32_field(1)
    hunting_stage_map: Dict[int, "VintageHuntingStageDataBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    present_stage_map: Dict[int, "VintagePresentStageDataBin"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    booth_data: "VintageBoothUsedItemDataBin" = betterproto.message_field(4)
    camp_stage_map: Dict[
        int, "VintageCampChallengeStageDataBin"
    ] = betterproto.map_field(5, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    collected_item_num: int = betterproto.uint32_field(6)
    is_content_closed: bool = betterproto.bool_field(7)
    market_coin_a: int = betterproto.uint32_field(8)
    market_coin_b: int = betterproto.uint32_field(9)
    market_coin_c: int = betterproto.uint32_field(10)
    is_market_content_open: bool = betterproto.bool_field(11)
    is_market_content_finish: bool = betterproto.bool_field(12)
    trader_list: List["VintageTraderDealBin"] = betterproto.message_field(13)
    bargain_list: List["VintageBargainBin"] = betterproto.message_field(14)
    store_list: List["VintageStoreBin"] = betterproto.message_field(15)
    store_round: int = betterproto.uint32_field(16)
    prev_coin_b_num: int = betterproto.uint32_field(17)
    prev_coin_c_num: int = betterproto.uint32_field(18)
    is_round_tips_view: bool = betterproto.bool_field(19)
    taken_reward_present_id_list: List[int] = betterproto.uint32_field(20)
    is_store_content_finish: bool = betterproto.bool_field(21)
    is_store_content_interrupt: bool = betterproto.bool_field(22)
    env_event_list: List["Uint32PairBin"] = betterproto.message_field(23)
    npc_event_list: List["VintageNpcEventBin"] = betterproto.message_field(24)
    skill_list: List[int] = betterproto.uint32_field(25)
    viewed_skill_list: List[int] = betterproto.uint32_field(26)
    is_strategy_module_open: bool = betterproto.bool_field(27)
    is_help_module_open: bool = betterproto.bool_field(28)
    next_can_use_help_round: int = betterproto.uint32_field(29)
    help_skill_id: int = betterproto.uint32_field(30)
    dividend_res_map: Dict[int, "Uint32PairBin"] = betterproto.map_field(
        31, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    dividend_id: int = betterproto.uint32_field(32)
    dividend_reward_count: int = betterproto.uint32_field(33)
    hunting_boss_weak_count: int = betterproto.uint32_field(34)
    store_round_income_list: List[int] = betterproto.uint32_field(35)


@dataclass(eq=False, repr=False)
class WindFieldScheduleBin(betterproto.Message):
    stage_bin_list: List["WindFieldStageBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WindFieldStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ActivityGeneralCoinBin(betterproto.Message):
    coin_type: int = betterproto.uint32_field(1)
    coin_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FungusBin(betterproto.Message):
    fungus_id: int = betterproto.uint32_field(1)
    name_id: int = betterproto.uint32_field(2)
    is_cultivate: bool = betterproto.bool_field(3)
    capture_order: int = betterproto.uint32_field(4)
    min_cultivate_step: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class FungusPlotStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class FungusTrainingDungeonBin(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    best_score: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class FungusFighterMonsterBin(betterproto.Message):
    fungus_id: int = betterproto.uint32_field(1)
    cur_hp_percentage: float = betterproto.float_field(2)
    is_alive: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class FungusTrainingShapshotDataBin(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    skill_count: int = betterproto.uint32_field(2)
    cur_round: int = betterproto.uint32_field(3)
    monster_bin_list: List["FungusFighterMonsterBin"] = betterproto.message_field(4)
    choosen_monster_list: List[int] = betterproto.uint32_field(5)
    backup_monster_list: List[int] = betterproto.uint32_field(6)
    total_used_time: int = betterproto.uint32_field(7)
    rand_index: int = betterproto.uint32_field(8)
    monster_pool_list: List[int] = betterproto.uint32_field(9)
    level_transaction: str = betterproto.string_field(10)


@dataclass(eq=False, repr=False)
class FungusTrainingProgressBin(betterproto.Message):
    fungus_snapshot_data_list: List[
        "FungusTrainingShapshotDataBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class FungusFighterScheduleBin(betterproto.Message):
    fungus_bin_list: List["FungusBin"] = betterproto.message_field(1)
    fungus_plot_stage_bin_list: List["FungusPlotStageBin"] = betterproto.message_field(
        2
    )
    capture_order: int = betterproto.uint32_field(3)
    fungus_training_dungeon_bin_list: List[
        "FungusTrainingDungeonBin"
    ] = betterproto.message_field(5)
    unlock_camp_id_list: List[int] = betterproto.uint32_field(6)
    unlock_cultivate_id_list: List[int] = betterproto.uint32_field(7)
    fungus_training_progress_bin: "FungusTrainingProgressBin" = (
        betterproto.message_field(8)
    )


@dataclass(eq=False, repr=False)
class CharAmusementStageBin(betterproto.Message):
    stage_id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)
    finish_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CharAmusementScheduleBin(betterproto.Message):
    stage_bin_list: List["CharAmusementStageBin"] = betterproto.message_field(1)
    in_dungeon_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2LevelBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    best_cost_time: int = betterproto.uint32_field(2)
    is_level_open: bool = betterproto.bool_field(3)
    challenge_mode_difficulty_open: int = betterproto.uint32_field(4)
    challenge_mode_last_choose_skill_no: int = betterproto.uint32_field(5)
    challenge_mode_difficulty_pass: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class EffigyChallengeV2ScheduleBin(betterproto.Message):
    level_bin_list: List["EffigyChallengeV2LevelBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ActivityScheduleBin(betterproto.Message):
    salesman_schedule_bin: "SalesmanScheduleBin" = betterproto.message_field(
        102, group="detail"
    )
    trial_avatar_bin: "TrialAvatarScheduleBin" = betterproto.message_field(
        103, group="detail"
    )
    delivery_bin: "DeliveryScheduleBin" = betterproto.message_field(104, group="detail")
    crucible_bin: "CrucibleScheduleBin" = betterproto.message_field(112, group="detail")
    aster_bin: "AsterScheduleBin" = betterproto.message_field(113, group="detail")
    flight_bin: "FlightScheduleBin" = betterproto.message_field(114, group="detail")
    dragon_spine_bin: "DragonSpineScheduleBin" = betterproto.message_field(
        115, group="detail"
    )
    effigy_bin: "EffigyScheduleBin" = betterproto.message_field(116, group="detail")
    treasure_map_bin: "TreasureMapScheduleBin" = betterproto.message_field(
        120, group="detail"
    )
    salesman_mp_bin: "SalesmanMpScheduleBin" = betterproto.message_field(
        121, group="detail"
    )
    blessing_bin: "BlessingScheduleBin" = betterproto.message_field(130, group="detail")
    sea_lamp_bin: "SeaLampScheduleDataBin" = betterproto.message_field(
        131, group="detail"
    )
    expedition_bin: "ExpeditionScheduleBin" = betterproto.message_field(
        132, group="detail"
    )
    fleur_fair_bin: "FleurFairScheduleBin" = betterproto.message_field(
        140, group="detail"
    )
    arena_challenge_bin: "ArenaChallengeSchduleBin" = betterproto.message_field(
        141, group="detail"
    )
    water_spirit_bin: "WaterSpiritScheduleBin" = betterproto.message_field(
        142, group="detail"
    )
    channeller_slab_bin: "ChannellerSlabScheduleBin" = betterproto.message_field(
        151, group="detail"
    )
    hide_and_seek_bin: "HideAndSeekScheduleBin" = betterproto.message_field(
        152, group="detail"
    )
    mist_trial_bin: "MistTrialScheduleBin" = betterproto.message_field(
        153, group="detail"
    )
    find_hilichurl_bin: "FindHilichurlScheduleBin" = betterproto.message_field(
        154, group="detail"
    )
    summer_time_bin: "SummerTimeScheduleBin" = betterproto.message_field(
        160, group="detail"
    )
    buoyant_combat_bin: "BuoyantCombatScheduleBin" = betterproto.message_field(
        161, group="detail"
    )
    bounce_conjuring_bin: "BounceConjuringScheduleBin" = betterproto.message_field(
        162, group="detail"
    )
    echo_shell_bin: "EchoShellScheduleBin" = betterproto.message_field(
        163, group="detail"
    )
    blitz_rush_bin: "BlitzRushScheduleBin" = betterproto.message_field(
        164, group="detail"
    )
    chess_bin: "ChessScheduleBin" = betterproto.message_field(165, group="detail")
    sumo_bin: "SumoScheduleBin" = betterproto.message_field(166, group="detail")
    luna_rite_bin: "LunaRiteScheduleBin" = betterproto.message_field(
        167, group="detail"
    )
    moonfin_trial_bin: "MoonfinTrialScheduleBin" = betterproto.message_field(
        168, group="detail"
    )
    plant_flower_bin: "PlantFlowerScheduleBin" = betterproto.message_field(
        169, group="detail"
    )
    music_game_bin: "MusicGameScheduleBin" = betterproto.message_field(
        170, group="detail"
    )
    roguelike_dungeon_bin: "RoguelikeDungeonScheduleBin" = betterproto.message_field(
        171, group="detail"
    )
    winter_camp_bin: "WinterCampScheduleBin" = betterproto.message_field(
        172, group="detail"
    )
    hachi_bin: "HachiScheduleBin" = betterproto.message_field(173, group="detail")
    tanuki_travel_bin: "TanukiTravelScheduleBin" = betterproto.message_field(
        174, group="detail"
    )
    lantern_rite_bin: "LanternRiteScheduleBin" = betterproto.message_field(
        175, group="detail"
    )
    potion_bin: "PotionScheduleBin" = betterproto.message_field(176, group="detail")
    michiae_matsuri_bin: "MichiaeMatsuriScheduleBin" = betterproto.message_field(
        177, group="detail"
    )
    bartender_bin: "BartenderScheduleBin" = betterproto.message_field(
        178, group="detail"
    )
    irodori_bin: "IrodoriScheduleBin" = betterproto.message_field(179, group="detail")
    crystal_link_bin: "CrystalLinkScheduleBin" = betterproto.message_field(
        180, group="detail"
    )
    photo_bin: "PhotoScheduleBin" = betterproto.message_field(181, group="detail")
    spice_bin: "SpiceScheduleBin" = betterproto.message_field(182, group="detail")
    gacha_bin: "GachaScheduleBin" = betterproto.message_field(183, group="detail")
    luminance_stone_challenge_bin: "LuminanceStoneChallengeScheduleBin" = (
        betterproto.message_field(184, group="detail")
    )
    rogue_diary_bin: "RogueDiaryScheduleBin" = betterproto.message_field(
        185, group="detail"
    )
    summer_time_v2_bin: "SummerTimeV2ScheduleBin" = betterproto.message_field(
        186, group="detail"
    )
    island_party_bin: "IslandPartyScheduleBin" = betterproto.message_field(
        187, group="detail"
    )
    gear_bin: "GearScheduleBin" = betterproto.message_field(188, group="detail")
    graven_innocence_bin: "GravenInnocenceScheduleBin" = betterproto.message_field(
        189, group="detail"
    )
    instable_spray_bin: "InstableSprayScheduleBin" = betterproto.message_field(
        190, group="detail"
    )
    muqadas_potion_bin: "MuqadasPotionScheduleBin" = betterproto.message_field(
        191, group="detail"
    )
    treasure_seelie_bin: "TreasureSeelieScheduleBin" = betterproto.message_field(
        192, group="detail"
    )
    rock_board_explore_bin: "RockBoardExploreScheduleBin" = betterproto.message_field(
        193, group="detail"
    )
    vintage_bin: "VintageScheduleBin" = betterproto.message_field(194, group="detail")
    wind_field_bin: "WindFieldScheduleBin" = betterproto.message_field(
        195, group="detail"
    )
    fungus_fighter_bin: "FungusFighterScheduleBin" = betterproto.message_field(
        196, group="detail"
    )
    char_amusement_bin: "CharAmusementScheduleBin" = betterproto.message_field(
        197, group="detail"
    )
    effigy_challenge_bin: "EffigyChallengeV2ScheduleBin" = betterproto.message_field(
        198, group="detail"
    )


@dataclass(eq=False, repr=False)
class ActivityBin(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    meet_cond_list: List[int] = betterproto.uint32_field(2)
    cond_state_map: Dict[int, bool] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_BOOL
    )
    is_play_open_anim: bool = betterproto.bool_field(4)
    is_settled: bool = betterproto.bool_field(5)
    taken_watcher_id_list: List[int] = betterproto.uint32_field(6)
    finished_watcher_id_list: List[int] = betterproto.uint32_field(7)
    schedule_bin: "ActivityScheduleBin" = betterproto.message_field(8)
    is_started: bool = betterproto.bool_field(9)
    activated_activity_sale_list: List[int] = betterproto.uint32_field(10)
    selected_avatar_reward_id: int = betterproto.uint32_field(11)
    score_limit: int = betterproto.uint32_field(12)
    cur_score: int = betterproto.uint32_field(13)
    taken_score_reward_list: List[int] = betterproto.uint32_field(14)
    is_notify_mail_sent: bool = betterproto.bool_field(15)
    disable_transfer_point_interaction_list: List[
        "Uint32Pair"
    ] = betterproto.message_field(16)
    is_banner_cleared: bool = betterproto.bool_field(17)
    start_world_level: int = betterproto.uint32_field(18)
    is_quick_open: bool = betterproto.bool_field(20)
    expired_cond_list: List[int] = betterproto.uint32_field(21)
    quest_content_map: Dict[int, int] = betterproto.map_field(
        22, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    gift_data_bin: "ActivityGiftDataBin" = betterproto.message_field(23)
    activity_push_tips_map: Dict[int, int] = betterproto.map_field(
        24, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    activity_general_coin_list: List[
        "ActivityGeneralCoinBin"
    ] = betterproto.message_field(25)
    is_common_content_closed: bool = betterproto.bool_field(26)


@dataclass(eq=False, repr=False)
class PlayerActivityCompBin(betterproto.Message):
    activity_bin_map: Dict[int, "ActivityBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    fly_sea_lamp_num: int = betterproto.uint32_field(2)
    fly_sea_lamp_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerMailBin(betterproto.Message):
    mail_id: int = betterproto.uint32_field(1)
    mail_bin: "MailBin" = betterproto.message_field(2)
    is_read: bool = betterproto.bool_field(3)
    is_attachment_got: bool = betterproto.bool_field(4)
    source_type: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlayerMailCompBin(betterproto.Message):
    has_take_attachment_mail_id_list: List[int] = betterproto.uint32_field(1)
    wait_add_mail_map: Dict[int, "MailBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    action_seq_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    new_wait_add_mail_map: Dict[str, "MailBin"] = betterproto.map_field(
        4, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )
    is_collectible_mail_transfered: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ShopGoodsRecordBin(betterproto.Message):
    goods_id: int = betterproto.uint32_field(1)
    bought_num: int = betterproto.uint32_field(2)
    last_buy_time: int = betterproto.fixed32_field(3)


@dataclass(eq=False, repr=False)
class ShopRecordBin(betterproto.Message):
    shop_type: int = betterproto.uint32_field(1)
    goods_record_list: List["ShopGoodsRecordBin"] = betterproto.message_field(2)
    history_goods_record_list: List["ShopGoodsRecordBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerShopCompBin(betterproto.Message):
    shop_record_list: List["ShopRecordBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GachaItemTypeDataBin(betterproto.Message):
    last_gacha_times: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GachaItemParentTypeDataBin(betterproto.Message):
    last_gacha_times: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GachaGuaranteeDataBin(betterproto.Message):
    gacha_rule_id: int = betterproto.uint32_field(1)
    last_gacha_guarantee_times: int = betterproto.uint32_field(2)
    is_cur_schedule_triggered: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class GachaUpDataBin(betterproto.Message):
    gacha_no_up_times: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GachaRecordBin(betterproto.Message):
    gacha_type: int = betterproto.uint32_field(1)
    cur_schedule_id: int = betterproto.uint32_field(2)
    total_gacha_times: int = betterproto.uint32_field(3)
    gacha_guarantee_map: Dict[int, "GachaGuaranteeDataBin"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    cur_schedule_total_gacha_times: int = betterproto.uint32_field(5)
    gacha_item_type_data_map: Dict[int, "GachaItemTypeDataBin"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    gacha_item_parent_type_data_map: Dict[
        int, "GachaItemParentTypeDataBin"
    ] = betterproto.map_field(7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    total_ten_gacha_times: int = betterproto.uint32_field(8)
    gacha_up_data_map: Dict[int, "GachaUpDataBin"] = betterproto.map_field(
        9, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    wish_item_id: int = betterproto.uint32_field(10)
    wish_progress: int = betterproto.uint32_field(11)
    is_new_wish: bool = betterproto.bool_field(12)
    cur_schedule_daily_last_gacha_time: int = betterproto.uint32_field(13)
    cur_schedule_daily_gacha_times: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class PlayerGachaCompBin(betterproto.Message):
    gacha_record_map: Dict[int, "GachaRecordBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    gacha_random: int = betterproto.uint32_field(2)
    daily_gacha_times: int = betterproto.uint32_field(3)
    last_gacha_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class GivingRecordBin(betterproto.Message):
    giving_id: int = betterproto.uint32_field(1)
    is_finished: bool = betterproto.bool_field(2)
    last_group_id: int = betterproto.uint32_field(3)
    is_gadget_giving: bool = betterproto.bool_field(4)
    group_id: int = betterproto.uint32_field(5)
    config_id: int = betterproto.uint32_field(6)
    material_cnt_map: Dict[int, int] = betterproto.map_field(
        8, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlayerGivingCompBin(betterproto.Message):
    giving_record_map: Dict[int, "GivingRecordBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ForgeQueueBin(betterproto.Message):
    transaction_no: int = betterproto.uint32_field(1)
    queue_id: int = betterproto.uint32_field(2)
    forge_id: int = betterproto.uint32_field(3)
    forge_count: int = betterproto.uint32_field(4)
    finish_count: int = betterproto.uint32_field(5)
    taken_count: int = betterproto.uint32_field(6)
    start_time: int = betterproto.fixed32_field(7)
    single_time_cost: int = betterproto.uint32_field(8)
    proud_skill_id_list: List[int] = betterproto.uint32_field(9)
    avatar_id: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlayerForgeCompBin(betterproto.Message):
    last_transaction_no: int = betterproto.uint32_field(1)
    forge_queue_map: Dict[int, "ForgeQueueBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    forge_point: int = betterproto.uint32_field(3)
    last_refresh_time: int = betterproto.fixed32_field(4)
    unlock_forge_id_list: List[int] = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PlayerCombineCompBin(betterproto.Message):
    unlock_combine_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WatcherBin(betterproto.Message):
    watcher_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    var_list: List["WatcherBinVar"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class WatcherBinVar(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class PushTipsBin(betterproto.Message):
    push_tips_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RecordValueBin(betterproto.Message):
    max_critical_damage: float = betterproto.float_field(1)
    max_fly_map_distance: float = betterproto.float_field(2)
    max_fly_time: float = betterproto.float_field(3)
    max_dash_time: float = betterproto.float_field(4)


@dataclass(eq=False, repr=False)
class PlayerWatcherCompBin(betterproto.Message):
    global_watcher_progress_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    finished_global_watcher_list: List[int] = betterproto.uint32_field(2)
    push_tips_list: List["PushTipsBin"] = betterproto.message_field(3)
    watcher_list: List["WatcherBin"] = betterproto.message_field(4)
    record_value: "RecordValueBin" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class TowerTeamBin(betterproto.Message):
    tower_team_id: int = betterproto.uint32_field(1)
    avatar_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class TowerLevelRecordBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    satisfied_cond_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerFloorRecordBin(betterproto.Message):
    floor_id: int = betterproto.uint32_field(1)
    passed_level_record_list: List["TowerLevelRecordBin"] = betterproto.message_field(2)
    floor_star_reward_progress: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class TowerAvatarRecordBin(betterproto.Message):
    cur_fight_prop_map: Dict[int, float] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class TowerCurLevelRecordBin(betterproto.Message):
    cur_floor_index: int = betterproto.uint32_field(1)
    cur_level_index: int = betterproto.uint32_field(2)
    tower_team_list: List["TowerTeamBin"] = betterproto.message_field(3)
    avatar_record_map: Dict[int, "TowerAvatarRecordBin"] = betterproto.map_field(
        4, betterproto.TYPE_UINT64, betterproto.TYPE_MESSAGE
    )
    tower_buff_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_floor_finished: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class TowerLevelBuffListBin(betterproto.Message):
    tower_buff_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class TowerFloorLevelBin(betterproto.Message):
    floor_index: int = betterproto.uint32_field(1)
    level_index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerFightStatisticBin(betterproto.Message):
    avatar_reveal_count_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    kill_count_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    max_single_damage_avatar_id: int = betterproto.uint32_field(3)
    max_single_damage_value: int = betterproto.uint32_field(4)
    take_damage_count_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    normal_skill_count_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    energy_skill_count_map: Dict[int, int] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class TowerFightSummaryPair(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    data: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class TowerMonthlyCombatSummaryBin(betterproto.Message):
    most_reveal_avatar_list: List["TowerFightSummaryPair"] = betterproto.message_field(
        1
    )
    most_kill_avatar_pair: "TowerFightSummaryPair" = betterproto.message_field(2)
    highest_dps_avatr_pair: "TowerFightSummaryPair" = betterproto.message_field(3)
    most_take_damage_avatar_pair: "TowerFightSummaryPair" = betterproto.message_field(4)
    most_cast_normal_skill_avatar_pair: "TowerFightSummaryPair" = (
        betterproto.message_field(5)
    )
    most_cast_energy_skill_avatar_pair: "TowerFightSummaryPair" = (
        betterproto.message_field(6)
    )


@dataclass(eq=False, repr=False)
class TowerMonthlySummaryBin(betterproto.Message):
    tower_schedule_id: int = betterproto.uint32_field(1)
    best_floor_index: int = betterproto.uint32_field(2)
    best_level_index: int = betterproto.uint32_field(3)
    total_star_count: int = betterproto.uint32_field(4)
    monthly_combat_summary: "TowerMonthlyCombatSummaryBin" = betterproto.message_field(
        5
    )
    last_passed_floor_index: int = betterproto.uint32_field(6)
    is_interact: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class PlayerTowerCompBin(betterproto.Message):
    tower_schedule_id: int = betterproto.uint32_field(1)
    tower_floor_record_list: List["TowerFloorRecordBin"] = betterproto.message_field(2)
    last_daily_reward_time: int = betterproto.fixed32_field(3)
    daily_floor_index: int = betterproto.uint32_field(4)
    daily_level_index: int = betterproto.uint32_field(5)
    daily_level_buff_map: Dict[int, "TowerLevelBuffListBin"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    cur_level_record: "TowerCurLevelRecordBin" = betterproto.message_field(7)
    is_interact_this_schedule: bool = betterproto.bool_field(8)
    fight_statistic: "TowerFightStatisticBin" = betterproto.message_field(9)
    tower_monthly_summary_map: Dict[
        int, "TowerMonthlySummaryBin"
    ] = betterproto.map_field(10, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    tower_entrance_floor_record_list: List[
        "TowerFloorRecordBin"
    ] = betterproto.message_field(11)


@dataclass(eq=False, repr=False)
class BlossomCircleCampDataBin(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    circle_camp_id: int = betterproto.uint32_field(2)
    drop_id: int = betterproto.uint32_field(3)
    preview_reward: int = betterproto.uint32_field(4)
    round: int = betterproto.uint32_field(5)
    state: int = betterproto.uint32_field(6)
    progress: int = betterproto.uint32_field(7)
    is_guide_opened: bool = betterproto.bool_field(8)
    update_round_list: List[int] = betterproto.uint32_field(9)
    valid_world_level: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BlossomRefreshDataBin(betterproto.Message):
    circle_camp_list: List["BlossomCircleCampDataBin"] = betterproto.message_field(1)
    last_refresh_time: int = betterproto.fixed32_field(2)
    used_camp_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BlossomInitialSectionDataBin(betterproto.Message):
    section_id: int = betterproto.uint32_field(1)
    timestamp: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class PlayerBlossomCompBin(betterproto.Message):
    recent_used_section_id_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_FIXED32
    )
    initial_section_map: Dict[
        int, "BlossomInitialSectionDataBin"
    ] = betterproto.map_field(2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    refresh_data_map: Dict[int, "BlossomRefreshDataBin"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class SignInRecordBin(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    sign_in_count: int = betterproto.uint32_field(2)
    last_sign_in_time: int = betterproto.fixed32_field(3)
    reward_day_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class BonusActivityRecordBin(betterproto.Message):
    bonus_activity_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerSignInCompBin(betterproto.Message):
    sign_in_record_list: List["SignInRecordBin"] = betterproto.message_field(1)
    bonus_activity_record_list: List[
        "BonusActivityRecordBin"
    ] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class McoinProductConfigBin(betterproto.Message):
    last_buy_time: int = betterproto.fixed32_field(1)
    buy_times: int = betterproto.uint32_field(2)
    config_id: int = betterproto.uint32_field(3)
    product_id_list: List[str] = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class CardProductConfigBin(betterproto.Message):
    last_daily_reward_time: int = betterproto.fixed32_field(1)
    take_effect_time: int = betterproto.fixed32_field(2)
    expire_time: int = betterproto.fixed32_field(3)
    config_id: int = betterproto.uint32_field(4)
    product_id_list: List[str] = betterproto.string_field(5)
    last_send_remind_mail_time: int = betterproto.fixed32_field(6)


@dataclass(eq=False, repr=False)
class GoogleGiftCardProductBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    buy_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ConcertProductBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    buy_times: int = betterproto.uint32_field(2)
    ticket_list: List[str] = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class AppleGiftCardProductBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    buy_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PsnCompensationProductBin(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)
    buy_times: int = betterproto.uint32_field(2)
    last_buy_time: int = betterproto.uint32_field(3)
    month_buy_times: int = betterproto.uint32_field(4)
    month_last_buy_time: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class OrderFinishNotifyItemBin(betterproto.Message):
    item_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class OrderFinishNotifyBin(betterproto.Message):
    product_id: str = betterproto.string_field(1)
    add_mcoin: int = betterproto.uint32_field(2)
    card_product_remain_days: int = betterproto.uint32_field(3)
    order_id: int = betterproto.uint32_field(4)
    item_list: List["OrderFinishNotifyItemBin"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class OrderNotifySaveBin(betterproto.Message):
    platform_type: int = betterproto.uint32_field(1)
    order_notify_list: List["OrderFinishNotifyBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerRechargeCompBin(betterproto.Message):
    finished_order_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    wait_mark_db_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    mcoin_product_list: List["McoinProductConfigBin"] = betterproto.message_field(3)
    card_product_list: List["CardProductConfigBin"] = betterproto.message_field(4)
    mcoin_product_refresh_time: int = betterproto.fixed32_field(5)
    vip_point: int = betterproto.uint32_field(6)
    ps4_package_product_list: List[str] = betterproto.string_field(7)
    google_gift_card_list: List["GoogleGiftCardProductBin"] = betterproto.message_field(
        8
    )
    order_notify_save_list: List["OrderNotifySaveBin"] = betterproto.message_field(9)
    concert_product_list: List["ConcertProductBin"] = betterproto.message_field(10)
    apple_gift_card_list: List["AppleGiftCardProductBin"] = betterproto.message_field(
        11
    )
    psn_compensation_product_list: List[
        "PsnCompensationProductBin"
    ] = betterproto.message_field(12)


@dataclass(eq=False, repr=False)
class BattlePassRewardTagBin(betterproto.Message):
    unlock_status: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    reward_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class BattlePassScheduleBin(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    point: int = betterproto.uint32_field(3)
    unlock_status: int = betterproto.uint32_field(4)
    reward_taken_list: List["BattlePassRewardTagBin"] = betterproto.message_field(5)
    is_extra_paid_reward_taken: bool = betterproto.bool_field(6)
    is_viewed: bool = betterproto.bool_field(7)
    cur_cycle_points: int = betterproto.uint32_field(8)
    is_notify_mail_sent: bool = betterproto.bool_field(9)
    paid_platform_flags: int = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class BattlePassMissionBin(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    mission_status: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerBattlePassCompBin(betterproto.Message):
    schedule_bin_list: List["BattlePassScheduleBin"] = betterproto.message_field(1)
    cur_battle_pass_mission_bin_list: List[
        "BattlePassMissionBin"
    ] = betterproto.message_field(2)
    cur_schedule_id: int = betterproto.uint32_field(3)
    last_refresh_time: int = betterproto.fixed32_field(4)
    weekly_last_refresh_time: int = betterproto.fixed32_field(5)
    cross_schedule_weekly_watcher_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ChatEmojiCollectionBin(betterproto.Message):
    emoji_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerSocialCompBin(betterproto.Message):
    unlock_name_card_list: List[int] = betterproto.uint32_field(1)
    birthday: "Birthday" = betterproto.message_field(2)
    signature: str = betterproto.string_field(3)
    name_card_id: int = betterproto.uint32_field(4)
    recent_mp_player_uid_list: List[int] = betterproto.uint32_field(5)
    last_grant_birthday_benefit_year: int = betterproto.uint32_field(6)
    is_have_first_share: bool = betterproto.bool_field(7)
    is_login_on_birthday: bool = betterproto.bool_field(8)
    report_during_last_time_count: int = betterproto.uint32_field(9)
    report_next_limit_time: int = betterproto.uint32_field(10)
    next_report_time: int = betterproto.uint32_field(11)
    cur_day_social_request_num: int = betterproto.uint32_field(12)
    last_clear_social_request_time: int = betterproto.fixed32_field(13)
    friend_remark_name_map: Dict[int, str] = betterproto.map_field(
        14, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )
    cur_day_ask_friend_num: int = betterproto.uint32_field(15)
    last_ask_friend_time: int = betterproto.fixed32_field(16)
    show_avatar_id_list: List[int] = betterproto.uint32_field(17)
    is_show_avatar: bool = betterproto.bool_field(18)
    show_name_card_id_list: List[int] = betterproto.uint32_field(19)
    chat_emoji_collection: "ChatEmojiCollectionBin" = betterproto.message_field(20)
    signature_audit_bin: "ContentAuditBin" = betterproto.message_field(21)


@dataclass(eq=False, repr=False)
class SecurityAntiOfflineDataBin(betterproto.Message):
    security_check_type: int = betterproto.uint32_field(1)
    security_level: int = betterproto.uint32_field(2)
    succ_num: int = betterproto.uint32_field(3)
    empty_num: int = betterproto.uint32_field(4)
    decrypt_fail_num: int = betterproto.uint32_field(5)
    verify_fail_num: int = betterproto.uint32_field(6)
    cur_succ_num: int = betterproto.uint32_field(7)
    cur_fail_num: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class MpPlayBin(betterproto.Message):
    mp_play_id: int = betterproto.uint32_field(1)
    entry_id: int = betterproto.uint32_field(2)
    play_type: int = betterproto.uint32_field(3)
    is_close: bool = betterproto.bool_field(4)
    reward_remain_uid_list: List[int] = betterproto.uint32_field(7)
    uid_world_level_list: List["MpPlayBinUidWorldLevelBin"] = betterproto.message_field(
        8
    )


@dataclass(eq=False, repr=False)
class MpPlayBinUidWorldLevelBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    world_level: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerMpPlayCompBin(betterproto.Message):
    mp_play_list: List["MpPlayBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class CodexTypeDataBin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    codex_id_list: List[int] = betterproto.uint32_field(2)
    viewed_codex_id_list: List[int] = betterproto.uint32_field(3)
    weapon_max_promote_level_list: List["Uint32PairBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerCodexCompBin(betterproto.Message):
    type_data_list: List["CodexTypeDataBin"] = betterproto.message_field(1)
    recent_viewed_pushtips_list: List[int] = betterproto.uint32_field(5)
    last_read_pushtips_codex_id: int = betterproto.uint32_field(6)
    last_read_pushtips_type_id: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class AchievementBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    status: int = betterproto.uint32_field(2)
    finish_timestamp: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerAchievementCompBin(betterproto.Message):
    achievement_list: List["AchievementBin"] = betterproto.message_field(1)
    reward_taken_goal_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerPersonalLineCompBin(betterproto.Message):
    finished_daily_task_num: int = betterproto.uint32_field(1)
    unlock_personal_line_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerTrialAvatarCompBin(betterproto.Message):
    trial_avatar_index_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HuntingOfferDataBin(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    monster_config_id: int = betterproto.uint32_field(2)
    city_id: int = betterproto.uint32_field(3)
    difficulty: int = betterproto.uint32_field(4)
    state: "HuntingOfferState" = betterproto.enum_field(5)
    is_taken_reward: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class HuntingOfferPair(betterproto.Message):
    refresh_id: int = betterproto.uint32_field(1)
    monster_config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerHuntingCompBin(betterproto.Message):
    hunting_offer_data_list: List["HuntingOfferDataBin"] = betterproto.message_field(1)
    cur_week_finished_hunting_pair_vec: List[
        "HuntingOfferPair"
    ] = betterproto.message_field(2)
    last_refresh_time: int = betterproto.fixed32_field(3)
    cur_week_refreshed_monster_id_list: List[int] = betterproto.uint32_field(4)
    cur_week_refreshed_refresh_id_list: List[int] = betterproto.uint32_field(5)
    is_new_hunting: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class CityReputationRequestBin(betterproto.Message):
    request_id: int = betterproto.uint32_field(1)
    quest_id: int = betterproto.uint32_field(2)
    is_taken_reward: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class CityReputationBin(betterproto.Message):
    city_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(3)
    taken_level_reward_list: List[int] = betterproto.uint32_field(4)
    taken_parent_quest_reward_list: List[int] = betterproto.uint32_field(5)
    history_request_list: List[int] = betterproto.uint32_field(6)
    request_list: List["CityReputationRequestBin"] = betterproto.message_field(7)
    last_refresh_request_time: int = betterproto.fixed32_field(8)
    is_new_request: bool = betterproto.bool_field(9)
    taken_explore_reward_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class PlayerReputationCompBin(betterproto.Message):
    city_reputation_list: List["CityReputationBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class WidgetAnchorPointBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    pos: "VectorBin" = betterproto.message_field(2)
    rot: "VectorBin" = betterproto.message_field(3)
    end_time: int = betterproto.fixed32_field(4)
    scene_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WidgetLunchBoxBin(betterproto.Message):
    slot_material_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class WidgetOneoffGatherPointDetectorBin(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    is_hint_valid: bool = betterproto.bool_field(2)
    hint_center_pos: "VectorBin" = betterproto.message_field(3)
    group_id: int = betterproto.uint32_field(5)
    config_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class WidgetClientCollectorBin(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    curr_points: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WidgetCoolDownInfoBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    last_use_time: int = betterproto.uint64_field(2)
    is_success: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class AttachAvatarWidgetBin(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    cd_over_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WidgetCaptureAnimalBin(betterproto.Message):
    skill_flag: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WidgetLightStoneBin(betterproto.Message):
    is_hint_valid: bool = betterproto.bool_field(1)
    hint_center_pos: "VectorBin" = betterproto.message_field(2)
    group_id: int = betterproto.uint32_field(4)
    config_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class WidgetBackgroundBin(betterproto.Message):
    is_active: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class WidgetDetailBin(betterproto.Message):
    attach_avatar_widget: "AttachAvatarWidgetBin" = betterproto.message_field(
        1, group="detail_bin"
    )
    oneoff_gather_point_detector: "WidgetOneoffGatherPointDetectorBin" = (
        betterproto.message_field(2, group="detail_bin")
    )
    client_collector: "WidgetClientCollectorBin" = betterproto.message_field(
        3, group="detail_bin"
    )
    capture_animal: "WidgetCaptureAnimalBin" = betterproto.message_field(
        4, group="detail_bin"
    )
    light_stone: "WidgetLightStoneBin" = betterproto.message_field(
        2601, group="detail_bin"
    )
    background_widget: "WidgetBackgroundBin" = betterproto.message_field(
        3001, group="detail_bin"
    )


@dataclass(eq=False, repr=False)
class WidgetBin(betterproto.Message):
    material_id: int = betterproto.uint32_field(1)
    slot_occupied_list: List[bool] = betterproto.bool_field(2)
    detail_bin: "WidgetDetailBin" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerWidgetCompBin(betterproto.Message):
    next_widget_id: int = betterproto.uint32_field(1)
    quick_use_material_id: int = betterproto.uint32_field(2)
    last_use_anchor_point_time: int = betterproto.uint32_field(3)
    anchor_point_list: List["WidgetAnchorPointBin"] = betterproto.message_field(4)
    last_use_bonfire_time: int = betterproto.uint32_field(5)
    lunch_box: "WidgetLunchBoxBin" = betterproto.message_field(6)
    oneoff_gather_point_detector_list: List[
        "WidgetOneoffGatherPointDetectorBin"
    ] = betterproto.message_field(7)
    client_collector_list: List["WidgetClientCollectorBin"] = betterproto.message_field(
        8
    )
    group_cool_down_data_list: List[
        "WidgetCoolDownInfoBin"
    ] = betterproto.message_field(9)
    normal_cool_down_data_list: List[
        "WidgetCoolDownInfoBin"
    ] = betterproto.message_field(10)
    attach_avatar_widget: "AttachAvatarWidgetBin" = betterproto.message_field(11)
    widget_bin_list: List["WidgetBin"] = betterproto.message_field(20)
    slot_material_map: Dict[int, int] = betterproto.map_field(
        21, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    is_oneoff_gather_point_detector_transfered: bool = betterproto.bool_field(22)
    is_client_collector_transfered: bool = betterproto.bool_field(23)


@dataclass(eq=False, repr=False)
class ScenePlaySourceBin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ScenePlayBin(betterproto.Message):
    play_id: int = betterproto.uint32_field(1)
    play_type: int = betterproto.uint32_field(2)
    entry_id: int = betterproto.uint32_field(3)
    phase: int = betterproto.uint32_field(4)
    source_bin: "ScenePlaySourceBin" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PlayerScenePlayCompBin(betterproto.Message):
    play_list: List["ScenePlayBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MainCoopBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    status: int = betterproto.uint32_field(2)
    save_point_id_list: List[int] = betterproto.uint32_field(3)
    self_confidence: int = betterproto.int32_field(4)
    normal_var_list: List["Uint32ToInt32PairBin"] = betterproto.message_field(5)
    temp_var_list: List["Uint32ToInt32PairBin"] = betterproto.message_field(6)
    seen_ending_list: List["Uint32PairBin"] = betterproto.message_field(7)
    confidence: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class CoopPointBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    start_main_coop: "MainCoopBin" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CoopChapterBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    cg_list: List[int] = betterproto.uint32_field(3)
    reward_list: List[int] = betterproto.uint32_field(4)
    dialog_list: List[int] = betterproto.uint32_field(5)
    coop_point_list: List["CoopPointBin"] = betterproto.message_field(6)
    seen_ending_list: List["Uint32PairBin"] = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class CoopProgressBin(betterproto.Message):
    coop_point_id: int = betterproto.uint32_field(1)
    main_coop_map: Dict[int, "MainCoopBin"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlayerCoopCompBin(betterproto.Message):
    main_coop_list: List["MainCoopBin"] = betterproto.message_field(1)
    chapter_bin_list: List["CoopChapterBin"] = betterproto.message_field(2)
    progress_bin: "CoopProgressBin" = betterproto.message_field(3)
    viewed_chapter_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerOfferingInfoBin(betterproto.Message):
    offering_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)
    taken_level_reward_list: List[int] = betterproto.uint32_field(3)
    is_reach_max_level: bool = betterproto.bool_field(4)
    is_need_notify_new_max: bool = betterproto.bool_field(5)
    last_version_max_level: int = betterproto.uint32_field(6)
    is_first_interact: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class PlayerOfferingCompBin(betterproto.Message):
    offering_bin_list: List["PlayerOfferingInfoBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ReunionSignInBin(betterproto.Message):
    reunion_sign_in_id: int = betterproto.uint32_field(1)
    sign_in_count: int = betterproto.uint32_field(2)
    last_sign_in_time: int = betterproto.fixed32_field(3)
    reward_day_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ReunionMissionBin(betterproto.Message):
    mission_id: int = betterproto.uint32_field(1)
    taken_reward_watcher_list: List[int] = betterproto.uint32_field(2)
    finished_watcher_list: List[int] = betterproto.uint32_field(3)
    cur_day_watcher_list: List[int] = betterproto.uint32_field(4)
    cur_score: int = betterproto.uint32_field(5)
    is_finished: bool = betterproto.bool_field(6)
    is_taken_reward: bool = betterproto.bool_field(7)
    last_refresh_time: int = betterproto.uint32_field(8)
    is_taken_reward_list: List[bool] = betterproto.bool_field(9)
    watcher_list: List[int] = betterproto.uint32_field(10)


@dataclass(eq=False, repr=False)
class ReunionPrivilegeBin(betterproto.Message):
    privilege_id: int = betterproto.uint32_field(1)
    cur_day_count: int = betterproto.uint32_field(2)
    last_refresh_time: int = betterproto.uint32_field(3)
    total_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ReunionRecordBin(betterproto.Message):
    is_taken_first_gift_reward: bool = betterproto.bool_field(1)
    first_gift_reward_id: int = betterproto.uint32_field(2)
    sign_in_bin: "ReunionSignInBin" = betterproto.message_field(3)
    mission_bin: "ReunionMissionBin" = betterproto.message_field(4)
    privilege_bin: "ReunionPrivilegeBin" = betterproto.message_field(5)
    reunion_finish_time: int = betterproto.fixed32_field(6)
    is_activated: bool = betterproto.bool_field(7)
    game_version: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class PlayerReunionCompBin(betterproto.Message):
    last_activate_reunion_time: int = betterproto.fixed32_field(1)
    reunion_record: "ReunionRecordBin" = betterproto.message_field(2)
    is_activated_when_close: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class PlayerRoutineBin(betterproto.Message):
    routine_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    is_finished: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerRoutineTypeBin(betterproto.Message):
    routine_type: int = betterproto.uint32_field(1)
    finished_num: int = betterproto.uint32_field(2)
    last_refresh_time: int = betterproto.uint32_field(3)
    routine_bin_list: List["PlayerRoutineBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerRoutineCompBin(betterproto.Message):
    routine_type_bin_list: List["PlayerRoutineTypeBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MiracleRingDropParam(betterproto.Message):
    tag: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerMiracleRingCompBin(betterproto.Message):
    last_take_reward_time: int = betterproto.uint32_field(1)
    drop_param_list: List["MiracleRingDropParam"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MechanicusBin(betterproto.Message):
    mechanicus_id: int = betterproto.uint32_field(1)
    coin: int = betterproto.uint32_field(2)
    gear_level_pair_list: List["Uint32PairBin"] = betterproto.message_field(3)
    open_sequence_id_list: List[int] = betterproto.uint32_field(4)
    is_finish_teach_dungeon: bool = betterproto.bool_field(5)
    finish_difficult_level_list: List[int] = betterproto.uint32_field(6)
    punish_over_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class PlayerMechanicusCompBin(betterproto.Message):
    cur_mechanicus_bin: "MechanicusBin" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class OpActivityRecordBin(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    use_bonus_count: int = betterproto.uint32_field(2)
    last_refresh_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerOpActivityCompBin(betterproto.Message):
    op_activity_recored_list: List["OpActivityRecordBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerGalleryCompBin(betterproto.Message):
    valid_gallery_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class RegionSearchSourceBin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    param: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RegionSearchRegionBin(betterproto.Message):
    region_id: int = betterproto.uint32_field(1)
    oneoff_group_list: List[int] = betterproto.uint32_field(2)
    recycle_group_list: List[int] = betterproto.uint32_field(3)
    recycle_progress: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class RegionSearchBin(betterproto.Message):
    search_id: int = betterproto.uint32_field(1)
    state: int = betterproto.uint32_field(2)
    progress: int = betterproto.uint32_field(3)
    region_list: List["RegionSearchRegionBin"] = betterproto.message_field(4)
    is_entered: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class RegionSearchPlayBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    source: "RegionSearchSourceBin" = betterproto.message_field(2)
    search_list: List["RegionSearchBin"] = betterproto.message_field(3)
    is_entered: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class PlayerRegionSearchCompBin(betterproto.Message):
    play_list: List["RegionSearchPlayBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerTalkCompBin(betterproto.Message):
    npc_fisrt_met_id_list: List[int] = betterproto.uint32_field(1)
    finished_talk_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerFishingCompBin(betterproto.Message):
    last_fish_rod: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CustomDungeonBriefBin(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    state: int = betterproto.uint32_field(3)
    last_save_time: int = betterproto.uint32_field(4)
    setting: "CustomDungeonSettingBin" = betterproto.message_field(5)
    abstract: "CustomDungeonAbstractBin" = betterproto.message_field(6)
    tag_list: List[int] = betterproto.uint32_field(7)
    is_psn_platform: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class OfficialCustomDungeonBin(betterproto.Message):
    dungeon_id: int = betterproto.uint32_field(1)
    win_times: int = betterproto.uint32_field(2)
    dungeon_guid: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class CustomDungeonBattleRecord(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    min_cost_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerCustomDungeonCompBin(betterproto.Message):
    brief_list: List["CustomDungeonBriefBin"] = betterproto.message_field(1)
    dungeon_guid_idx: int = betterproto.uint32_field(2)
    store_dungeon_list: List[int] = betterproto.uint64_field(3)
    last_recommend_list: List[int] = betterproto.uint64_field(4)
    group_id: int = betterproto.uint32_field(5)
    official_dungeon_list: List["OfficialCustomDungeonBin"] = betterproto.message_field(
        6
    )
    is_enable_ugc: bool = betterproto.bool_field(7)
    ban_expire_time: int = betterproto.uint32_field(8)
    battle_record_list: List["CustomDungeonBattleRecord"] = betterproto.message_field(9)
    is_ever_liked: bool = betterproto.bool_field(10)
    last_got_recommend_time: int = betterproto.uint32_field(11)


@dataclass(eq=False, repr=False)
class UgcBin(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerUgcCompBin(betterproto.Message):
    ugc_bin_map: Dict[int, "UgcBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    ban_publish_expire_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerHomeBlockBin(betterproto.Message):
    block_id: int = betterproto.uint32_field(1)
    is_unlocked: bool = betterproto.bool_field(2)
    deploy_furniture_count: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerHomeSceneBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    block_bin_list: List["PlayerHomeBlockBin"] = betterproto.message_field(2)
    is_unlocked: bool = betterproto.bool_field(3)
    version: int = betterproto.uint32_field(4)
    audit_state: int = betterproto.uint32_field(5)
    submit_time: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerHomeModuleBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_bin_list: List["PlayerHomeSceneBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeBasicCompSnapshotBin(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class HomeSubFieldSnapShotBin(betterproto.Message):
    seed_id: int = betterproto.uint32_field(1)
    end_time: int = betterproto.fixed32_field(2)
    home_gather_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeFieldSnapShotBin(betterproto.Message):
    field_guid: int = betterproto.uint32_field(1)
    furniture_id: int = betterproto.uint32_field(2)
    spawn_pos: "VectorBin" = betterproto.message_field(3)
    sub_field_list: List["HomeSubFieldSnapShotBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class HomeTransferSnapShotBin(betterproto.Message):
    furniture_guid: int = betterproto.uint32_field(1)
    spawn_pos: "VectorBin" = betterproto.message_field(2)
    furniture_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeMarkPointNpcDataBin(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    costume_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class HomeMarkPointSuiteDataBin(betterproto.Message):
    suite_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class HomeMarkPointFurnitureDataBin(betterproto.Message):
    guid: int = betterproto.uint32_field(1)
    furniture_id: int = betterproto.uint32_field(2)
    furniture_type: int = betterproto.uint32_field(3)
    pos: "VectorBin" = betterproto.message_field(4)
    npc_data: "HomeMarkPointNpcDataBin" = betterproto.message_field(6, group="extra")
    suite_data: "HomeMarkPointSuiteDataBin" = betterproto.message_field(
        7, group="extra"
    )


@dataclass(eq=False, repr=False)
class HomeSceneSnapshotBin(betterproto.Message):
    scene_id: int = betterproto.uint32_field(1)
    deploy_npc_list: List["HomeNpcBin"] = betterproto.message_field(2)
    furniture_suite_list: List["HomeFurnitureSuiteBin"] = betterproto.message_field(3)
    main_house: "HomeFurnitureBin" = betterproto.message_field(4)
    djinn_pos: "VectorBin" = betterproto.message_field(5)
    field_bin_list: List["HomeFieldSnapShotBin"] = betterproto.message_field(6)
    transfer_bin_list: List["HomeTransferSnapShotBin"] = betterproto.message_field(7)
    normal_mark_point_list: List[
        "HomeMarkPointFurnitureDataBin"
    ] = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class HomeModuleSnapshotBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    cur_room_scene_id: int = betterproto.uint32_field(2)
    scene_bin_list: List["HomeSceneSnapshotBin"] = betterproto.message_field(3)
    furniture_arrange_count_list: List["Uint32PairBin"] = betterproto.message_field(4)
    world_scene_block_comfort_value_list: List[int] = betterproto.uint32_field(5)
    room_scene_comfort_value: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class HomeSceneCompSnapshotBin(betterproto.Message):
    cur_module_id: int = betterproto.uint32_field(1)
    module_bin_list: List["HomeModuleSnapshotBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeSnapshotBin(betterproto.Message):
    basic_snapshot: "HomeBasicCompSnapshotBin" = betterproto.message_field(1)
    scene_snapshot: "HomeSceneCompSnapshotBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FurnitureMakeBeHelpedBin(betterproto.Message):
    player_name: str = betterproto.string_field(1)
    time: int = betterproto.fixed32_field(2)
    uid: int = betterproto.uint32_field(3)
    icon: int = betterproto.uint32_field(4)
    profile_picture_bin: "ProfilePictureBin" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class FurnitureMakeHelpBin(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FurnitureMakeTimesBin(betterproto.Message):
    furniture_id: int = betterproto.uint32_field(1)
    make_times: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerFunitureMakeBin(betterproto.Message):
    make_times_bin_list: List["FurnitureMakeTimesBin"] = betterproto.message_field(1)
    make_slots_bin_list: List["FurnitureMakeSlotsBin"] = betterproto.message_field(2)
    help_bin_list: List["FurnitureMakeHelpBin"] = betterproto.message_field(3)
    helped_bin_list: List["FurnitureMakeBeHelpedBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerLimitedShopNpcPosBin(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    scene_id: int = betterproto.uint32_field(4)
    block_id: int = betterproto.uint32_field(5)
    index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class PlayerHomeLimitedShopBin(betterproto.Message):
    last_refresh_time: int = betterproto.uint32_field(1)
    npc_pos_bin_list: List["PlayerLimitedShopNpcPosBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeResourceBin(betterproto.Message):
    store_value: int = betterproto.uint32_field(1)
    last_refresh_time: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class PlayerHomeResourceBin(betterproto.Message):
    home_coin_bin: "HomeResourceBin" = betterproto.message_field(1)
    fetter_exp_bin: "HomeResourceBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class HomeAvatarDataBin(betterproto.Message):
    avatar_id: int = betterproto.uint32_field(1)
    talk_id_list: List[int] = betterproto.uint32_field(2)
    event_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class HomeAvatarRewardEventBin(betterproto.Message):
    order: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)
    random_position: int = betterproto.uint32_field(3)
    guid: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerHomeAvatarBin(betterproto.Message):
    home_avatar_list: List["HomeAvatarDataBin"] = betterproto.message_field(1)
    show_avatar_id_list: List[int] = betterproto.uint32_field(2)
    reward_event_list: List["HomeAvatarRewardEventBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeWorldWoodExchangeDataBin(betterproto.Message):
    wood_id: int = betterproto.uint32_field(1)
    exchange_count: int = betterproto.uint32_field(2)
    last_refresh_time: int = betterproto.fixed32_field(3)


@dataclass(eq=False, repr=False)
class PlayerHomeBlueprintSlotBin(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    share_code: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class PlayerHomeBlueprintBin(betterproto.Message):
    blueprint_guid_idx: int = betterproto.uint32_field(1)
    slot_bin_list: List["PlayerHomeBlueprintSlotBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class PlayerHomeCompBin(betterproto.Message):
    friend_enter_home_option: int = betterproto.int32_field(1)
    init_home_modue_id: int = betterproto.uint32_field(2)
    module_list: List["PlayerHomeModuleBin"] = betterproto.message_field(4)
    unlocked_module_id_list: List[int] = betterproto.uint32_field(5)
    snapshot: "HomeSnapshotBin" = betterproto.message_field(6)
    unlocked_formula_furniture_id_list: List[int] = betterproto.uint32_field(7)
    unlocked_furniture_suite_id_list: List[int] = betterproto.uint32_field(8)
    levelup_reward_got_level_list: List[int] = betterproto.uint32_field(9)
    furniture_make_bin: "PlayerFunitureMakeBin" = betterproto.message_field(10)
    home_resource_bin: "PlayerHomeResourceBin" = betterproto.message_field(11)
    arrangement_furniture_suite_id_list: List[int] = betterproto.uint32_field(12)
    limited_shop_bin: "PlayerHomeLimitedShopBin" = betterproto.message_field(13)
    is_ever_enter_self_home_world: bool = betterproto.bool_field(14)
    home_avatar_bin: "PlayerHomeAvatarBin" = betterproto.message_field(15)
    last_save_time: int = betterproto.fixed32_field(16)
    prior_check_time: int = betterproto.uint32_field(17)
    transfer_home_point: int = betterproto.uint32_field(19)
    seen_module_id_list: List[int] = betterproto.uint32_field(20)
    unlocked_bgm_id_list: List[int] = betterproto.uint32_field(21)
    is_transfer_to_safe_point: bool = betterproto.bool_field(22)
    audit_version_index: int = betterproto.uint32_field(23)
    wood_exchange_data_bin_list: List[
        "HomeWorldWoodExchangeDataBin"
    ] = betterproto.message_field(24)
    blueprint_bin: "PlayerHomeBlueprintBin" = betterproto.message_field(25)


@dataclass(eq=False, repr=False)
class PlayerOfflineOpBin(betterproto.Message):
    index_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class H5ActivityWatcherBin(betterproto.Message):
    h5_activity_watcher_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class H5ActivityBin(betterproto.Message):
    h5_activity_schedule_id: int = betterproto.uint32_field(1)
    last_refresh_time: int = betterproto.uint32_field(2)
    finished_h5_activity_watcher_list: List[int] = betterproto.uint32_field(3)
    h5_activity_watcher_list: List["H5ActivityWatcherBin"] = betterproto.message_field(
        4
    )
    h5_activity_id: int = betterproto.uint32_field(5)
    unaccept_h5_activity_watcher_list: List[int] = betterproto.uint32_field(6)
    is_finish_watcher_logged: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class PlayerH5ActivityCompBin(betterproto.Message):
    h5_activity_list: List["H5ActivityBin"] = betterproto.message_field(1)
    client_red_dot_timestamp: int = betterproto.fixed32_field(2)


@dataclass(eq=False, repr=False)
class MatchPunishBin(betterproto.Message):
    match_id: int = betterproto.uint32_field(1)
    punish_times: int = betterproto.uint32_field(2)
    punish_end_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerMatchCompBin(betterproto.Message):
    punish_list: List["MatchPunishBin"] = betterproto.message_field(1)
    last_punish_refresh_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerExhibitionBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    replaceable_value: int = betterproto.uint32_field(2)
    accumulable_value: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerExhibitionCompBin(betterproto.Message):
    exhibition_list: List["PlayerExhibitionBin"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerGroupLinkBin(betterproto.Message):
    link_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    cur_bundle_id: int = betterproto.uint32_field(3)
    schedule_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerGroupBundleBin(betterproto.Message):
    bundle_id: int = betterproto.uint32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    is_activated: bool = betterproto.bool_field(3)
    schedule_id: int = betterproto.uint32_field(4)
    is_show_mark: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class PlayerGroupBundleFinishBin(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)
    bundle_id_list: List[int] = betterproto.uint32_field(2)
    schedule_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerGroupLinkCompBin(betterproto.Message):
    link_bin_list: List["PlayerGroupLinkBin"] = betterproto.message_field(2)
    bundle_bin_list: List["PlayerGroupBundleBin"] = betterproto.message_field(3)
    finish_bundle_bin_list: List[
        "PlayerGroupBundleFinishBin"
    ] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class FireworksParamBin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    value: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class FireworksReformBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    reform_param_bin_list: List["FireworksParamBin"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class FireworksLaunchSchemeBin(betterproto.Message):
    scheme_id: int = betterproto.uint32_field(1)
    fireworks_id_list: List[int] = betterproto.uint32_field(2)
    launch_param_bin_list: List["FireworksParamBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerFireworksCompBin(betterproto.Message):
    fireworks_reform_bin_list: List["FireworksReformBin"] = betterproto.message_field(1)
    last_use_launch_scheme_id: int = betterproto.uint32_field(2)
    launch_scheme_bin_list: List[
        "FireworksLaunchSchemeBin"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerCityCompBin(betterproto.Message):
    city_map: Dict[int, "CityBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class RegionalPlayVarBin(betterproto.Message):
    type: int = betterproto.uint32_field(1)
    value: float = betterproto.float_field(2)


@dataclass(eq=False, repr=False)
class DeathZoneBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    is_open: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PlayerRegionalPlayCompBin(betterproto.Message):
    var_bin_list: List["RegionalPlayVarBin"] = betterproto.message_field(1)
    death_zone_bin_list: List["DeathZoneBin"] = betterproto.message_field(2)
    last_play_name: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ShareCdInfoBin(betterproto.Message):
    share_cd_id: int = betterproto.uint32_field(1)
    config_index: int = betterproto.uint32_field(2)
    last_use_time: int = betterproto.uint64_field(3)
    cd_token: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class PlayerShareCdCompBin(betterproto.Message):
    share_cd_info_map: Dict[int, "ShareCdInfoBin"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class GcgPlayerBriefBin(betterproto.Message):
    controller_id: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)
    nick_name: str = betterproto.string_field(3)
    profile_picture: "ProfilePictureBin" = betterproto.message_field(4)
    card_id_list: List[int] = betterproto.uint32_field(5)
    card_face_map: Dict[int, int] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GcgGameBriefBin(betterproto.Message):
    app_id: int = betterproto.uint32_field(1)
    game_uid: int = betterproto.uint32_field(2)
    business_type: int = betterproto.uint32_field(3)
    player_brief_bin_list: List["GcgPlayerBriefBin"] = betterproto.message_field(4)
    verify_code: int = betterproto.uint32_field(5)
    game_id: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgdsDeckBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    character_card_list: List[int] = betterproto.uint32_field(3)
    card_list: List[int] = betterproto.uint32_field(4)
    card_back_id: int = betterproto.uint32_field(5)
    field_id: int = betterproto.uint32_field(6)
    create_time: int = betterproto.fixed32_field(7)


@dataclass(eq=False, repr=False)
class GcgdsCardBin(betterproto.Message):
    card_id: int = betterproto.uint32_field(1)
    num: int = betterproto.uint32_field(2)
    unlock_face_type_list: List[int] = betterproto.uint32_field(3)
    face_type: int = betterproto.uint32_field(4)
    proficiency: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class GcgDeckSystemBin(betterproto.Message):
    deck_list: List["GcgdsDeckBin"] = betterproto.message_field(1)
    card_list: List["GcgdsCardBin"] = betterproto.message_field(2)
    unlock_card_back_id_list: List[int] = betterproto.uint32_field(3)
    unlock_field_id_list: List[int] = betterproto.uint32_field(4)
    cur_deck_id: int = betterproto.uint32_field(5)
    unlock_deck_id_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class GcgtcTavernChallengeBin(betterproto.Message):
    character_id: int = betterproto.uint32_field(1)
    unlock_level_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GcgTavernBin(betterproto.Message):
    character_id: int = betterproto.uint32_field(1)
    level_id: int = betterproto.uint32_field(2)
    point_id: int = betterproto.uint32_field(3)
    is_last_duel_win: bool = betterproto.bool_field(4)
    tavern_challenge_bin_list: List[
        "GcgtcTavernChallengeBin"
    ] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GcgMatchBin(betterproto.Message):
    match_id: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)
    win_streak_count: int = betterproto.uint32_field(3)
    lose_streak_count: int = betterproto.uint32_field(4)
    refuse_count: int = betterproto.uint32_field(5)
    punish_end_time: int = betterproto.fixed32_field(6)


@dataclass(eq=False, repr=False)
class GcgBasicBin(betterproto.Message):
    level: int = betterproto.uint32_field(1)
    exp: int = betterproto.uint32_field(2)
    level_reward_taken_list: List[int] = betterproto.uint32_field(3)
    match_bin_list: List["GcgMatchBin"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GcgLevelBin(betterproto.Message):
    level_id: int = betterproto.uint32_field(1)
    finished_challenge_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgBossChallengeBin(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    unlock_level_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgLevelChallengeBin(betterproto.Message):
    level_bin_list: List["GcgLevelBin"] = betterproto.message_field(1)
    pre_config_id: int = betterproto.uint32_field(2)
    pre_level_id: int = betterproto.uint32_field(3)
    pre_level_type: int = betterproto.uint32_field(4)
    unlock_world_challenge_list: List[int] = betterproto.uint32_field(5)
    unlock_boss_challenge_list: List["GcgBossChallengeBin"] = betterproto.message_field(
        6
    )


@dataclass(eq=False, repr=False)
class GcgConstNpcBin(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    scene_point_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GcgTavernSceneBuilderBin(betterproto.Message):
    distribution_id: int = betterproto.uint32_field(1)
    last_refresh_game_time: int = betterproto.uint32_field(2)
    const_npc_list: List["GcgConstNpcBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class GcgWeekNpcBin(betterproto.Message):
    npc_id: int = betterproto.uint32_field(1)
    level_id: int = betterproto.uint32_field(2)
    is_unlock: bool = betterproto.bool_field(3)
    finish_time: int = betterproto.uint32_field(4)
    scene_point_id: int = betterproto.uint32_field(5)
    is_delete_from_tavern: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class GcgWeekChallengeBin(betterproto.Message):
    last_refresh_time: int = betterproto.uint32_field(1)
    last_refresh_gcg_level: int = betterproto.uint32_field(2)
    week_npc_list: List["GcgWeekNpcBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerGcgCompBin(betterproto.Message):
    deck_system_bin: "GcgDeckSystemBin" = betterproto.message_field(1)
    tavern_bin: "GcgTavernBin" = betterproto.message_field(2)
    basic_bin: "GcgBasicBin" = betterproto.message_field(3)
    level_challenge_bin: "GcgLevelChallengeBin" = betterproto.message_field(4)
    tavern_scene_builder_bin: "GcgTavernSceneBuilderBin" = betterproto.message_field(5)
    week_challenge_bin: "GcgWeekChallengeBin" = betterproto.message_field(6)
    game_brief_bin: "GcgGameBriefBin" = betterproto.message_field(101)


@dataclass(eq=False, repr=False)
class AranaraCollectionListBin(betterproto.Message):
    collection_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AranaraCollectionSuiteBin(betterproto.Message):
    collection_type: int = betterproto.uint32_field(1)
    state_collection_map: Dict[int, "AranaraCollectionListBin"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlayerAranaraCollectionCompBin(betterproto.Message):
    collection_suite_list: List[
        "AranaraCollectionSuiteBin"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerDataBin(betterproto.Message):
    basic_bin: "PlayerBasicCompBin" = betterproto.message_field(1)
    avatar_bin: "PlayerAvatarCompBin" = betterproto.message_field(2)
    quest_bin: "PlayerQuestCompBin" = betterproto.message_field(3)
    shop_bin: "PlayerShopCompBin" = betterproto.message_field(4)
    item_bin: "PlayerItemCompBin" = betterproto.message_field(5)
    dungeon_bin: "PlayerDungeonCompBin" = betterproto.message_field(6)
    scene_bin: "PlayerSceneCompBin" = betterproto.message_field(7)
    bored_bin: "PlayerBoredCompBin" = betterproto.message_field(8)
    mp_bin: "PlayerMpCompBin" = betterproto.message_field(9)
    cook_bin: "PlayerCookCompBin" = betterproto.message_field(10)
    mail_bin: "PlayerMailCompBin" = betterproto.message_field(11)
    login_bin: "PlayerLoginCompBin" = betterproto.message_field(12)
    offline_msg_bin: "PlayerOfflineMsgCompBin" = betterproto.message_field(13)
    daily_task_bin: "PlayerDailyTaskCompBin" = betterproto.message_field(14)
    rand_task_bin: "PlayerRandTaskCompBin" = betterproto.message_field(15)
    gacha_bin: "PlayerGachaCompBin" = betterproto.message_field(16)
    giving_bin: "PlayerGivingCompBin" = betterproto.message_field(17)
    forge_bin: "PlayerForgeCompBin" = betterproto.message_field(18)
    investigation_bin: "PlayerInvestigationCompBin" = betterproto.message_field(19)
    activity_bin: "PlayerActivityCompBin" = betterproto.message_field(20)
    watcher_bin: "PlayerWatcherCompBin" = betterproto.message_field(21)
    tower_bin: "PlayerTowerCompBin" = betterproto.message_field(22)
    sign_in_bin: "PlayerSignInCompBin" = betterproto.message_field(23)
    battle_pass_bin: "PlayerBattlePassCompBin" = betterproto.message_field(24)
    blossom_bin: "PlayerBlossomCompBin" = betterproto.message_field(25)
    recharge_bin: "PlayerRechargeCompBin" = betterproto.message_field(26)
    mp_play_bin: "PlayerMpPlayCompBin" = betterproto.message_field(27)
    social_bin: "PlayerSocialCompBin" = betterproto.message_field(28)
    codex_bin: "PlayerCodexCompBin" = betterproto.message_field(29)
    achievement_bin: "PlayerAchievementCompBin" = betterproto.message_field(30)
    trial_avatar_bin: "PlayerTrialAvatarCompBin" = betterproto.message_field(31)
    personal_line_bin: "PlayerPersonalLineCompBin" = betterproto.message_field(32)
    reputation_bin: "PlayerReputationCompBin" = betterproto.message_field(33)
    widget_comp_bin: "PlayerWidgetCompBin" = betterproto.message_field(34)
    hunting_bin: "PlayerHuntingCompBin" = betterproto.message_field(35)
    scene_play_bin: "PlayerScenePlayCompBin" = betterproto.message_field(36)
    combine_bin: "PlayerCombineCompBin" = betterproto.message_field(37)
    coop_bin: "PlayerCoopCompBin" = betterproto.message_field(38)
    offering_bin: "PlayerOfferingCompBin" = betterproto.message_field(39)
    routine_bin: "PlayerRoutineCompBin" = betterproto.message_field(40)
    reunion_bin: "PlayerReunionCompBin" = betterproto.message_field(41)
    miracle_ring_bin: "PlayerMiracleRingCompBin" = betterproto.message_field(42)
    mechanicus_bin: "PlayerMechanicusCompBin" = betterproto.message_field(43)
    op_activity_bin: "PlayerOpActivityCompBin" = betterproto.message_field(44)
    gallery_bin: "PlayerGalleryCompBin" = betterproto.message_field(45)
    region_search_bin: "PlayerRegionSearchCompBin" = betterproto.message_field(46)
    talk_bin: "PlayerTalkCompBin" = betterproto.message_field(47)
    home_bin: "PlayerHomeCompBin" = betterproto.message_field(48)
    offline_op_bin: "PlayerOfflineOpBin" = betterproto.message_field(49)
    h5_activity_bin: "PlayerH5ActivityCompBin" = betterproto.message_field(50)
    match_bin: "PlayerMatchCompBin" = betterproto.message_field(51)
    exhibition_bin: "PlayerExhibitionCompBin" = betterproto.message_field(52)
    group_link_bin: "PlayerGroupLinkCompBin" = betterproto.message_field(53)
    fishing_bin: "PlayerFishingCompBin" = betterproto.message_field(54)
    city_bin: "PlayerCityCompBin" = betterproto.message_field(55)
    fireworks_bin: "PlayerFireworksCompBin" = betterproto.message_field(56)
    regional_play_bin: "PlayerRegionalPlayCompBin" = betterproto.message_field(57)
    custom_dungeon_bin: "PlayerCustomDungeonCompBin" = betterproto.message_field(58)
    share_cd_bin: "PlayerShareCdCompBin" = betterproto.message_field(59)
    ugc_bin: "PlayerUgcCompBin" = betterproto.message_field(60)
    aranara_collection_bin: "PlayerAranaraCollectionCompBin" = (
        betterproto.message_field(61)
    )


@dataclass(eq=False, repr=False)
class PlayerJsonData(betterproto.Message):
    is_proficient_player: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class PlayerExtJsonData(betterproto.Message):
    reg_platform: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerExtraBinData(betterproto.Message):
    anti_offline_data_map: Dict[
        int, "SecurityAntiOfflineDataBin"
    ] = betterproto.map_field(1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)


@dataclass(eq=False, repr=False)
class PlayerBeforeLoginBinData(betterproto.Message):
    finish_quest_res_collection: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class PlayerData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    last_login_time: int = betterproto.fixed32_field(3)
    bin: bytes = betterproto.bytes_field(4)
    data_version: int = betterproto.uint32_field(5)
    level: int = betterproto.uint32_field(6)
    exp: int = betterproto.uint32_field(7)
    json_data: str = betterproto.string_field(8)
    extra_bin_data: bytes = betterproto.bytes_field(9)
    online_id: str = betterproto.string_field(10)
    psn_id: str = betterproto.string_field(11)
    before_login_bin_data: bytes = betterproto.bytes_field(12)


@dataclass(eq=False, repr=False)
class ContentAuditBin(betterproto.Message):
    content: str = betterproto.string_field(1)
    audit_state: int = betterproto.uint32_field(2)
    submit_time: int = betterproto.uint32_field(3)
    submit_count: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SeaLampPlayerContributionNotify(betterproto.Message):
    total_contribution: int = betterproto.uint32_field(1)
    add_progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SeaLampProgressNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)
    is_finished: bool = betterproto.bool_field(3)
    is_changed_by_muip: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class SeaLampBroadcastNotify(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    last_phase: int = betterproto.uint32_field(2)
    phase: int = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(4)
    is_changed_by_muip: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class SeaLampSetProgressByMuipReq(betterproto.Message):
    progress: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SeaLampSetProgressByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    old_progress: int = betterproto.uint32_field(2)
    new_progress: int = betterproto.uint32_field(3)
    factor: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SeaLampProgressImplementNotify(betterproto.Message):
    msg: "SeaLampProgressNotify" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SeaLampClearProgressByGmNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SeaLampAddProgressByMuipReq(betterproto.Message):
    add_progress: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SeaLampAddProgressByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    old_progress: int = betterproto.uint32_field(2)
    new_progress: int = betterproto.uint32_field(3)
    factor: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class SeaLampActivityDataMuip(betterproto.Message):
    progress: int = betterproto.uint32_field(1)
    phase_id: int = betterproto.uint32_field(2)
    factor: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetActivityDataByMuipReq(betterproto.Message):
    activity_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetActivityDataByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    activity_id: int = betterproto.uint32_field(2)
    schedule_id: int = betterproto.uint32_field(3)
    is_started: bool = betterproto.bool_field(4)
    is_finished: bool = betterproto.bool_field(5)
    sea_lamp_data: "SeaLampActivityDataMuip" = betterproto.message_field(
        10, group="detail"
    )


@dataclass(eq=False, repr=False)
class ServerGcgOperationReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    op: "GcgOperation" = betterproto.message_field(2)
    op_seq: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerGcgDuelNotify(betterproto.Message):
    duel: "GcgDuel" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ServerGcgAskDuelReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGcgNewGameInfoNotify(betterproto.Message):
    app_id: int = betterproto.uint32_field(1)
    game_brief_data: "GcgGameBriefData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerGcggmCommandReq(betterproto.Message):
    msg_list: List[str] = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ServerGcggmCommandRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ret_msg: str = betterproto.string_field(2)
    ret_extra_content: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ServerGcgInitFinishReq(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ServerGcgSyncReq(betterproto.Message):
    game_uid: int = betterproto.uint32_field(1)
    verify_code: int = betterproto.uint32_field(2)
    is_login: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ServerGcgSyncRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    game_uid: int = betterproto.uint32_field(2)
    verify_code: int = betterproto.uint32_field(3)
    app_id: int = betterproto.uint32_field(4)
    is_login: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class GcgPlayerData(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    profile_picture: "ProfilePicture" = betterproto.message_field(3)
    duel_extra: "GcgDuelExtra" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ServerGcgCreateSingleGameReq(betterproto.Message):
    game_id: int = betterproto.uint32_field(1)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(2)
    player_data: "GcgPlayerData" = betterproto.message_field(3)
    custom_param_list: List[int] = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ServerGcgCreateSingleGameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    game_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerGcgStopGameReq(betterproto.Message):
    game_uid: int = betterproto.uint32_field(1)
    game_id: int = betterproto.uint32_field(2)
    verify_code: int = betterproto.uint32_field(3)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class ServerGcgStopGameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    game_uid: int = betterproto.uint32_field(2)
    game_id: int = betterproto.uint32_field(3)
    verify_code: int = betterproto.uint32_field(4)
    app_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class ServerGcgSkillPreviewAskReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGcgSkillPreviewAskRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ServerGcgCreateMultiGameReq(betterproto.Message):
    game_id: int = betterproto.uint32_field(1)
    business_type: "GcgGameBusinessType" = betterproto.enum_field(2)
    player_data_1: "GcgPlayerData" = betterproto.message_field(3)
    player_data_2: "GcgPlayerData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ServerGcgCreateMultiGameRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    game_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerStatusRedisData(betterproto.Message):
    status: "PlayerStatusType" = betterproto.enum_field(1)
    gameserver_id: int = betterproto.uint32_field(2)
    login_rand: int = betterproto.uint64_field(3)
    login_time: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class MailRedisData(betterproto.Message):
    mail_bin: "MailBin" = betterproto.message_field(1)
    id: int = betterproto.uint32_field(2)
    is_read: bool = betterproto.bool_field(3)
    is_attachment_got: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class MailMaxIdRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MailIdSortedSetRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MailTicketHashMapRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MailTransactionIdHashMapRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MailTicketMailIdHashMapRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class TicketTimeBin(betterproto.Message):
    enque_time: int = betterproto.uint32_field(1)
    ticket: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class OfflineMsgRedisData(betterproto.Message):
    last_index: int = betterproto.uint32_field(1)
    offline_msg_list: List["OfflineMsgBin"] = betterproto.message_field(2)
    recent_ticket_list: List["TicketTimeBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class HomeOfflineMsgRedisData(betterproto.Message):
    last_index: int = betterproto.uint32_field(1)
    offline_msg_list: List["HomeOfflineMsgBin"] = betterproto.message_field(2)
    recent_ticket_list: List["TicketTimeBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PlayerFriendListRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerPsnFriendListRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerAskFriendListRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerBlacklistRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerPsnBlacklistRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerMpBriefData(betterproto.Message):
    is_mp_avaliable: bool = betterproto.bool_field(1)
    is_only_mp_with_ps_player: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class PlayerSocialBriefData(betterproto.Message):
    birthday: "Birthday" = betterproto.message_field(1)
    signature: str = betterproto.string_field(2)
    name_card_id: int = betterproto.uint32_field(3)
    finish_achievement_num: int = betterproto.uint32_field(4)
    tower_floor_index: int = betterproto.uint32_field(5)
    tower_level_index: int = betterproto.uint32_field(6)
    show_avatar_info_list: List["SocialShowAvatarInfo"] = betterproto.message_field(7)
    is_show_avatar: bool = betterproto.bool_field(8)
    show_name_card_id_list: List[int] = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerBasicBriefData(betterproto.Message):
    nickname: str = betterproto.string_field(1)
    level: int = betterproto.uint32_field(2)
    world_level: int = betterproto.uint32_field(3)
    last_login_time: int = betterproto.uint32_field(4)
    head_image_avatar_id: int = betterproto.uint32_field(5)
    exp: int = betterproto.uint32_field(6)
    hcoin: int = betterproto.uint32_field(7)
    scoin: int = betterproto.uint32_field(8)
    platform_type: int = betterproto.uint32_field(9)
    online_id: str = betterproto.string_field(10)
    mcoin: int = betterproto.uint32_field(11)
    psn_id: str = betterproto.string_field(12)
    profile_picture_costume_id: int = betterproto.uint32_field(13)
    client_language_type: "LanguageType" = betterproto.enum_field(14)
    register_time: int = betterproto.fixed32_field(15)
    gender_type: int = betterproto.uint32_field(16)


@dataclass(eq=False, repr=False)
class PlayerHomeAuditModuleData(betterproto.Message):
    module_id: int = betterproto.uint32_field(1)
    audit_scene_version_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlayerHomeBriefData(betterproto.Message):
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(1)
    is_home_available: bool = betterproto.bool_field(2)
    last_save_time: int = betterproto.fixed32_field(3)
    prior_check_time: int = betterproto.uint32_field(4)
    audit_module_list: List["PlayerHomeAuditModuleData"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PlayerBriefDataRedisData(betterproto.Message):
    social_brief: "PlayerSocialBriefData" = betterproto.message_field(1)
    basic_brief: "PlayerBasicBriefData" = betterproto.message_field(2)
    mp_brief: "PlayerMpBriefData" = betterproto.message_field(3)
    home_brief: "PlayerHomeBriefData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class PlayerShowAvatarRedisData(betterproto.Message):
    show_avatar_info: "ShowAvatarInfo" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class PlayerPrivateChatRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerRecentChatRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerPrivateChatUnreadRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ChatRedisData(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)
    sequence: int = betterproto.uint32_field(3)
    to_uid: int = betterproto.uint32_field(4)
    is_read: bool = betterproto.bool_field(5)
    text: str = betterproto.string_field(100, group="content")
    icon: int = betterproto.uint32_field(101, group="content")
    system_hint: "ChatRedisDataSystemHint" = betterproto.message_field(
        102, group="content"
    )


@dataclass(eq=False, repr=False)
class ChatRedisDataSystemHint(betterproto.Message):
    type: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ChatMixRedisData(betterproto.Message):
    time: int = betterproto.uint32_field(13)
    sequence: int = betterproto.uint32_field(10)
    to_uid: int = betterproto.uint32_field(7)
    uid: int = betterproto.uint32_field(15)
    is_read: bool = betterproto.bool_field(5)
    text: str = betterproto.string_field(1946, group="content")
    icon: int = betterproto.uint32_field(914, group="content")
    system_hint: "ChatMixRedisDataSystemHint" = betterproto.message_field(
        1753, group="content"
    )


@dataclass(eq=False, repr=False)
class ChatMixRedisDataSystemHint(betterproto.Message):
    type: int = betterproto.uint32_field(14)


@dataclass(eq=False, repr=False)
class BlessingSocialData(betterproto.Message):
    pic_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlantFlowerSocialData(betterproto.Message):
    have_flower_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    wish_flower_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class WinterCampSocialData(betterproto.Message):
    have_item_bin_list: List["ItemParamBin"] = betterproto.message_field(1)
    wish_item_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ActivityGiveSocialData(betterproto.Message):
    have_gift_num_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    wish_gift_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ActivitySocialData(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    activity_give_social_data: "ActivityGiveSocialData" = betterproto.message_field(5)
    blessing_data: "BlessingSocialData" = betterproto.message_field(2, group="data")
    plant_flower_data: "PlantFlowerSocialData" = betterproto.message_field(
        3, group="data"
    )
    winter_camp_data: "WinterCampSocialData" = betterproto.message_field(
        4, group="data"
    )


@dataclass(eq=False, repr=False)
class PlayerActivitySocialRedisData(betterproto.Message):
    activity_social_data_map: Dict[int, "ActivitySocialData"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class HomeStatusRedisData(betterproto.Message):
    status: "HomeStatusType" = betterproto.enum_field(1)
    gameserver_id: int = betterproto.uint32_field(2)
    load_rand: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class HomeBriefDataRedisData(betterproto.Message):
    furniture_manufacturing_max_finish_time: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class OfflineOpGIndexRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class OfflineOpSortedSetRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class OfflineOpRedisData(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    time: int = betterproto.fixed32_field(2)
    op_type: "OfflineOpType" = betterproto.enum_field(3)
    op_bin: "OfflineOpBin" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonBlockRedisData(betterproto.Message):
    guid: int = betterproto.uint32_field(1)
    block_id: int = betterproto.uint32_field(2)
    pos: "Vector3Int" = betterproto.message_field(3)
    rot: "Vector3Int" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonRoomRedisData(betterproto.Message):
    room_id: int = betterproto.uint32_field(1)
    block_list: List["CustomDungeonBlockRedisData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CustomDungeonContent(betterproto.Message):
    room_list: List["CustomDungeonRoomRedisData"] = betterproto.message_field(1)
    setting: "CustomDungeonSettingBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class CustomDungeonRedisData(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    edit_content: "CustomDungeonContent" = betterproto.message_field(3)
    publish_content: "CustomDungeonContent" = betterproto.message_field(4)
    first_publish_time: int = betterproto.uint32_field(5)
    is_no_change_after_publish: bool = betterproto.bool_field(6)
    version: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CustomDungeonSocialRedisData(betterproto.Message):
    play_num: int = betterproto.uint32_field(1)
    like_num: int = betterproto.uint32_field(2)
    store_num: int = betterproto.uint32_field(3)
    win_num: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class CustomDungeonBriefRedisData(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    setting: "CustomDungeonSettingBin" = betterproto.message_field(3)
    abstract: "CustomDungeonAbstractBin" = betterproto.message_field(4)
    social: "CustomDungeonSocialRedisData" = betterproto.message_field(5)
    is_need_recommend: bool = betterproto.bool_field(6)
    creator_nickname: str = betterproto.string_field(7)
    recommend_type: int = betterproto.uint32_field(8)
    tag_list: List[int] = betterproto.uint32_field(9)
    recommend_score: float = betterproto.float_field(10)
    is_psn_platform: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class CustomDungeonNewRecommendRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CustomDungeonOldRecommendRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CustomDungeonLikeRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UgcMusicNoteRedisData(betterproto.Message):
    start_time: int = betterproto.uint32_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UgcMusicTrackRedisData(betterproto.Message):
    music_note_list: List["UgcMusicNoteRedisData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UgcMusicContentRedisData(betterproto.Message):
    music_id: int = betterproto.uint32_field(1)
    music_track_list: List["UgcMusicTrackRedisData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UgcRedisData(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(1)
    save_time: int = betterproto.uint32_field(2)
    music_content: "UgcMusicContentRedisData" = betterproto.message_field(
        11, group="content"
    )


@dataclass(eq=False, repr=False)
class UgcEditRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UgcPublishRedisData(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UgcMusicBriedRedisData(betterproto.Message):
    music_id: int = betterproto.uint32_field(1)
    note_count: int = betterproto.uint32_field(2)
    max_score: int = betterproto.uint32_field(3)
    import_from_ugc_guid: int = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class UgcBriefRedisData(betterproto.Message):
    ugc_guid: int = betterproto.uint64_field(1)
    creator_nickname: str = betterproto.string_field(2)
    publish_time: int = betterproto.uint32_field(3)
    version: int = betterproto.uint32_field(4)
    is_psn_platform: bool = betterproto.bool_field(5)
    music_brief: "UgcMusicBriedRedisData" = betterproto.message_field(11, group="brief")


@dataclass(eq=False, repr=False)
class HomeBlueprintBriefRedisData(betterproto.Message):
    share_code: str = betterproto.string_field(1)
    owner_uid: int = betterproto.uint32_field(2)
    module_id: int = betterproto.uint32_field(3)
    scene_id: int = betterproto.uint32_field(4)
    block_id: int = betterproto.uint32_field(5)
    is_allow_copy: bool = betterproto.bool_field(6)
    create_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class HomeBlueprintDetailRedisData(betterproto.Message):
    share_code: str = betterproto.string_field(1)
    scene_bin: "HomeSceneBin" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetHomeDataReq(betterproto.Message):
    home_uid: int = betterproto.uint32_field(1)
    load_rand: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class GetHomeDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    home_uid: int = betterproto.uint32_field(2)
    data_version: int = betterproto.uint32_field(3)
    is_new_home: int = betterproto.uint32_field(4)
    home_data: "HomeData" = betterproto.message_field(5)
    load_rand: int = betterproto.uint64_field(6)


@dataclass(eq=False, repr=False)
class SaveHomeDataReq(betterproto.Message):
    home_data: "HomeData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SaveHomeDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    data_version: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerTryEnterHomeReq(betterproto.Message):
    source_uid: int = betterproto.uint32_field(1)
    source_app_id: int = betterproto.uint32_field(2)
    cur_load_rand: int = betterproto.uint64_field(3)
    owner_init_home_module_id: int = betterproto.uint32_field(4)
    try_times: int = betterproto.uint32_field(5)
    source_thread_index: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ServerTryEnterHomeRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_home_uid: int = betterproto.uint32_field(2)
    target_app_id: int = betterproto.uint32_field(3)
    target_thread_index: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ServerBlockHomeNotify(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerGetFriendEnterHomeOptionReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetFriendEnterHomeOptionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    friend_enter_home_option: "FriendEnterHomeOption" = betterproto.enum_field(3)
    is_online: bool = betterproto.bool_field(4)
    is_home_avaliable: bool = betterproto.bool_field(5)
    is_only_mp_with_ps_player: bool = betterproto.bool_field(6)
    last_save_time: int = betterproto.uint32_field(7)
    prior_check_time: int = betterproto.uint32_field(8)
    is_home_in_audit: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class HomeOnlineStatusInfo(betterproto.Message):
    home_uid: int = betterproto.uint32_field(1)
    online_status: "HomeOnlineStatusInfoStatusType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class HomeOnlineStatusNotify(betterproto.Message):
    home_info_list: List["HomeOnlineStatusInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SendHomeOfflineMsgReq(betterproto.Message):
    msg: "HomeOfflineMsgBin" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SendHomeOfflineMsgRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ticket: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class NewHomeOfflineMsgNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetHomeOfflineMsgReq(betterproto.Message):
    index: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetHomeOfflineMsgRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    last_index: int = betterproto.uint32_field(2)
    offline_msg_list: List["HomeOfflineMsgBin"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class RemoveHomeOfflineMsgNotify(betterproto.Message):
    index: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClearHomeOfflineMsgNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ServerHomeGetOnlineStatusReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ServerHomeGetOnlineStatusRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    is_online: bool = betterproto.bool_field(2)
    player_info_list: List["OnlinePlayerInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerHomeKickPlayerReq(betterproto.Message):
    is_kick_all: bool = betterproto.bool_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerHomeKickPlayerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    is_kick_all: bool = betterproto.bool_field(2)
    target_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerHomeGetBlueprintBriefDataReq(betterproto.Message):
    reason: "HomeGetBlueprintBriefReason" = betterproto.enum_field(1)
    share_code_list: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ServerHomeGetBlueprintBriefDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    reason: "HomeGetBlueprintBriefReason" = betterproto.enum_field(2)
    share_code_list: List[str] = betterproto.string_field(3)
    brief_data_list: List["HomeBlueprintBriefRedisData"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ServerHomeUpdateBlueprintBriefDataReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    brief_data: "HomeBlueprintBriefRedisData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerHomeUpdateBlueprintBriefDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    slot_id: int = betterproto.uint32_field(2)
    brief_data: "HomeBlueprintBriefRedisData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerHomeGetBlueprintDetailDataReq(betterproto.Message):
    share_code: str = betterproto.string_field(1)
    share_owner_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerHomeGetBlueprintDetailDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    share_owner_uid: int = betterproto.uint32_field(2)
    detail_data: "HomeBlueprintDetailRedisData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerHomeSaveBlueprintDataReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    brief_data: "HomeBlueprintBriefRedisData" = betterproto.message_field(2)
    detail_data: "HomeBlueprintDetailRedisData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerHomeSaveBlueprintDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    slot_id: int = betterproto.uint32_field(2)
    brief_data: "HomeBlueprintBriefRedisData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerHomeDeleteBlueprintDataReq(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    share_code: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ServerHomeDeleteBlueprintDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    slot_id: int = betterproto.uint32_field(2)
    share_code: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class ServerHomeBlueprintCacheInvalidNotify(betterproto.Message):
    share_code: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class AddRedisMailReq(betterproto.Message):
    op_type: "MailAddOpType" = betterproto.enum_field(1)
    mail_bin: "MailBin" = betterproto.message_field(2)
    ticket: str = betterproto.string_field(3)
    transaction: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class AddRedisMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    op_type: "MailAddOpType" = betterproto.enum_field(2)
    ticket: str = betterproto.string_field(3)
    transaction: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class DelRedisMailReq(betterproto.Message):
    op_type: "MailDelOpType" = betterproto.enum_field(1)
    mail_id_list: List[int] = betterproto.uint32_field(2)
    ticket_list: List[str] = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class DelRedisMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    op_type: "MailDelOpType" = betterproto.enum_field(2)
    mail_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetRedisMailReq(betterproto.Message):
    op_type: "MailGetOpType" = betterproto.enum_field(1)
    get_type: "MailGetType" = betterproto.enum_field(2)
    mail_id_list: List[int] = betterproto.uint32_field(3)
    is_collectible_mail_transfered: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class GetRedisMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    mail_str_list: List[bytes] = betterproto.bytes_field(2)
    op_type: "MailGetOpType" = betterproto.enum_field(3)
    is_truncated: bool = betterproto.bool_field(4)
    get_type: "MailGetType" = betterproto.enum_field(5)
    is_collectible_mail_transfered: bool = betterproto.bool_field(6)
    transaction: str = betterproto.string_field(7)
    page_index: int = betterproto.uint32_field(8)
    total_page_count: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class RedisMailChangeNotify(betterproto.Message):
    update_mail_list: List["MailRedisData"] = betterproto.message_field(1)
    del_mail_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SendOfflineMsgReq(betterproto.Message):
    msg: "OfflineMsgBin" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SendOfflineMsgRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ticket: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class NewOfflineMsgNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetOfflineMsgReq(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    is_login: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class GetOfflineMsgRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    last_index: int = betterproto.uint32_field(2)
    offline_msg_list: List["OfflineMsgBin"] = betterproto.message_field(3)
    is_login: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class RemoveOfflineMsgNotify(betterproto.Message):
    index: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ClearOfflineMsgNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UpdateRedisMailReq(betterproto.Message):
    op_type: "MailUpdateOpType" = betterproto.enum_field(1)
    mail_id_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UpdateRedisMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    op_type: "MailUpdateOpType" = betterproto.enum_field(2)
    mail_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GetRedisMailTransactionStatusReq(betterproto.Message):
    transaction_list: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class GetRedisMailTransactionStatusRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    transaction_status_map: Dict[str, bool] = betterproto.map_field(
        2, betterproto.TYPE_STRING, betterproto.TYPE_BOOL
    )


@dataclass(eq=False, repr=False)
class ClearUpRedisMailNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CleanRedisMailNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ResendRedisMailReq(betterproto.Message):
    mail_bin_map: Dict[str, "MailBin"] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class ResendRedisMailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    resend_status_map: Dict[str, bool] = betterproto.map_field(
        2, betterproto.TYPE_STRING, betterproto.TYPE_BOOL
    )


@dataclass(eq=False, repr=False)
class MatchPlayer(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    nickname: str = betterproto.string_field(2)
    player_level: int = betterproto.uint32_field(3)
    world_level: int = betterproto.uint32_field(4)
    platform_type: int = betterproto.uint32_field(5)
    is_only_match_with_ps_player: bool = betterproto.bool_field(6)
    blacklist_uid_list: List[int] = betterproto.uint32_field(7)
    player_info: "OnlinePlayerInfo" = betterproto.message_field(8)
    hide_and_seek_hider_count: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class MatchUnit(betterproto.Message):
    match_player_list: List["MatchPlayer"] = betterproto.message_field(1)
    unit_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class AddMatchUnitReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    match_unit: "MatchUnit" = betterproto.message_field(2)
    expect_identity: "MatchIdentity" = betterproto.enum_field(3)
    dungeon_id: int = betterproto.uint32_field(11)
    mp_play_id: int = betterproto.uint32_field(12)
    mechanicus_tag: int = betterproto.uint32_field(13)
    match_id: int = betterproto.uint32_field(14)
    match_param_list: List[int] = betterproto.uint32_field(15)
    gcg_duel_extra: "GcgDuelExtra" = betterproto.message_field(21, group="detail")


@dataclass(eq=False, repr=False)
class AddMatchUnitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    match_type: "MatchType" = betterproto.enum_field(2)
    match_unit: "MatchUnit" = betterproto.message_field(3)
    dungeon_id: int = betterproto.uint32_field(11)
    mp_play_id: int = betterproto.uint32_field(12)
    mechanicus_tag: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class MatchStartNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    match_begin_time: int = betterproto.uint32_field(2)
    estimate_match_cost_time: int = betterproto.uint32_field(3)
    is_rematch: bool = betterproto.bool_field(4)
    dungeon_id: int = betterproto.uint32_field(11)
    mp_play_id: int = betterproto.uint32_field(12)
    mechanicus_tag: int = betterproto.uint32_field(13)
    match_id: int = betterproto.uint32_field(14)
    match_param_list: List[int] = betterproto.uint32_field(15)


@dataclass(eq=False, repr=False)
class RemoveMatchUnitReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    unit_id: int = betterproto.uint32_field(2)
    op_type: "MatchUnitRemoveOpType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class RemoveMatchUnitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    match_type: "MatchType" = betterproto.enum_field(2)
    unit_id: int = betterproto.uint32_field(3)
    op_type: "MatchUnitRemoveOpType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class MatchUnitRemovedNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    reason: "MatchReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GuestUnitMatchSuccNotify(betterproto.Message):
    host_unit_id: int = betterproto.uint32_field(1)
    confirm_end_time: int = betterproto.uint32_field(2)
    match_type: int = betterproto.uint32_field(3)
    dungeon_id: int = betterproto.uint32_field(11)
    mp_play_id: int = betterproto.uint32_field(12)
    mechanicus_tag: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class ConfirmGuestUnitReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    unit_id: int = betterproto.uint32_field(2)
    is_agreed: bool = betterproto.bool_field(3)
    match_id: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ConfirmGuestUnitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    match_type: "MatchType" = betterproto.enum_field(2)
    unit_id: int = betterproto.uint32_field(3)
    is_agreed: bool = betterproto.bool_field(4)
    match_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class MatchPlayerJoinNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    unit_id: int = betterproto.uint32_field(2)
    match_player: "MatchPlayer" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MatchPlayerQuitNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    unit_id: int = betterproto.uint32_field(2)
    player_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class GuestUnitAgreedResultNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    host_unit_id: int = betterproto.uint32_field(2)
    reason: "GuestUnitAgreedResultNotifyReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class HostUnitMatchSuccNotify(betterproto.Message):
    match_type: int = betterproto.uint32_field(1)
    dungeon_id: int = betterproto.uint32_field(11)
    mp_play_id: int = betterproto.uint32_field(12)
    mechanicus_difficult_level: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class SyncMatchUnitReq(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    match_unit: "MatchUnit" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SyncMatchUnitRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class MatchserverWorkloadInfoNotify(betterproto.Message):
    match_unit_num: int = betterproto.uint32_field(1)
    match_unit_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class MatchPlayerUpdateNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    unit_id: int = betterproto.uint32_field(2)
    match_player: "MatchPlayer" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MatchIdentityNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    match_identity: "MatchIdentity" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class GeneralMatchFinishNotify(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)
    match_id: int = betterproto.uint32_field(2)
    match_param: int = betterproto.uint32_field(3)
    match_player_list: List["MatchPlayer"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GcgMatchPlayerInfo(betterproto.Message):
    match_player: "MatchPlayer" = betterproto.message_field(1)
    gcg_duel_extra: "GcgDuelExtra" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GcgMatchFinishNotify(betterproto.Message):
    match_id: int = betterproto.uint32_field(1)
    gcg_match_player_list: List["GcgMatchPlayerInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class StopServerConfig(betterproto.Message):
    begin_time: datetime = betterproto.message_field(1)
    end_time: datetime = betterproto.message_field(2)
    url: str = betterproto.string_field(3)
    text_id: int = betterproto.uint32_field(4)
    content_text_id: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class StopRegisterConfig(betterproto.Message):
    begin_time: datetime = betterproto.message_field(1)
    end_time: datetime = betterproto.message_field(2)
    max_player_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ForceUpdateConfig(betterproto.Message):
    url: str = betterproto.string_field(1)
    text_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DateTimeIntervalConfig(betterproto.Message):
    begin_time: datetime = betterproto.message_field(1)
    end_time: datetime = betterproto.message_field(2)
    text_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DataVersionConfig(betterproto.Message):
    server: int = betterproto.uint32_field(1)
    client: int = betterproto.uint32_field(2)
    client_silence: int = betterproto.uint32_field(3)
    client_md5: Dict[str, str] = betterproto.map_field(
        4, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    client_platform_md5: Dict[int, str] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )
    client_silence_md5: Dict[str, str] = betterproto.map_field(
        6, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    client_silence_platform_md5: Dict[int, str] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_STRING
    )
    client_version_suffix: str = betterproto.string_field(8)
    client_silence_version_suffix: str = betterproto.string_field(9)
    relogin: bool = betterproto.bool_field(10)
    mp_relogin: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class SdkAccountReqConfig(betterproto.Message):
    app_id: int = betterproto.uint32_field(1)
    channel_id: int = betterproto.uint32_field(2)
    open_id: str = betterproto.string_field(3)
    combo_token: str = betterproto.string_field(4)
    sign: str = betterproto.string_field(5)
    region: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class GachaUpConfig(betterproto.Message):
    item_parent_type: int = betterproto.uint32_field(1)
    prob: int = betterproto.uint32_field(2)
    item_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class DbGachaUpConfig(betterproto.Message):
    gacha_up_list: List["GachaUpConfig"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class DbGachaRuleConfig(betterproto.Message):
    gacha_rule_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class AntiCheatConfig(betterproto.Message):
    is_segment_crc_valid: bool = betterproto.bool_field(1)


@dataclass(eq=False, repr=False)
class GameplayRecommendationSkillConfig(betterproto.Message):
    skill_id_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryMainPropConfig(betterproto.Message):
    main_prop_id: int = betterproto.uint32_field(1)
    permillage: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryConfig(betterproto.Message):
    main_prop_config_list: List[
        "GameplayRecommendationReliquaryMainPropConfig"
    ] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class GameplayRecommendationReliquaryMapConfig(betterproto.Message):
    reliquary_config_map: Dict[
        int, "GameplayRecommendationReliquaryConfig"
    ] = betterproto.map_field(1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)


@dataclass(eq=False, repr=False)
class GameplayRecommendationAvatarConfig(betterproto.Message):
    skill_config_map: Dict[
        int, "GameplayRecommendationSkillConfig"
    ] = betterproto.map_field(1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    reliquary_config_map: Dict[
        int, "GameplayRecommendationReliquaryConfig"
    ] = betterproto.map_field(2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)
    element_reliquary_config_map: Dict[
        int, "GameplayRecommendationReliquaryMapConfig"
    ] = betterproto.map_field(3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)


@dataclass(eq=False, repr=False)
class GameplayRecommendationConfig(betterproto.Message):
    avatar_config_map: Dict[
        int, "GameplayRecommendationAvatarConfig"
    ] = betterproto.map_field(1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE)


@dataclass(eq=False, repr=False)
class StopServerConfigNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class NodeserverConnectedAndRegisteredNotify(betterproto.Message):
    nodeserver_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MultiPlayerMsg(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)
    proto_bin: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class AddGateserverNotify(betterproto.Message):
    listen_port: int = betterproto.uint32_field(1)
    outer_ip: int = betterproto.uint32_field(2)
    use_domain_name: bool = betterproto.bool_field(3)
    domain_name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class RegisterServiceNotify(betterproto.Message):
    service_type_list: List["ServiceType"] = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class PlayerTransferNotify(betterproto.Message):
    transfer_uid: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    target_home_owner_uid: int = betterproto.uint32_field(3)
    target_home_gameserver_id: int = betterproto.uint32_field(4)
    target_home_param: int = betterproto.uint32_field(5)


@dataclass(eq=False, repr=False)
class PacketCountInfo(betterproto.Message):
    cmd_id: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PacketFreqencyExceedNotify(betterproto.Message):
    packet_count: int = betterproto.uint32_field(1)
    interval: int = betterproto.uint32_field(2)
    packet_count_list: List["PacketCountInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class SceneAsyncLoadGroupBatchNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CrcVersionConfig(betterproto.Message):
    client_version_list: List[str] = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ClientVersionSyncNotify(betterproto.Message):
    data_version_config: "DataVersionConfig" = betterproto.message_field(1)
    res_version_config_map: Dict[int, "ResVersionConfig"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    crc_version_config_map: Dict[int, "CrcVersionConfig"] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    next_res_version_config_map: Dict[int, "ResVersionConfig"] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class RegisterServiceSuccessNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ReloadConfigNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class MultiserverServiceTypeNotify(betterproto.Message):
    service_type_list: List["ServiceType"] = betterproto.enum_field(1)


@dataclass(eq=False, repr=False)
class MatchServiceStopNotify(betterproto.Message):
    server_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class MatchServiceStopImplementNotify(betterproto.Message):
    msg: "MatchServiceStopNotify" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ServerBlockPlayerMpNotify(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerBlockPlayerChatNotify(betterproto.Message):
    is_unlock: bool = betterproto.bool_field(1)
    end_time: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerCheckSegmentCrcNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class UpdateMpStatusNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    is_only_mp_with_ps_player: bool = betterproto.bool_field(2)
    platform_type: "PlatformType" = betterproto.enum_field(3)
    online_player_info: "OnlinePlayerInfo" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class DelMpStatusNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetPlayerMpStatusListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetPlayerMpStatusListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    player_list: List["OnlinePlayerInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetPlayerMpStatusInfoReq(betterproto.Message):
    is_online_id: bool = betterproto.bool_field(1)
    target_uid: int = betterproto.uint32_field(2, group="player_id")
    online_id: str = betterproto.string_field(3, group="player_id")
    psn_id: str = betterproto.string_field(4, group="player_id")


@dataclass(eq=False, repr=False)
class GetPlayerMpStatusInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    target_player_info: "OnlinePlayerInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class OnlinePlayerNumReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class OnlinePlayerNumRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    online_player_num: int = betterproto.uint32_field(2)
    gameserver_player_num_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    online_player_num_except_sub_account: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class KickoutPlayerNotify(betterproto.Message):
    reason: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class CheckOnlinePlayerReq(betterproto.Message):
    gameserver_id: int = betterproto.uint32_field(1)
    ns_gameserver_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CheckOnlinePlayerRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    node_status: "CheckOnlinePlayerRspNodeStatus" = betterproto.message_field(2)
    game_status: "CheckOnlinePlayerRspGameStatus" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class CheckOnlinePlayerRspNodeStatus(betterproto.Message):
    gameserver_id: int = betterproto.uint32_field(1)
    nodeserver_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class CheckOnlinePlayerRspGameStatus(betterproto.Message):
    gameserver_id: int = betterproto.uint32_field(1)
    login_time: int = betterproto.uint32_field(2)
    login_rand: int = betterproto.uint64_field(3)
    is_wait_save: bool = betterproto.bool_field(4)


@dataclass(eq=False, repr=False)
class PlayerCombatForceReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerCombatForceRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    player_combat_force: float = betterproto.float_field(2)
    player_combat_force_map: Dict[int, float] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_FLOAT
    )


@dataclass(eq=False, repr=False)
class CheckGameVersionReq(betterproto.Message):
    server_version: int = betterproto.uint32_field(1)
    client_version: int = betterproto.uint32_field(2)
    client_silence_version: int = betterproto.uint32_field(3)
    res_version_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    next_res_version_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GameVersionResult(betterproto.Message):
    version: int = betterproto.uint32_field(1)
    wrong_num: int = betterproto.uint32_field(2)
    wrong_name_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class CheckGameVersionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    total_game: int = betterproto.uint32_field(2)
    server_version_result: "GameVersionResult" = betterproto.message_field(3)
    client_version_result: "GameVersionResult" = betterproto.message_field(4)
    client_silence_version_result: "GameVersionResult" = betterproto.message_field(5)
    res_version_result_map: Dict[int, "GameVersionResult"] = betterproto.map_field(
        6, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )
    next_res_version_result_map: Dict[int, "GameVersionResult"] = betterproto.map_field(
        7, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class PlatformPlayerNumReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlatformPlayerNumRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    online_player_num: int = betterproto.uint32_field(2)
    platform_player_num_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlayerMemBasicData(betterproto.Message):
    nickname: str = betterproto.string_field(1)
    level: int = betterproto.uint32_field(2)
    exp: int = betterproto.uint32_field(3)
    scoin: int = betterproto.uint32_field(4)
    hcoin: int = betterproto.uint32_field(5)
    last_login: int = betterproto.uint32_field(6)
    profile_picture: "ProfilePicture" = betterproto.message_field(7)
    register_time: int = betterproto.fixed32_field(8)
    gender_type: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class PlayerMemH5AcitivityWatcherData(betterproto.Message):
    h5_activity_watcher_id: int = betterproto.uint32_field(1)
    progress: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerMemH5ActivityData(betterproto.Message):
    h5_schedule_id: int = betterproto.uint32_field(1)
    h5_activity_id: int = betterproto.uint32_field(2)
    last_refresh_time: int = betterproto.uint32_field(3)
    finished_h5_activity_watcher_list: List[int] = betterproto.uint32_field(4)
    unaccept_h5_activity_watcher_list: List[int] = betterproto.uint32_field(5)
    h5_activity_watcher_list: List[
        "PlayerMemH5AcitivityWatcherData"
    ] = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class PlayerMemH5ActivityDataResult(betterproto.Message):
    retcode_map: Dict[int, int] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_INT32
    )
    h5_activity_data_list: List["PlayerMemH5ActivityData"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class QueryPlayerMemDataByMuipReq(betterproto.Message):
    data_type: int = betterproto.uint32_field(1)
    param_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class QueryPlayerMemDataByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    basic_data: "PlayerMemBasicData" = betterproto.message_field(2, group="detail")
    h5_activity_data_result: "PlayerMemH5ActivityDataResult" = (
        betterproto.message_field(3, group="detail")
    )


@dataclass(eq=False, repr=False)
class BindGmUidNotify(betterproto.Message):
    gm_uid: int = betterproto.uint32_field(1)
    player_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class UnbindGmUidNotify(betterproto.Message):
    gm_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetBindGmUidReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetBindGmUidRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    gm_uid_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class PlatformAntiAddictNotify(betterproto.Message):
    msg_type: int = betterproto.int32_field(2)
    msg: str = betterproto.string_field(3)
    level: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class PlayerLoginPerSecondReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerLoginPerSecondRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    player_login_per_second: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class FineGrainedPlayerNumReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class FineGrainedPlayerNumRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    online_player_num: int = betterproto.uint32_field(2)
    fine_grained_player_num_map: Dict[str, int] = betterproto.map_field(
        3, betterproto.TYPE_STRING, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class CheckGameCrcVersionReq(betterproto.Message):
    platform: int = betterproto.uint32_field(1)
    client_version_str: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CheckGameCrcVersionRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    total_game: int = betterproto.uint32_field(2)
    platform: int = betterproto.uint32_field(3)
    client_version_str: str = betterproto.string_field(4)
    wrong_num: int = betterproto.uint32_field(5)
    wrong_name_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class UpdateRedPointByMuipNotify(betterproto.Message):
    red_point_list: List["RedPointData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class SendConcertProductReq(betterproto.Message):
    ticket: str = betterproto.string_field(1)
    config_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SendConcertProductRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ticket: str = betterproto.string_field(2)
    config_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class QueryConcertProductInfoReq(betterproto.Message):
    config_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class QueryConcertProductInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    config_id: int = betterproto.uint32_field(2)
    obtain_count: int = betterproto.uint32_field(3)
    obtain_limit: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class OfflineOpDefaultContext(betterproto.Message):
    tag: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class OfflineOpPlantFlowerActivityGiveFlowerContext(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    flower_num_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class GcgSettleContext(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    game_id: int = betterproto.uint32_field(2)
    game_uid: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class OfflineOpContext(betterproto.Message):
    default_context: "OfflineOpDefaultContext" = betterproto.message_field(
        1, group="context"
    )
    plant_flower_give_flower_context: "OfflineOpPlantFlowerActivityGiveFlowerContext" = betterproto.message_field(
        2, group="context"
    )


@dataclass(eq=False, repr=False)
class OfflineOpData(betterproto.Message):
    bin: "OfflineOpBin" = betterproto.message_field(1)
    context: "OfflineOpContext" = betterproto.message_field(2)
    max_length: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SendOfflineOpReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    time: int = betterproto.fixed32_field(2)
    op_type: "OfflineOpType" = betterproto.enum_field(3)
    op_data: "OfflineOpData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SendOfflineOpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    index: int = betterproto.uint32_field(2)
    op_type: "OfflineOpType" = betterproto.enum_field(3)
    context: "OfflineOpContext" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class GetOfflineOpReq(betterproto.Message):
    op_type: "OfflineOpType" = betterproto.enum_field(1)
    index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetOfflineOpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    bin_str_list: List[bytes] = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class NewOfflineOpNotify(betterproto.Message):
    op_type: "OfflineOpType" = betterproto.enum_field(1)
    index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RemoveOfflineOpReq(betterproto.Message):
    op_type: "OfflineOpType" = betterproto.enum_field(1)
    index: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class RemoveOfflineOpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    op_type: "OfflineOpType" = betterproto.enum_field(2)
    index: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class SendGcgOfflineOpReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    time: int = betterproto.fixed32_field(2)
    op_type: "OfflineOpType" = betterproto.enum_field(3)
    op_data: "OfflineOpData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SendGcgOfflineOpRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    index: int = betterproto.uint32_field(2)
    op_type: "OfflineOpType" = betterproto.enum_field(3)
    context: "OfflineOpContext" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SavePlayerDataReq(betterproto.Message):
    player_data: "PlayerData" = betterproto.message_field(1)
    save_stat_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class SavePlayerDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    data_version: int = betterproto.uint32_field(2)
    save_stat_id: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class PlayerOnlineStatusInfo(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    platform_type: int = betterproto.uint32_field(2)
    online_status: "PlayerOnlineStatusInfoStatusType" = betterproto.enum_field(3)
    is_sub_account: bool = betterproto.bool_field(4)
    country_code: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class PlayerOnlineStatusNotify(betterproto.Message):
    player_info_list: List["PlayerOnlineStatusInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ServiceDisconnectNotify(betterproto.Message):
    type: "ServiceType" = betterproto.enum_field(1)
    ip: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PlayerDisconnectNotify(betterproto.Message):
    data: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class DisconnectClientNotify(betterproto.Message):
    data: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class SysCreateGroupReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class SaveBlockDataReq(betterproto.Message):
    block_info_map: Dict[int, "BlockInfo"] = betterproto.map_field(
        1, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class SaveBlockDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    block_succ_save_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class SavePlayerExtraBinDataNotify(betterproto.Message):
    uid: int = betterproto.uint32_field(1)
    player_extra_bin_data: bytes = betterproto.bytes_field(2)


@dataclass(eq=False, repr=False)
class SysSavePlayerNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class PlayerLoginBlockInfoNotify(betterproto.Message):
    login_rand: int = betterproto.uint64_field(1)
    block_info_map: Dict[int, "BlockInfo"] = betterproto.map_field(
        2, betterproto.TYPE_UINT32, betterproto.TYPE_MESSAGE
    )


@dataclass(eq=False, repr=False)
class Order(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    uid: int = betterproto.uint32_field(2)
    product_id: str = betterproto.string_field(3)
    product_name: str = betterproto.string_field(4)
    product_num: int = betterproto.uint32_field(5)
    coin_num: int = betterproto.uint32_field(6)
    total_fee: str = betterproto.string_field(7)
    currency: str = betterproto.string_field(8)
    price_tier: str = betterproto.string_field(9)
    trade_no: str = betterproto.string_field(10)
    trade_time: int = betterproto.uint32_field(11)
    channel_id: int = betterproto.uint32_field(12)
    channel_order_no: str = betterproto.string_field(13)
    pay_plat: str = betterproto.string_field(14)
    extend: str = betterproto.string_field(15)
    create_time: int = betterproto.uint32_field(16)
    bonus: str = betterproto.string_field(17)
    bonus_num: int = betterproto.uint32_field(18)
    vip_point_num: int = betterproto.uint32_field(19)
    pay_type: str = betterproto.string_field(20)
    pay_vendor: str = betterproto.string_field(21)
    client_type: str = betterproto.string_field(22)
    device: str = betterproto.string_field(23)
    client_ip: str = betterproto.string_field(24)


@dataclass(eq=False, repr=False)
class RechargeOrderNotify(betterproto.Message):
    order: "Order" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class MarkOrderFinishedReq(betterproto.Message):
    order_id: int = betterproto.uint32_field(1)
    finish_time: int = betterproto.uint32_field(2)
    is_retry: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class MarkOrderFinishedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    order_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class GetUnfinishedOrderReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class GetUnfinishedOrderRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    order_list: List["Order"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GetSpecificUnfinishedReq(betterproto.Message):
    order_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class GetSpecificUnfinishedRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    order: "Order" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class AddAskFriendNotify(betterproto.Message):
    source_id: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetPlayerFriendListReq(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ServerGetPlayerFriendListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    friend_uid_list: List[int] = betterproto.uint32_field(2)
    ask_add_friend_uid_list: List[int] = betterproto.uint32_field(3)
    blacklist_uid_list: List[int] = betterproto.uint32_field(4)
    psn_friend_uid_list: List[int] = betterproto.uint32_field(5)
    psn_blacklist_uid_list: List[int] = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ServerGetSocialDetailReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetSocialDetailRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    social_detail: "SocialDetail" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerAskAddFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerAskAddFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerDealAddFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ServerDealAddFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    deal_add_friend_result: "DealAddFriendResultType" = betterproto.enum_field(3)
    target_friend_num: int = betterproto.uint32_field(4)
    target_friend_brief: "FriendBrief" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ServerDeleteFriendReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerDeleteFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    target_friend_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerSetSignatureReq(betterproto.Message):
    signature: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class ServerSetSignatureRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    signature: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ServerGetPlayerFriendBriefReq(betterproto.Message):
    friend_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetPlayerFriendBriefRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    friend_brief_list: List["FriendBrief"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class SeverGetPs4FriendUidReq(betterproto.Message):
    psn_id_list: List[str] = betterproto.string_field(1)
    request_reason: "PsRequstReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class SeverGetPs4FriendUidRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    uid_id_list: List[int] = betterproto.uint32_field(2)
    request_reason: "PsRequstReason" = betterproto.enum_field(3)
    friend_brief_list: List["FriendBrief"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class SyncPlayerBriefNotify(betterproto.Message):
    basic_brief_data: "PlayerBasicBriefData" = betterproto.message_field(1)
    mp_brief_data: "PlayerMpBriefData" = betterproto.message_field(2)
    social_brief_data: "PlayerSocialBriefData" = betterproto.message_field(3)
    home_brief_data: "PlayerHomeBriefData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ServerAddBlacklistReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)
    is_friend: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ServerAddBlacklistRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_friend_brief: "FriendBrief" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerRemoveBlacklistReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerRemoveBlacklistRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerGetRecentMpPlayerListReq(betterproto.Message):
    recent_player_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetRecentMpPlayerListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    recent_mp_player_brief_list: List["FriendBrief"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerGetPlayerBlacklistReq(betterproto.Message):
    blacklist_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetPlayerBlacklistRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    blacklist: List["FriendBrief"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerPrivateChatReq(betterproto.Message):
    chat_info: "ChatInfo" = betterproto.message_field(1)
    is_ps4_friend: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class ServerPrivateChatRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)


@dataclass(eq=False, repr=False)
class ServerPullPrivateChatReq(betterproto.Message):
    from_uid: int = betterproto.uint32_field(1)
    to_uid: int = betterproto.uint32_field(2)
    from_sequence: int = betterproto.uint32_field(3)
    pull_num: int = betterproto.uint32_field(4)
    is_ps4_friend: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class ServerPullRecentChatReq(betterproto.Message):
    from_sequence: int = betterproto.uint32_field(1)
    pull_num: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerUpdateActivitySocialDataNotify(betterproto.Message):
    social_data_list: List["ActivitySocialData"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ServerBlessingGetFriendPicListReq(betterproto.Message):
    friend_uid_list: List[int] = betterproto.uint32_field(1)
    schedule_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerBlessingGetFriendPicListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    friend_pic_data_list: List["BlessingFriendPicData"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerGetFriendBriefReq(betterproto.Message):
    uid_list: List[int] = betterproto.uint32_field(1)
    reason: "FriendBriefRequestReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ServerGetFriendBriefRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    friend_brief_list: List["FriendBrief"] = betterproto.message_field(2)
    reason: "FriendBriefRequestReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class ServerUpdateShowAvatarInfoNotify(betterproto.Message):
    show_avatar_info_list: List["ShowAvatarInfo"] = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class ServerGetFriendShowAvatarInfoReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetFriendShowAvatarInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    uid: int = betterproto.uint32_field(2)
    show_avatar_info_list: List["ShowAvatarInfo"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerReadPrivateChatReq(betterproto.Message):
    from_uid: int = betterproto.uint32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    is_ps4_friend: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ServerGetFriendShowNameCardInfoReq(betterproto.Message):
    uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetFriendShowNameCardInfoRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    uid: int = betterproto.uint32_field(2)
    show_name_card_id_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerGetAskFriendBriefReq(betterproto.Message):
    ask_add_friend_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerGetAskFriendBriefRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ask_add_friend_brief_list: List["FriendBrief"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerAddPsnFriendReq(betterproto.Message):
    force_add_psn_friend_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerAddPsnFriendRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    force_add_psn_friend_uid_list: List[int] = betterproto.uint32_field(2)
    force_add_psn_friend_brief_list: List["FriendBrief"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerAddPsnBlackReq(betterproto.Message):
    force_add_psn_black_uid_list: List[int] = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerAddPsnBlackRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    force_add_psn_black_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerFriendInfoChangeNotify(betterproto.Message):
    my_uid: int = betterproto.uint32_field(1)
    my_online_id: str = betterproto.string_field(2)
    notify_uid_list: List[int] = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerPlantFlowerGetFriendFlowerDataReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    friend_uid: int = betterproto.uint32_field(2)
    give_flower_num_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ServerPlantFlowerGetFriendFlowerDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    friend_uid: int = betterproto.uint32_field(3)
    give_flower_num_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    have_flower_num_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ServerPlantFlowerGetFriendFlowerWishListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    friend_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerPlantFlowerGetFriendFlowerWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    friend_flower_wish_list: List[
        "PlantFlowerFriendFlowerWishData"
    ] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerWinterCampGetFriendItemDataReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    friend_uid: int = betterproto.uint32_field(2)
    give_item_list: List["ItemParam"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerWinterCampGetFriendItemDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    friend_uid: int = betterproto.uint32_field(3)
    give_item_list: List["ItemParam"] = betterproto.message_field(4)
    friend_item_list: List["ItemParam"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class ServerWinterCampGetFriendWishListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    friend_uid_list: List[int] = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerWinterCampGetFriendWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    wish_data_list: List["WinterCampFriendWishData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerGetCustomDungeonReq(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    is_self_dungeon: bool = betterproto.bool_field(2)
    enter_type: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerCustomDungeon(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    dungeon_id: int = betterproto.uint32_field(2)
    room_list: List["CustomDungeonRoomRedisData"] = betterproto.message_field(3)
    setting: "CustomDungeonSettingBin" = betterproto.message_field(4)
    version: int = betterproto.uint32_field(5)
    is_liked: bool = betterproto.bool_field(6)
    first_publish_time: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class CustomDungeonAdventure(betterproto.Message):
    custom_dungeon: "ServerCustomDungeon" = betterproto.message_field(1)
    dungeon_brief: "CustomDungeonBriefRedisData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerGetCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    is_exist: bool = betterproto.bool_field(2)
    custom_dungeon: "ServerCustomDungeon" = betterproto.message_field(3)
    enter_type: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ServerSaveCustomDungeonReq(betterproto.Message):
    custom_dungeon: "ServerCustomDungeon" = betterproto.message_field(1)
    room_id: int = betterproto.uint32_field(2)
    is_ever_published: bool = betterproto.bool_field(3)


@dataclass(eq=False, repr=False)
class ServerSaveCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    dungeon_guid: int = betterproto.uint64_field(2)
    room_id: int = betterproto.uint32_field(3)
    version: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ServerPublishCustomDungeonReq(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    abstract: "CustomDungeonAbstractBin" = betterproto.message_field(2)
    deploy_score: int = betterproto.uint32_field(3)
    creator_nickname: str = betterproto.string_field(4)
    group_id: int = betterproto.uint32_field(5)
    uid: int = betterproto.uint32_field(6)
    lang: int = betterproto.uint32_field(7)
    tag_list: List[int] = betterproto.uint32_field(8)
    is_psn_platform: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class ServerPublishCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    dungeon_guid: int = betterproto.uint64_field(2)
    publish_time: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerRemoveCustomDungeonReq(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    group_id: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerRemoveCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    dungeon_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ServerUpdateCustomDungeonSocialNotify(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    update_type: "CustomDungeonSocialUpdateType" = betterproto.enum_field(2)
    is_cancel_store: bool = betterproto.bool_field(3)
    is_cancel_like: bool = betterproto.bool_field(4)
    is_win: bool = betterproto.bool_field(5)
    is_ever_liked: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class ServerGetCustomDungeonBriefReq(betterproto.Message):
    dungeon_guid_list: List[int] = betterproto.uint64_field(1)
    get_type: "CustomDungeonBriefGetType" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class ServerGetCustomDungeonBriefRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    dungeon_guid_list: List[int] = betterproto.uint64_field(2)
    dungeon_brief_list: List["CustomDungeonBriefRedisData"] = betterproto.message_field(
        3
    )
    get_type: "CustomDungeonBriefGetType" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class ServerGetRecommendCustomDungeonReq(betterproto.Message):
    dungeon_guid_list: List[int] = betterproto.uint64_field(1)
    group_id: int = betterproto.uint32_field(2)
    recommend_interval: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerGetRecommendCustomDungeonRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    dungeon_brief_list: List["CustomDungeonBriefRedisData"] = betterproto.message_field(
        2
    )


@dataclass(eq=False, repr=False)
class ServerAddFriendByMuipReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerAddFriendByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    target_friend_num: int = betterproto.uint32_field(3)
    target_friend_brief: "FriendBrief" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ServerDelFriendByMuipReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerDelFriendByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)
    target_friend_num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerAddFriendAskByMuipReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerAddFriendAskByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerDelFriendAskByMuipReq(betterproto.Message):
    target_uid: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class ServerDelFriendAskByMuipRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    target_uid: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class ServerCustomDungeonCacheInvalidNotify(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)


@dataclass(eq=False, repr=False)
class ServerCustomDungeonSocialGmNotify(betterproto.Message):
    dungeon_guid: int = betterproto.uint64_field(1)
    update_type: int = betterproto.uint32_field(2)
    num: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class ServerCustomDungeonFirstLikeNotify(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class ServerGetUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(1)
    ugc_guid: int = betterproto.uint64_field(2)
    is_edit: bool = betterproto.bool_field(3)
    is_require_brief: bool = betterproto.bool_field(4)
    ugc_record_usage: "RecordUsage" = betterproto.enum_field(5)


@dataclass(eq=False, repr=False)
class ServerGetUgcRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ugc_type: "UgcType" = betterproto.enum_field(2)
    ugc_guid: int = betterproto.uint64_field(3)
    is_edit: bool = betterproto.bool_field(4)
    is_exist: bool = betterproto.bool_field(5)
    ugc_record_usage: "RecordUsage" = betterproto.enum_field(6)
    ugc_redis_data: "UgcRedisData" = betterproto.message_field(7)
    ugc_brief_redis_data: "UgcBriefRedisData" = betterproto.message_field(8)


@dataclass(eq=False, repr=False)
class ServerGetUgcBriefReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(1)
    ugc_guid: int = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ServerGetUgcBriefRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ugc_type: "UgcType" = betterproto.enum_field(2)
    is_exist: bool = betterproto.bool_field(3)
    ugc_brief_redis_data: "UgcBriefRedisData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class ServerMultiGetUgcBriefReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(1)
    ugc_guid_list: List[int] = betterproto.uint64_field(2)


@dataclass(eq=False, repr=False)
class ServerMultiGetUgcBriefRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ugc_type: "UgcType" = betterproto.enum_field(2)
    ugc_brief_list: List["UgcBriefRedisData"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerSaveUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(1)
    ugc_redis_data: "UgcRedisData" = betterproto.message_field(2)
    ugc_brief_redis_data: "UgcBriefRedisData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerSaveUgcRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ugc_type: "UgcType" = betterproto.enum_field(2)
    ugc_brief_redis_data: "UgcBriefRedisData" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class ServerPublishUgcReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(1)
    ugc_brief_redis_data: "UgcBriefRedisData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class ServerPublishUgcRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ugc_type: "UgcType" = betterproto.enum_field(2)
    ugc_guid: int = betterproto.uint64_field(3)
    version: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class ServerCheckUgcUpdateReq(betterproto.Message):
    ugc_type: "UgcType" = betterproto.enum_field(1)
    ugc_guid_version_map: Dict[int, int] = betterproto.map_field(
        2, betterproto.TYPE_UINT64, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ServerCheckUgcUpdateRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    ugc_type: "UgcType" = betterproto.enum_field(2)
    update_ugc_guid_list: List[int] = betterproto.uint64_field(3)
    not_find_ugc_guid_list: List[int] = betterproto.uint64_field(4)


@dataclass(eq=False, repr=False)
class ServerActivityGetFriendGiftDataReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    friend_uid: int = betterproto.uint32_field(2)
    give_gift_num_map: Dict[int, int] = betterproto.map_field(
        3, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ServerActivityGetFriendGiftDataRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    friend_uid: int = betterproto.uint32_field(3)
    give_gift_num_map: Dict[int, int] = betterproto.map_field(
        4, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )
    have_gift_num_map: Dict[int, int] = betterproto.map_field(
        5, betterproto.TYPE_UINT32, betterproto.TYPE_UINT32
    )


@dataclass(eq=False, repr=False)
class ServerActivityGetFriendGiftWishListReq(betterproto.Message):
    schedule_id: int = betterproto.uint32_field(1)
    friend_uid_list: List[int] = betterproto.uint32_field(2)
    reason: "FriendBriefRequestReason" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class ServerActivityGetFriendGiftWishListRsp(betterproto.Message):
    retcode: int = betterproto.int32_field(1)
    schedule_id: int = betterproto.uint32_field(2)
    friend_gift_wish_list: List[
        "ActivityFriendGiftWishData"
    ] = betterproto.message_field(3)
